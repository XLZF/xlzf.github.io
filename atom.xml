<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Harris Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-09T06:17:56.006Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Harris</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20221204装机记录</title>
    <link href="http://example.com/2022/12/05/20221204%20%E8%A3%85%E6%9C%BA%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/12/05/20221204%20%E8%A3%85%E6%9C%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2022-12-05T15:27:02.000Z</published>
    <updated>2022-12-09T06:17:56.006Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="20221204-装机笔记"><a href="#20221204-装机笔记" class="headerlink" title="20221204 装机笔记"></a>20221204 装机笔记</h1><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livescript">sudo apt-get install <span class="hljs-string">\</span><br>    apt-transport-https <span class="hljs-string">\</span><br>    ca-certificates <span class="hljs-string">\</span><br>    curl <span class="hljs-string">\</span><br>    gnupg-agent <span class="hljs-string">\</span><br>    software-properties-common<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -fsSL https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/ubuntu/g</span>pg | sudo apt-key add -<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt-key fingerprint <span class="hljs-number">0</span>EBFCD88<br></code></pre></td></tr></table></figure><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs smali">sudo<span class="hljs-built_in"> add-apt-repository </span>\<br>   <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \</span><br><span class="hljs-string">  $(lsb_release -cs) \</span><br><span class="hljs-string">  stable&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">update</span><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt-<span class="hljs-built_in">get</span> install docker-<span class="hljs-keyword">ce</span> docker-<span class="hljs-keyword">ce</span>-cli containerd.io<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo docker <span class="hljs-built_in">run</span> hello-world<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> docker.service<br></code></pre></td></tr></table></figure><h2 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">curl -L <span class="hljs-string">&quot;https://gitee.com/large_cat/docker-compose/raw/main/install.sh&quot;</span> <span class="hljs-string">| sh</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br></code></pre></td></tr></table></figure><h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> build -t resume:<span class="hljs-number">1.0.0.1</span> . <br></code></pre></td></tr></table></figure><h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run  -p <span class="hljs-number">5000</span>:<span class="hljs-number">5000</span> -d resume:<span class="hljs-number">1.0.0.1</span> --name resumev1001<br></code></pre></td></tr></table></figure><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>没啥用</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> snap install dotnet-sdk --classic --channel=<span class="hljs-number">6</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">sudo</span> snap alias <span class="hljs-keyword">dotnet</span>-sdk.<span class="hljs-keyword">dotnet</span> dotnet60<br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">sudo</span> snap install <span class="hljs-keyword">dotnet</span>-runtime-<span class="hljs-number">60</span> <span class="hljs-comment">--classic</span><br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">sudo</span> snap alias <span class="hljs-keyword">dotnet</span>-runtime-<span class="hljs-number">60</span>.<span class="hljs-keyword">dotnet</span> <span class="hljs-keyword">dotnet</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">DOTNET_ROOT</span>=/snap/dotnet-sdk/current<br></code></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs delphi"><span class="hljs-keyword">export</span> SSL_CERT_FILE=[path-<span class="hljs-keyword">to</span>-certificate-<span class="hljs-keyword">file</span>]<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">SSL_CERT_DIR</span>=<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/snap/</span>dotnet-sdk<span class="hljs-regexp">/current/</span>dotnet <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>dotnet<br></code></pre></td></tr></table></figure><h2 id="linux-运行-dotnet6"><a href="#linux-运行-dotnet6" class="headerlink" title="linux 运行 dotnet6"></a><code>linux</code> 运行 <code>dotnet6</code></h2><p>下载</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> wget https://download.visualstudio.microsoft.com/download/pr/cd0d0a4d-<span class="hljs-number">2</span>a6a-<span class="hljs-number">4</span>d0d-b42e-dfd3b880e222/<span class="hljs-number">008</span>a93f83aba6d1acf75ded3d2cfba24/dotnet-sdk-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">400</span>-linux-x64.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">sudo mkdir  dotnet<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> tar zxvf dotnet-sdk-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">400</span>-linux-x64.tar.gz -C dotnet<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">dotnet</span> --<span class="hljs-literal">info</span><br></code></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo vim <span class="hljs-regexp">/etc/</span>profile<br><br><span class="hljs-regexp">//</span>在文件尾部添加<br>export PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-regexp">/data/</span>dotnet<br>export DOTNET_ROOT=<span class="hljs-regexp">/data/</span>dotnet<br><span class="hljs-regexp">//</span>注：<span class="hljs-regexp">/data/</span>dotnet是我的存储路径，这里改成你自己的路径<br></code></pre></td></tr></table></figure><h2 id="重启网路服务指令"><a href="#重启网路服务指令" class="headerlink" title="重启网路服务指令"></a>重启网路服务指令</h2><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">netplan <span class="hljs-built_in">apply</span><br></code></pre></td></tr></table></figure><h2 id="快捷操作"><a href="#快捷操作" class="headerlink" title="快捷操作"></a>快捷操作</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">docker stop <span class="hljs-constructor">$(<span class="hljs-params">docker</span> <span class="hljs-params">ps</span> -<span class="hljs-params">a</span> -<span class="hljs-params">q</span>)</span><br><br>docker rm <span class="hljs-constructor">$(<span class="hljs-params">docker</span> <span class="hljs-params">ps</span> -<span class="hljs-params">a</span> -<span class="hljs-params">q</span>)</span><br><br>curl -X &#x27;GET&#x27; \<br>  &#x27;http:<span class="hljs-comment">//localhost:5000/WeatherForecast&#x27; \</span><br>  -H &#x27;accept: text/plain&#x27;<br></code></pre></td></tr></table></figure><h2 id="ubuntu开启-关闭防火墙"><a href="#ubuntu开启-关闭防火墙" class="headerlink" title="ubuntu开启/关闭防火墙"></a><code>ubuntu</code>开启/关闭防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">1、Alt+T打开终端，输入sudo ufw status回车，查看防火墙状态，inactive是关闭，active是开启。<br><br>2、使用sudo ufw <span class="hljs-built_in">enable</span>开启防火墙。<br><br>3、使用sudo ufw <span class="hljs-built_in">disable</span>关闭防火墙。<br></code></pre></td></tr></table></figure><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a><code>Dockerfile</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base<br><br>WORKDIR /app<br><br>EXPOSE 5000<br><br>FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build<br><br>WORKDIR /src<br><br>COPY . .<br><br>ENV ASPNETCORE_URLS=http://+:5000<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ENTRYPOINT [<span class="hljs-string">&quot;dotnet&quot;</span>, <span class="hljs-string">&quot;XLZF.ClothingManage.dll&quot;</span>]</span><br><br>ENTRYPOINT [&quot;dotnet&quot;]<br><br>CMD [&quot;Resume.DataBase.dll&quot;]<br></code></pre></td></tr></table></figure><h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker-compose"></a><code>Docker-compose</code></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3.0&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">resumedatabase:</span><br>    <span class="hljs-attr">build:</span><br>      <span class="hljs-attr">context:</span> <span class="hljs-string">./</span><br>      <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">Dockerfile</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">5000</span><span class="hljs-string">:5000</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my-network</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">my-network:</span><br>    <span class="hljs-attr">external:</span><br>     <span class="hljs-attr">name:</span> <span class="hljs-string">mynet</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker-compose up -d --build<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker-compose down<br></code></pre></td></tr></table></figure><h2 id="Docker-Portainer-io"><a href="#Docker-Portainer-io" class="headerlink" title="Docker Portainer.io"></a><code>Docker Portainer.io</code></h2><p>图形化配置<code>docker-compose</code></p><h2 id="Docker-for-Vue"><a href="#Docker-for-Vue" class="headerlink" title="Docker for Vue"></a><code>Docker for Vue</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">1. docker pull nginx<br>2. docker run --name=nginx -d -p 4030:80 nginx<br>3. 添加Dockerfile<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置基础镜像，这里使用最新的nginx镜像，前面已经拉取过了</span><br>FROM nginx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">定义作者</span><br>MAINTAINER Harris<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将dist文件中的内容复制到 /usr/share/nginx/html/ 这个目录下面</span><br>COPY /dist/  /usr/share/nginx/html/<br>4. docker build -t dockervue .<br>5. docker run --name=dockervue -d -p 7681:80 dockervue<br></code></pre></td></tr></table></figure><h2 id="net-6-0服务-vue-docker-compose"><a href="#net-6-0服务-vue-docker-compose" class="headerlink" title=".net 6.0服务+vue docker-compose"></a>.net 6.0服务+vue docker-compose</h2><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0&quot;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">resumedatabase</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">resumedatabase</span><br>    <span class="hljs-attribute">build</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">context</span><span class="hljs-punctuation">:</span> <span class="hljs-string">./database/1001/</span><br>      <span class="hljs-attribute">dockerfile</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Dockerfile</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">5000:5000</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my-network</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>  <span class="hljs-attribute">resumesystem</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">resumesystem</span><br>    <span class="hljs-attribute">build</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">context</span><span class="hljs-punctuation">:</span> <span class="hljs-string">./system/1001/</span><br>      <span class="hljs-attribute">dockerfile</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Dockerfile</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">5001:5000</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my-network</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>  <span class="hljs-attribute">resumevue</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">resumevue</span><br>    <span class="hljs-attribute">build</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">context</span><span class="hljs-punctuation">:</span> <span class="hljs-string">./vue/</span><br>      <span class="hljs-attribute">dockerfile</span><span class="hljs-punctuation">:</span> <span class="hljs-string">Dockerfile</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">6666:80</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my-network</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br><br><span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">my-network</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">external</span><span class="hljs-punctuation">:</span><br>     <span class="hljs-attribute">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">mynet</span><br></code></pre></td></tr></table></figure><p>执行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">docker-compose up -d <span class="hljs-comment">--build</span><br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@instance-dgf6qfwk:/netcore/resume# docker-compose up -d --build<br>Building resumedatabase<br>Step 1/9 : FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">846be731181b</span><br>Step 2/9 : WORKDIR /app<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">24d99f83aca9</span><br>Step 3/9 : EXPOSE 5000<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">67e35cd2b60c</span><br>Step 4/9 : FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">55e890ae9ccb</span><br>Step 5/9 : WORKDIR /src<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">784fa469cc01</span><br>Step 6/9 : COPY . .<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">45678be9eac6</span><br>Step 7/9 : ENV ASPNETCORE_URLS=http://+:5000<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">fcdc676d4bac</span><br>Step 8/9 : ENTRYPOINT [&quot;dotnet&quot;]<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">9063f5dcc256</span><br>Step 9/9 : CMD [&quot;Resume.DataBase.dll&quot;]<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">6c06c1ebc98d</span><br>Successfully built 6c06c1ebc98d<br>Successfully tagged resume_resumedatabase:latest<br>Building resumesystem<br>Step 1/9 : FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">846be731181b</span><br>Step 2/9 : WORKDIR /app<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">24d99f83aca9</span><br>Step 3/9 : EXPOSE 5000<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">67e35cd2b60c</span><br>Step 4/9 : FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">55e890ae9ccb</span><br>Step 5/9 : WORKDIR /src<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">784fa469cc01</span><br>Step 6/9 : COPY . .<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">5a131cdf9d7c</span><br>Step 7/9 : ENV ASPNETCORE_URLS=http://+:5000<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">7115dd76d339</span><br>Step 8/9 : ENTRYPOINT [&quot;dotnet&quot;]<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">d9fcf4d6a8bb</span><br>Step 9/9 : CMD [&quot;Resume.System.dll&quot;]<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">ed79d892ccef</span><br>Successfully built ed79d892ccef<br>Successfully tagged resume_resumesystem:latest<br>Building resumevue<br>Step 1/3 : FROM nginx<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">88736fe82739</span><br>Step 2/3 : MAINTAINER Harris<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">437cf52b5c5d</span><br>Step 3/3 : COPY /dist/  /usr/share/nginx/html/<br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">Using cache</span><br><span class="hljs-meta prompt_"> ---&gt; </span><span class="language-bash">eff9caddd35d</span><br>Successfully built eff9caddd35d<br>Successfully tagged resume_resumevue:latest<br>Creating resumedatabase ... done<br>Creating resumevue      ... done<br>Creating resumesystem   ... done<br>root@instance-dgf6qfwk:/netcore/resume# docker ps<br>CONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                       NAMES<br>bf074243b66a   resume_resumesystem     &quot;dotnet Resume.Syste…&quot;   8 seconds ago   Up 5 seconds   0.0.0.0:5001-&gt;5000/tcp, :::5001-&gt;5000/tcp   resumesystem<br>5c48eaa90d29   resume_resumevue        &quot;/docker-entrypoint.…&quot;   8 seconds ago   Up 5 seconds   0.0.0.0:5002-&gt;80/tcp, :::5002-&gt;80/tcp       resumevue<br>e010e4558f08   resume_resumedatabase   &quot;dotnet Resume.DataB…&quot;   8 seconds ago   Up 6 seconds   0.0.0.0:5000-&gt;5000/tcp, :::5000-&gt;5000/tcp   resumedatabase<br></code></pre></td></tr></table></figure><p>文件目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">|--netcore<br>|--netcore/resume<br>|--netcore<span class="hljs-regexp">/resume/</span>docker-compose.yml (重要)<br>|--netcore<span class="hljs-regexp">/resume/</span>database<br>|--netcore<span class="hljs-regexp">/resume/</span>database<span class="hljs-regexp">/1001/</span><br>|--netcore<span class="hljs-regexp">/resume/</span>database<span class="hljs-regexp">/1001/</span>&#123;database发布文件&#125;<br>|--netcore<span class="hljs-regexp">/resume/</span>system<br>|--netcore<span class="hljs-regexp">/resume/</span>system<span class="hljs-regexp">/1001/</span><br>|--netcore<span class="hljs-regexp">/resume/</span>system<span class="hljs-regexp">/1001/</span>&#123;system发布文件&#125;<br>|--netcore<span class="hljs-regexp">/resume/</span>vue<br>|--netcore<span class="hljs-regexp">/resume/</span>vue<span class="hljs-regexp">/dist/</span><br>|--netcore<span class="hljs-regexp">/resume/</span>vue<span class="hljs-regexp">/dist/</span>&#123;vue发布文件&#125;<br>|--netcore<span class="hljs-regexp">/resume/</span>vue/Dockerfile<br></code></pre></td></tr></table></figure><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><p>这里主要是pull 5.7版本，高版本修改密码有问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull mysql:5.7<br></code></pre></td></tr></table></figure><p>这个映射不好使，问题后面在看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -p 3306:3306 --name mysql -v /mydata/mysql/log:/var/log/mysql -v /mydata/mysql/data:/var/lib/mysql -v /mydata/mysql/conf:/etc/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7<br></code></pre></td></tr></table></figure><p>这个好使</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -p 3306:3306 --name mysql -v /mydata/mysql/log:/var/log/mysql -v /mydata/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7<br></code></pre></td></tr></table></figure><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p>docker-compose.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">version: &quot;3.1&quot;<br>services:<br>  jenkins:<br>    image: jenkins/jenkins:2.332.3-lts<br>    container_name: jenkins<br>    ports:<br>      - 9999:8080<br>      - 50000:50000<br>    volumes:<br>      - /root/jenkins/data/:/var/jenkins_home/<br></code></pre></td></tr></table></figure><p>如有有报错就是权限的事</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@jenkins:~/jenkins# docker logs jenkins<br>touch: cannot touch &#x27;/var/jenkins_home/copy_reference_file.log&#x27;: Permission denied<br>Can not write to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?<br></code></pre></td></tr></table></figure><p>解决:给映射的data文件夹赋权限</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@jenkins</span><span class="hljs-symbol">:~/jenkins</span><span class="hljs-comment"># chmod -R 777 data</span><br></code></pre></td></tr></table></figure><p>也可以参考</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -u root --rm -d -p 3000:8080 \<br>--name jenkins \<br>-v /etc/localtime:/etc/localtime \<br>-v /usr/bin/docker:/usr/bin/docker \<br>-v /var/run/docker.sock:/var/run/docker.sock \<br>-v /home/dockerVolumes2/jenkins_home:/var/jenkins_home \<br>registry.cn-hangzhou.aliyuncs.com/bcvp/jenkins_with_dntcore3.1_5.0_6.0-cnpm_by_docker:latest<br></code></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p><a href="https://www.modb.pro/db/437089">Jenkins自动化构建.Net6项目 - 墨天轮 (modb.pro)</a></p><p>pull</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull jenkins/jenkins<br></code></pre></td></tr></table></figure><p>创建映射文件夹并且赋权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /var/docker_data/jenkins/jenkins_home<br><br>mkdir -p /var/docker_data/jenkins/settings<br><br>mkdir -p /var/docker_data/jenkins/root<br><br>chmod 777 /var/docker_data/jenkins/jenkins_home<br><br>chmod 777 /var/docker_data/jenkins/settings<br><br>chmod 777 /var/docker_data/jenkins/root<br><br>chmod -R 777 /var/docker_data/jenkins<br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo docker run --name usJenkins --user=$UID:$(id -g $USER) -d -p 10240:8080 -p 10241:50000 -v /etc/localtime:/etc/localtime -v /var/docker_data/jenkins/jenkins_home:/var/jenkins_home -v /var/docker_data/jenkins/root:/root -v /var/docker_data/jenkins/settings:/var/settings  -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):/usr/bin/docker --privileged=true --restart=always jenkins/jenkins<br></code></pre></td></tr></table></figure><h3 id="Jenkins-配置-gitee秘钥"><a href="#Jenkins-配置-gitee秘钥" class="headerlink" title="Jenkins 配置 gitee秘钥"></a>Jenkins 配置 gitee秘钥</h3><p><a href="https://blog.csdn.net/redrose2100/article/details/121627320">Jenkins凭据管理—-配置Gitee私钥_redrose2100的博客-CSDN博客_jenkins配置git密钥</a></p><h2 id="Docker-for-Gitlab"><a href="#Docker-for-Gitlab" class="headerlink" title="Docker for Gitlab"></a>Docker for Gitlab</h2><h3 id="第一种-1"><a href="#第一种-1" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull gitlab/gitlab-ce:latest<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 创建一个用于存放gitlab数据的目录</span><br>mkdir -p <span class="hljs-regexp">/opt/</span>docker/gitlab<br><span class="hljs-comment"># 进入到创建的目录下</span><br>cd <span class="hljs-regexp">/opt/</span>docker/gitlab<br><span class="hljs-comment"># 新建一个docker-compose.yml文件</span><br>vim docker-compose.yml<br></code></pre></td></tr></table></figure><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3.6&#x27;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">web</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;gitlab/gitlab-ee:latest&#x27;</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;gitlab&#x27;</span><br>    <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;gitlab&#x27;</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">GITLAB_OMNIBUS_CONFIG</span><span class="hljs-punctuation">:</span> <span class="hljs-string">|</span><br>        external_url &#x27;http://192.168.31.95:8929&#x27;<br>        <span class="hljs-attribute">gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;] = 2224</span><br><span class="hljs-attribute">    ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;8929:8929&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;2224:22&#x27;</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;$GITLAB_HOME/config:/etc/gitlab&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;$GITLAB_HOME/logs:/var/log/gitlab&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;$GITLAB_HOME/data:/var/opt/gitlab&#x27;</span><br>    <span class="hljs-attribute">shm_size</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;256m</span><br></code></pre></td></tr></table></figure><p>注意，其中的external_url后面的ip地址需要修改为自己服务器的内网ip，完成后保存退出。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将下面的地址改成你存放gitlab持久化数据的地址，比如我的地址为/opt/docker/gitlab</span><br>export GITLAB_HOME=/opt/docker/gitlab<br>docker-compose up -d<br></code></pre></td></tr></table></figure><p>放行8929和2224两个端口。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">firewall-cmd <span class="hljs-params">--add-port=</span>&#123;8929,2224&#125;<span class="hljs-string">/tcp</span> <span class="hljs-params">--permanent</span><br>firewall-cmd <span class="hljs-params">--reload</span><br></code></pre></td></tr></table></figure><p>使用以下命令查看一下初始密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it gitlab cat /etc/gitlab/initial_root_password<br></code></pre></td></tr></table></figure><p>登录 root - 刚查看的密码</p><h3 id="第二种-1"><a href="#第二种-1" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">```<br><br><br><br>```dockerfile<br>version: &quot;3&quot;<br>services:<br>  gitlab:<br>    image: gitlab/gitlab-ce:13.1.2-ce.0<br>    container_name: &#x27;devops-gitlab&#x27;<br>    restart: always<br>    hostname: &#x27;&lt;your hostname&gt;&#x27;<br>    environment:<br>      GITLAB_OMNIBUS_CONFIG: |<br>        external_url &quot;&lt;your gitlab url&gt;&quot;<br>        gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;] = 23<br>        gitlab_rails[&#x27;time_zone&#x27;] = &#x27;Asia/Shanghai&#x27;<br>        gitlab_rails[&#x27;smtp_enable&#x27;] = true<br>        gitlab_rails[&#x27;smtp_address&#x27;] = &quot;smtp.exmail.qq.com&quot;<br>        gitlab_rails[&#x27;smtp_port&#x27;] = 465<br>        gitlab_rails[&#x27;smtp_user_name&#x27;] = &quot;&lt;your qq email&gt;&quot;<br>        gitlab_rails[&#x27;smtp_password&#x27;] = &quot;xCcqh*L4jkqFCS&quot;<br>        gitlab_rails[&#x27;smtp_authentication&#x27;] = &quot;login&quot;<br>        gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true<br>        gitlab_rails[&#x27;smtp_tls&#x27;] = true<br>        gitlab_rails[&#x27;gitlab_email_from&#x27;] = &#x27;&lt;your qq email&gt;&#x27;<br>        gitlab_rails[&#x27;smtp_domain&#x27;] = &quot;exmail.qq.com&quot;<br>    ports:<br>      - &#x27;81:80&#x27;<br>      - &#x27;443:443&#x27;<br>      - &#x27;23:22&#x27;<br>    volumes:<br>      - &#x27;/gitlab/config:/etc/gitlab&#x27;<br>      - &#x27;/gitlab/logs:/var/log/gitlab&#x27;<br>      - &#x27;/gitlab/data:/var/opt/gitlab&#x27;<br>    logging:<br>      driver: &quot;json-file&quot;<br>      options:<br>        max-size: &quot;20m&quot;<br>        max-file: &quot;10&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="note" scheme="http://example.com/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>动态调用WebService</title>
    <link href="http://example.com/2022/05/20/%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8WebService/"/>
    <id>http://example.com/2022/05/20/%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8WebService/</id>
    <published>2022-05-20T02:00:42.000Z</published>
    <updated>2022-05-20T02:05:41.293Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="动态调用WebService"><a href="#动态调用WebService" class="headerlink" title="动态调用WebService"></a>动态调用WebService</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">btnSubmit_Click</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">string</span>.IsNullOrEmpty(txtUrl.Text.Trim()))<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口地址不能为空！&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (cbInterFace.EditValue==<span class="hljs-literal">null</span>)<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口名称不能为空！&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(txtParameter.Text.Trim()))<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口参数不能为空！&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 动态调用 webservices地址</span><br>        <span class="hljs-built_in">object</span>[] args = <span class="hljs-keyword">new</span> <span class="hljs-built_in">object</span>[<span class="hljs-number">1</span>];<br>        args[<span class="hljs-number">0</span>] = (txtParameter.Text.Trim());<br>        <span class="hljs-built_in">object</span> result = WebServiceHelper.InvokeWebService(txtUrl.Text, cbInterFace.Text.Trim(), args);<br>        <span class="hljs-built_in">string</span> message = result.ToString();<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>            <span class="hljs-comment">//格式化XMl</span><br>            txtXml.Text = formatXml(message);<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Exception ex)<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口调取出错：&quot;</span> + ex.ToString());<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>库</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WebServiceHelper</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 动态调用WebService动态调用地址</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; summary&gt;</span>           </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 动态调用web服务         </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; /summary&gt;</span>          </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; param name=&quot;url&quot;&gt;</span>WSDL服务地址<span class="hljs-doctag">&lt; /param&gt;</span> </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; param name=&quot;methodname&quot;&gt;</span>方法名<span class="hljs-doctag">&lt; /param&gt;</span>           </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; param name=&quot;args&quot;&gt;</span>参数<span class="hljs-doctag">&lt; /param&gt;</span>           </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; returns&gt;</span><span class="hljs-doctag">&lt; /returns&gt;</span>          </span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> <span class="hljs-title">InvokeWebService</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> methodname, <span class="hljs-built_in">object</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> WebServiceHelper.InvokeWebService(url, <span class="hljs-literal">null</span>, methodname, args);<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 动态调用web服务</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;url&quot;&gt;</span>WSDL服务地址<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;classname&quot;&gt;</span>服务接口类名<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;methodname&quot;&gt;</span>方法名<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;args&quot;&gt;</span>参数值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> <span class="hljs-title">InvokeWebService</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> classname, <span class="hljs-built_in">string</span> methodname, <span class="hljs-built_in">object</span>[] args</span>)</span><br>    &#123;<br><br>        <span class="hljs-built_in">string</span> @namespace = <span class="hljs-string">&quot;EnterpriseServerBase.WebService.DynamicWebCalling&quot;</span>;<br>        <span class="hljs-keyword">if</span> ((classname == <span class="hljs-literal">null</span>) || (classname == <span class="hljs-string">&quot;&quot;</span>))<br>        &#123;<br>            classname = WebServiceHelper.GetWsClassName(url);<br>        &#125;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br><br>            <span class="hljs-comment">//获取WSDL   </span><br>            WebClient wc = <span class="hljs-keyword">new</span> WebClient();<br>            Stream stream = wc.OpenRead(url + <span class="hljs-string">&quot;?WSDL&quot;</span>);<br>            ServiceDescription sd = ServiceDescription.Read(stream);<br>            <span class="hljs-comment">//注意classname一定要赋值获取 </span><br>            classname = sd.Services[<span class="hljs-number">0</span>].Name;<br><br>            ServiceDescriptionImporter sdi = <span class="hljs-keyword">new</span> ServiceDescriptionImporter();<br>            sdi.AddServiceDescription(sd, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>            CodeNamespace cn = <span class="hljs-keyword">new</span> CodeNamespace(@namespace);<br><br>            <span class="hljs-comment">//生成客户端代理类代码          </span><br>            CodeCompileUnit ccu = <span class="hljs-keyword">new</span> CodeCompileUnit();<br>            ccu.Namespaces.Add(cn);<br>            sdi.Import(cn, ccu);<br>            CSharpCodeProvider icc = <span class="hljs-keyword">new</span> CSharpCodeProvider();<br><br><br>            <span class="hljs-comment">//设定编译参数                 </span><br>            CompilerParameters cplist = <span class="hljs-keyword">new</span> CompilerParameters();<br>            cplist.GenerateExecutable = <span class="hljs-literal">false</span>;<br>            cplist.GenerateInMemory = <span class="hljs-literal">true</span>;<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.dll&quot;</span>);<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.XML.dll&quot;</span>);<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.Web.Services.dll&quot;</span>);<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.Data.dll&quot;</span>);<br>            <span class="hljs-comment">//编译代理类                 </span><br>            CompilerResults cr = icc.CompileAssemblyFromDom(cplist, ccu);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">true</span> == cr.Errors.HasErrors)<br>            &#123;<br>                System.Text.StringBuilder sb = <span class="hljs-keyword">new</span> System.Text.StringBuilder();<br>                <span class="hljs-keyword">foreach</span> (System.CodeDom.Compiler.CompilerError ce <span class="hljs-keyword">in</span> cr.Errors)<br>                &#123;<br>                    sb.Append(ce.ToString());<br>                    sb.Append(System.Environment.NewLine);<br>                &#125;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(sb.ToString());<br>            &#125;<br>            <span class="hljs-comment">//生成代理实例，并调用方法                 </span><br>            System.Reflection.Assembly assembly = cr.CompiledAssembly;<br>            Type t = assembly.GetType(@namespace + <span class="hljs-string">&quot;.&quot;</span> + classname, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>);<br>            <span class="hljs-built_in">object</span> obj = Activator.CreateInstance(t);<br>            System.Reflection.MethodInfo mi = t.GetMethod(methodname);<br>            <span class="hljs-keyword">return</span> mi.Invoke(obj, args);<br><br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(ex.InnerException.Message, <span class="hljs-keyword">new</span> Exception(ex.InnerException.StackTrace));<br>            <span class="hljs-comment">// return &quot;Error:WebService调用错误！&quot; + ex.Message;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetWsClassName</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> wsUrl</span>)</span><br>    &#123;<br>        <span class="hljs-built_in">string</span>[] parts = wsUrl.Split(<span class="hljs-string">&#x27;/&#x27;</span>);<br>        <span class="hljs-built_in">string</span>[] pps = parts[parts.Length - <span class="hljs-number">1</span>].Split(<span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-keyword">return</span> pps[<span class="hljs-number">0</span>];<br>    &#125;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">代码片段</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>Wireshark-三次握手四次挥手</title>
    <link href="http://example.com/2022/05/09/wireshark-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/"/>
    <id>http://example.com/2022/05/09/wireshark-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</id>
    <published>2022-05-09T08:27:02.000Z</published>
    <updated>2022-05-19T07:34:29.085Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091634792.jpeg"></p><h3 id="Wireshark-安装"><a href="#Wireshark-安装" class="headerlink" title="Wireshark 安装"></a>Wireshark 安装</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091637432.png" alt="image-20220509162910659"></p><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091637794.png" alt="image-20220509162745845"></p><h3 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091637925.png" alt="image-20220509162750770"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="抓包" scheme="http://example.com/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://example.com/2022/05/07/%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2022/05/07/%E7%AE%97%E6%B3%95/</id>
    <published>2022-05-07T13:57:08.000Z</published>
    <updated>2022-11-23T05:34:35.868Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li>输入一个数字n，求第一个大于该数字的回文数字</li></ol><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>808</td><td>818</td></tr><tr><td>2133</td><td>2222</td></tr></tbody></table><ol start="2"><li>输入两个人的苹果个数的和与差，确定他们的苹果个数。 输入：苹果的数量和，苹果的数量差，输出： 两人各自苹果的个数。（请用计算机方法，而不是数学公式计算）</li></ol><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>10，2</td><td>6，4</td></tr><tr><td>20，6</td><td>13，7</td></tr><tr><td>30，9</td><td>无</td></tr></tbody></table><ol start="3"><li></li></ol><p>设有 n 个正整数<code>a1，a2，a3，a4……an</code> ，将它们联接成一排，相邻数字首尾相接，组成一个最大的整数。</p><p>输入格式</p><p>第一行有一个整数，表示数字个数 n。</p><p>第二行有 n个整数，表示给出的 n个整数值。</p><p>输出格式</p><p>一个正整数，表示最大的整数</p><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>3  13 312 343</td><td>34331213</td></tr><tr><td>4  7 13 4 246</td><td>7424613</td></tr></tbody></table><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">HuiwenNumber</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 控制台主方法</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;args&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;获取回数：1；获取和差值：2；获取正整数：3&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> result = Console.ReadLine();<br><br>            <span class="hljs-keyword">switch</span> (result)<br>            &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;1&quot;</span>:<br>                    Gethuishu();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;2&quot;</span>:<br>                    GetHeCha();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;3&quot;</span>:<br>                    GetInt();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-literal">default</span>:<br>                    Console.WriteLine(<span class="hljs-string">&quot;请输入提示的值！&quot;</span>);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取回数</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Gethuishu</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;请输入初始数字：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> num = Console.ReadLine();<br><br>            GetHuiShu.DiGui(num);<br><br>            Console.ReadLine();<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取和差数</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GetHeCha</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;请输入和：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> heNum = Console.ReadLine();<br><br>            Console.WriteLine(<span class="hljs-string">&quot;请输入差：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> chaNum = Console.ReadLine();<br><br>            <span class="hljs-built_in">int</span> heNum_ = Convert.ToInt32(heNum);<br><br>            <span class="hljs-built_in">int</span> chaNum_ = Convert.ToInt32(chaNum);<br><br>            <span class="hljs-built_in">int</span> MaxNum = (heNum_ + chaNum_) / <span class="hljs-number">2</span>;<br><br>            <span class="hljs-built_in">int</span> MinNum = (heNum_ - chaNum_) / <span class="hljs-number">2</span>;<br><br>            Console.WriteLine(<span class="hljs-string">&quot;A有苹果&quot;</span> + MaxNum + <span class="hljs-string">&quot;个,B有苹果&quot;</span> + MinNum + <span class="hljs-string">&quot;个&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取正整数,通过输入的整数，相连接组成最大的整数</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GetInt</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;请输入整数个数：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> numlength = Console.ReadLine();<br><br>            List&lt;<span class="hljs-built_in">int</span>&gt; listYuan = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">int</span>&gt;();<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; Convert.ToInt32(numlength); i++)<br>            &#123;<br>                Console.WriteLine(<span class="hljs-string">&quot;请输入第&quot;</span> + i + <span class="hljs-string">&quot;个数字:&quot;</span>);<br><br>                <span class="hljs-built_in">string</span> numarr = Console.ReadLine();<br><br>                listYuan.Add(Convert.ToInt32(numarr));<br>            &#125;<br><br>            List&lt;IntList&gt; listEntity = <span class="hljs-keyword">new</span> List&lt;IntList&gt;();<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; listYuan.Count; i++)<br>            &#123;<br>                listEntity.Add(<span class="hljs-keyword">new</span> IntList &#123; <br>                    IntIndex = i, <br>                    IntYuan = listYuan[i], <br>                    IntSub = Convert.ToInt32(listYuan[i].ToString().Substring(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)) <br>                &#125;);<br>            &#125;<br><br>            maopao(listEntity);<br><br>            <span class="hljs-built_in">string</span> ZDZZS = <span class="hljs-string">&quot;&quot;</span>;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = listEntity.Count - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--)<br>            &#123;<br>                ZDZZS += listEntity[i].IntYuan;<br>            &#125;<br><br>            Console.WriteLine(<span class="hljs-string">&quot;最大正整数&quot;</span> + ZDZZS);<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 冒泡排序</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;intLists&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;IntList&gt; <span class="hljs-title">maopao</span>(<span class="hljs-params">List&lt;IntList&gt; intLists</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; intLists.Count - <span class="hljs-number">1</span>; i++)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; intLists.Count - <span class="hljs-number">1</span> - i; j++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> (intLists[j].IntSub &gt; intLists[j + <span class="hljs-number">1</span>].IntSub)<br>                    &#123;<br>                        IntList temp = intLists[j];<br>                        intLists[j] = intLists[j + <span class="hljs-number">1</span>];<br>                        intLists[j + <span class="hljs-number">1</span>] = temp;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> intLists;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">GetHuiShu</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 递归</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;number&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DiGui</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> number</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (IsHuiWenNum(number))<br>            &#123;<br>                Console.WriteLine(number + <span class="hljs-string">&quot;是回文数字！&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-built_in">int</span> newn = Convert.ToInt32(number);<br><br>                newn += <span class="hljs-number">1</span>;<br><br>                DiGui(newn.ToString());<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 判断是否为回文数字</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;Num&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsHuiWenNum</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> Num</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//先判断数字长度</span><br>            <span class="hljs-built_in">int</span> mo = Num.Length % <span class="hljs-number">2</span>;<br>            <span class="hljs-built_in">string</span> hou;<br>            <span class="hljs-built_in">string</span> qian;<br>            <span class="hljs-comment">//长度是奇数</span><br>            <span class="hljs-keyword">if</span> (mo &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-built_in">int</span> chang = (Num.Length - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br><br>                qian = Num.Substring(<span class="hljs-number">0</span>, chang);<br><br>                hou = Num.Substring((Num.Length - chang - <span class="hljs-number">1</span>), chang);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                qian = Num.Substring(<span class="hljs-number">0</span>, Num.Length / <span class="hljs-number">2</span>);<br><br>                hou = Num.Substring(Num.Length / <span class="hljs-number">2</span>, Num.Length / <span class="hljs-number">2</span>);<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (qian == ReverseStr(hou))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 字符串反转</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;original&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReverseStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> original</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">char</span>[] arr = original.ToCharArray();<br>            Array.Reverse(arr);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(arr);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IntList</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> IntYuan &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> IntIndex &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> IntSub &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="运行截图"><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h3><p>第一题</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205072210674.png" alt="image-20220507220813301"></p><p>第二题</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205072210233.png" alt="image-20220507220853011"></p><p>第三题</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205072211758.png" alt="image-20220507221036084"></p>]]></content>
    
    
    <summary type="html">记录一下</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法列表" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>CSharp-关键字</title>
    <link href="http://example.com/2022/05/06/CSharp-%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://example.com/2022/05/06/CSharp-%E5%85%B3%E9%94%AE%E5%AD%97/</id>
    <published>2022-05-06T01:17:14.000Z</published>
    <updated>2023-02-10T08:39:28.145Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-关键字"><a href="#C-关键字" class="headerlink" title="C# 关键字"></a>C# 关键字</h1><h2 id="Abstract（抽象-）"><a href="#Abstract（抽象-）" class="headerlink" title="Abstract（抽象 ）"></a>Abstract（抽象 ）</h2><h2 id="Virtual（虚方法）"><a href="#Virtual（虚方法）" class="headerlink" title="Virtual（虚方法）"></a>Virtual（虚方法）</h2><h2 id="Abstract-和-Virtual-区别"><a href="#Abstract-和-Virtual-区别" class="headerlink" title="Abstract 和 Virtual 区别"></a>Abstract 和 Virtual 区别</h2><p>在C#中virtual和abstract两者是都为了让子类中心定义，来覆盖父类的定义。</p><ol><li><p>virtual（虚方法）或者（abstract）抽象方法是不能私有的，二者中private成员是不能被子类访问的。</p></li><li><p>virtual可以被子类重写，abstract必须被子类重写。</p></li><li><p>如果重写了virtual，子类方法中必须用override来实现方法的重写</p></li><li><p>如果类成员被abstract修饰，那么该类必须也添加abstract。抽象类才有抽象方法</p></li></ol>]]></content>
    
    
    <summary type="html">温故而知新，可以为师矣。</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
    <category term="Base" scheme="http://example.com/tags/Base/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://example.com/2022/05/05/Csharp-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2022/05/05/Csharp-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-05-05T09:38:11.000Z</published>
    <updated>2022-11-17T06:04:20.189Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="1-设计模式-代理模式"><a href="#1-设计模式-代理模式" class="headerlink" title="1. 设计模式-代理模式"></a>1. 设计模式-代理模式</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>代理模式（<code>Proxy Pattern</code>）。属于结构型模式。为其它对象提供一种代理以控制对该对象的访问。</p><p>代理的概念很简单，就是想调用A类方法时，不直接调用，而是通过调用代理B类的方法，由B类方法去调用A类的方法。</p><p>模式中的角色</p><ol><li><code>Subject</code>（抽象对象）：它声明了真实对象和代理对象的共同接口，这样一来在任何使用真实对象的地方都可以使用代理对象，客户端通常需要针对抽象对象角色进行编程。</li><li><code>Proxy</code>（代理对象）：代理对象与真实对象实现相同的接口，所以它能够在任何时刻都能够代理真实对象。代理对象内部包含有对真实对象的引用，所以她可以操作真实对象，同时也可以附加其他的操作，相当于对真实对象进行封装。</li><li><code>RealSubject</code>（真实对象）：它定义了所代表的真实对象，在真实对象角色中实现了真实的业务操作，客户端可以通过代理对象间接调用真实对象中定义的操作。</li></ol><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><p>一个害羞男孩追求一个叫如花的女孩，但是自己不敢送礼物，就找了一个朋友代理他给如花送礼物</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 送礼物的人 （抽象主题角色）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">GiveGiftPerson</span><br>&#123;<br>    <span class="hljs-comment">//送礼物功能</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GiveGift</span>()</span>;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 害羞男孩  （真实主题角色）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ShyBoy</span> : <span class="hljs-title">GiveGiftPerson</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GiveGift</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;害羞男孩送礼物给如花~~&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 害羞男孩的朋友（代理主题角色）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Friend</span> : <span class="hljs-title">GiveGiftPerson</span><br>&#123;<br>    <span class="hljs-comment">//引用真实主题实例</span><br>    ShyBoy shyboy = <span class="hljs-keyword">new</span> ShyBoy();<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GiveGift</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//朋友一顿分析后，觉得如花是个好人</span><br>        <span class="hljs-built_in">bool</span> IsRuhuaGood = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (IsRuhuaGood)<br>        &#123;<br>            <span class="hljs-comment">//调用真实主题的方法</span><br>            shyboy.GiveGift();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//因为不能直接访问到真实对象所以我们不能直接new ShyBoy()去送礼物。</span><br><br>        <span class="hljs-comment">//代码中使用的是代理对象</span><br>        Friend friend = <span class="hljs-keyword">new</span> Friend();<br>        friend.GiveGift();<br>        Console.ReadKey();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol><li>代理模式能够将调用用于真正被调用的对象隔离，在一定程度上降低了系统的耦合度。</li><li>客户端可以针对抽象主题角色进行编程，增加和更换代理类无须修改源代码，符合开闭原则，系统具有较好的灵活性和可扩展性。</li></ol><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ol><li>由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢，例如保护代理。</li><li>实现代理模式需要额外的工作，而且有些代理模式的实现过程较为复杂，例如远程代理。</li></ol><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ol><li>当客户端对象需要访问远程主机中的对象时可以使用远程代理</li><li>当需要用一个消耗资源较少的对象来代表一个消耗资源较多的对象，从而降低系统开销、缩短运行时间时可以使用虚拟代理，例如一个对象需要很长时间才能完成加载时。</li><li>当需要为某一个被频繁访问的操作结果提供一个临时存储空间，以供多个客户端共享访问这些结果时可以使用缓冲代理。通过使用缓冲代理，系统无须在客户端每一次访问时都重新执行操作，只需直接从临时缓冲区获取操作结果即可。</li><li>当需要控制对一个对象的访问，为不同用户提供不同级别的访问权限时可以使用保护代理。</li><li>当需要为一个对象的访问（引用）提供一些额外的操作时可以使用智能引用代理。</li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li>远程代理(Remote Proxy)：为一个位于不同的地址空间的对象提供一个本地的代理对象，这个不同的地址空间可以是在同一台主机中，也可是在另一台主机中，远程代理又称为大使(Ambassador)。</li><li>虚拟代理(Virtual Proxy)：如果需要创建一个资源消耗较大的对象，先创建一个消耗相对较小的对象来表示，真实对象只在需要时才会被真正创建。</li><li>保护代理(Protect Proxy)：控制对一个对象的访问，可以给不同的用户提供不同级别的使用权限。</li><li>缓冲代理(Cache Proxy)：为某一个目标操作的结果提供临时的存储空间，以便多个客户端可以共享这些结果。</li><li>智能引用代理(Smart Reference Proxy)：当一个对象被引用时，提供一些额外的操作，例如将对象被调用的次数记录下来等。</li></ol><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://zhuanlan.zhihu.com/p/346511886">C#设计模式笔记之代理模式 (Proxy Pattern) - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/yuyangbk/p/13958411.html">C#设计模式——代理模式 - 心中的天空之城 - 博客园 (cnblogs.com)</a></p><h2 id="2-设计模式-建造者模式"><a href="#2-设计模式-建造者模式" class="headerlink" title="2. 设计模式-建造者模式"></a>2. 设计模式-建造者模式</h2><h3 id="一句话"><a href="#一句话" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>将一个复杂对象的构建与他的表示分离出来，使得同样的构建过程构建不同的对象。</p></blockquote><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>拿组件电脑方案来举例</p><p>现在市面上组装机的各有不同，有不同的氪金方案。但是方案归方案，无外乎就是</p><h4 id="部件"><a href="#部件" class="headerlink" title="部件"></a>部件</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 电脑部件</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Product</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> CPU</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CPUNAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 风扇</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FANNAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 内存</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> MEMORY &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 硬盘</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> HARDDISK &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>那现在抽象这些个方法，意思就是如果要安装一部电脑，需要操作这些个步骤。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 构造者 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Builder</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装CPU</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_CPU</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装风扇</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_FAN</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装内存条</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_MEMORY</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装硬盘</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_DARDDISK</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 返回安装的电脑</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Product <span class="hljs-title">GetComputer</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面这个只是构建电脑的步骤，但是还具体不到实操，接着整</p><h4 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h4><p>现在准备两种构建电脑的方案</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 方案1：产品A</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ProductA</span> : <span class="hljs-title">Builder</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Product _computer = <span class="hljs-keyword">new</span> Product();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_CPU</span>()</span><br>    &#123;<br>        _computer.CPUNAME = <span class="hljs-string">&quot;I5&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_DARDDISK</span>()</span><br>    &#123;<br>        _computer.HARDDISK = <span class="hljs-string">&quot;金士顿&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_FAN</span>()</span><br>    &#123;<br>        _computer.FANNAME = <span class="hljs-string">&quot;九州风神&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_MEMORY</span>()</span><br>    &#123;<br>        _computer.MEMORY = <span class="hljs-string">&quot;海盗船&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> Product <span class="hljs-title">GetComputer</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> _computer;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 方案2产品B</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ProductB</span> : <span class="hljs-title">Builder</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Product _computer = <span class="hljs-keyword">new</span> Product();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_CPU</span>()</span><br>    &#123;<br>        _computer.CPUNAME = <span class="hljs-string">&quot;I7&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_DARDDISK</span>()</span><br>    &#123;<br>        _computer.HARDDISK = <span class="hljs-string">&quot;闪迪&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_FAN</span>()</span><br>    &#123;<br>        _computer.FANNAME = <span class="hljs-string">&quot;九州风神&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_MEMORY</span>()</span><br>    &#123;<br>        _computer.MEMORY = <span class="hljs-string">&quot;海盗船&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> Product <span class="hljs-title">GetComputer</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> _computer;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ToDo"><a href="#ToDo" class="headerlink" title="ToDo"></a>ToDo</h3><p>现在已知</p><ol><li>构建电脑的部件：CPU、内存、风扇、硬盘</li><li>构建电脑的步骤：CPU、内存、风扇、硬盘、出厂</li><li>构建电脑的方案：各个部件具体的品牌</li></ol><p>现在需要确定谁来干，那就老板来干吧，小本买卖，当然，如果人多，可以多整几个</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 老板来构建电脑</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Bosss</span><br>&#123;<br>    <span class="hljs-comment">//构建</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Construct</span>(<span class="hljs-params">Builder builder</span>)</span><br>    &#123;<br>        <span class="hljs-comment">// 安装CPU</span><br>        builder.BUILD_CPU();<br><br>        <span class="hljs-comment">//安装硬盘</span><br>        builder.BUILD_DARDDISK();<br><br>        <span class="hljs-comment">//安装风扇</span><br>        builder.BUILD_FAN();<br><br>        <span class="hljs-comment">//安装内存</span><br>        builder.BUILD_MEMORY();<br><br>        <span class="hljs-comment">//完事-出厂</span><br>        builder.GetComputer();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后，演示一下整体流程</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//小明进店，发现老板不在店，叫来老板(实例化)</span><br>        Bosss bosss = <span class="hljs-keyword">new</span> Bosss();<br><br>        <span class="hljs-comment">//老板介绍有产品A 和 产品B，分别对应不同的配置。问小明要哪个？</span><br><br>        <span class="hljs-comment">//小明说小孩子才做选择题，成年人选择都要，然后老板然后去组装（生产）</span><br>        bosss.Construct(<span class="hljs-keyword">new</span> ProductA());<br>        bosss.Construct(<span class="hljs-keyword">new</span> ProductB());<br><br>        <span class="hljs-comment">//独立性,扩展性,需要扩展了就直接添加一个品种就行</span><br>        Console.ReadLine();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-设计模式-桥接模式"><a href="#3-设计模式-桥接模式" class="headerlink" title="3. 设计模式-桥接模式"></a>3. 设计模式-桥接模式</h2><h3 id="一句话-1"><a href="#一句话-1" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>一个类可以通过多角度来分类，每一种分类都可能变化，那么就把多角度分离出来让各个角度都能独立变化，降低各个角度间的耦合。</p></blockquote><h3 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h3><blockquote><p>画图形，图形有图形种类和颜色两个指标组成，如果现在要画三种不同的图形并且会有三种不同的颜色，按照现有要求，会每个图形+颜色为一个类的话，会产生9个类或者方法来完成，如果要加图形或者颜色的话，类或者方法会增长的很快，所以需要桥接模式。</p></blockquote><h4 id="形状抽象"><a href="#形状抽象" class="headerlink" title="形状抽象"></a>形状抽象</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-comment">//形状内部包含了另一个维度：color</span><br>    <span class="hljs-keyword">protected</span> IColor color;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetColor</span>(<span class="hljs-params">IColor color</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.color = color;<br>    &#125;<br><br>    <span class="hljs-comment">//设置形状</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="颜色接口"><a href="#颜色接口" class="headerlink" title="颜色接口"></a>颜色接口</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 颜色接口</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 蓝色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Blue</span> : <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;蓝色的<span class="hljs-subst">&#123;shape&#125;</span>&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 黄色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Yellow</span> : <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;黄色的<span class="hljs-subst">&#123;shape&#125;</span>&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 红色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Red</span> : <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;红色的<span class="hljs-subst">&#123;shape&#125;</span>&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="形状"><a href="#形状" class="headerlink" title="形状"></a>形状</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 圆形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Circle</span> : <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span><br>    &#123;<br>        color.Paint(<span class="hljs-string">&quot;圆形&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 长方形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Rectangle</span> : <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span><br>    &#123;<br>        color.Paint(<span class="hljs-string">&quot;长方形&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 三角形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Triangle</span> : <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span><br>    &#123;<br>        color.Paint(<span class="hljs-string">&quot;三角形&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="创建形状"><a href="#创建形状" class="headerlink" title="创建形状"></a>创建形状</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Shape circle = <span class="hljs-keyword">new</span> Circle();<br>    IColor blue = <span class="hljs-keyword">new</span> Blue();<br>    circle.SetColor(blue);<span class="hljs-comment">//设置颜色</span><br>    circle.Draw();<span class="hljs-comment">//画图</span><br><br>    Shape triangle = <span class="hljs-keyword">new</span> Triangle();<br>    triangle.SetColor(blue);<br>    triangle.Draw();<br><br>    Console.ReadLine();<br>&#125;<br><br><span class="hljs-comment">//输出：</span><br><span class="hljs-comment">//蓝色圆形</span><br><span class="hljs-comment">//蓝色三角形</span><br></code></pre></td></tr></table></figure><h2 id="4-设计模式-适配器模式"><a href="#4-设计模式-适配器模式" class="headerlink" title="4. 设计模式-适配器模式"></a>4. 设计模式-适配器模式</h2><h3 id="一句话-2"><a href="#一句话-2" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>有对象适配、有类适配。类似于插座转化器，如下栗子。</p></blockquote><h3 id="类适配模式"><a href="#类适配模式" class="headerlink" title="类适配模式"></a>类适配模式</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 类适配模式</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ITwo</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ThreeAdaptee</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request2</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;我是三个孔的插头&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ThreeToTwoAdapter</span> : <span class="hljs-title">ThreeAdaptee</span>, <span class="hljs-title">ITwo</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Request2();<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><h3 id="类适配模式运行"><a href="#类适配模式运行" class="headerlink" title="类适配模式运行"></a>类适配模式运行</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">ITwo change = <span class="hljs-keyword">new</span> ThreeToTwoAdapter();<br><br>change.Request1();<br><br>Console.ReadLine();<br></code></pre></td></tr></table></figure><h3 id="对象适配器"><a href="#对象适配器" class="headerlink" title="对象适配器"></a>对象适配器</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 对象适配模式</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Two</span><span class="hljs-comment">//两口的插头</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;2个孔的插头可以使用&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Three</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request2</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;3个孔的插头可以使用&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TwoToThreeAdapter</span> : <span class="hljs-title">Two</span><br>&#123;<br>    Three three = <span class="hljs-keyword">new</span> Three();<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span><br>    &#123;<br>        three.Request2();<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><h3 id="对象适配器运行"><a href="#对象适配器运行" class="headerlink" title="对象适配器运行"></a>对象适配器运行</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">Two two = <span class="hljs-keyword">new</span> TwoToThreeAdapter();<br><br>two.Request1();<br><br>Console.ReadLine();<br></code></pre></td></tr></table></figure><h3 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h3><ol><li>单一职责原则（优点）</li><li>开闭原则（优点）</li><li>代码复杂度增加（缺点）</li></ol><h3 id="适应场景"><a href="#适应场景" class="headerlink" title="适应场景"></a>适应场景</h3><ol><li>如果第三方的接口或者代码于现有的接口、代码不兼容的时候，可以添加一个中间适配器层来解决这样的问题。</li></ol><h2 id="5-设计模式-外观模式"><a href="#5-设计模式-外观模式" class="headerlink" title="5. 设计模式-外观模式"></a>5. 设计模式-外观模式</h2><h3 id="一句话-3"><a href="#一句话-3" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>为子系统中的一组接口提供一个一致的界面，用来访问子系统中的一群接口</p></blockquote><h3 id="举个栗子-2"><a href="#举个栗子-2" class="headerlink" title="举个栗子"></a><a href="https://www.cnblogs.com/tianzhiliang/archive/2011/09/30/2196249.html">举个栗子</a></h3><p>在家里看个电影需要干些啥。把投影仪、功放、屏幕、<code>DVD</code>、灯光 这五个看做五个子系统。</p><ol><li>打开投影仪</li><li>打开功放</li><li>打开屏幕</li><li>打开<code>DVD</code></li><li>打开灯光</li></ol><p>看完了怎么关闭</p><ol><li>关闭投影仪</li><li>关闭功放</li><li>关闭屏幕</li><li>关闭<code>DVD</code></li><li>关闭灯光</li></ol><h3 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 投影仪 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Projector</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenProjector</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开投影仪&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseProjector</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭投影仪&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetWideScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;投影仪状态为宽屏模式&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetStandardScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;投影仪状态为标准模式&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 功放机 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Amplifier</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenAmplifier</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开功放机&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseAmplifier</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭功放机&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 屏幕 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Screen</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开屏幕&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭屏幕&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DVD播放器 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DVDPlayer</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenDVDPlayer</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开 DVD 播放器&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseDVDPlayer</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭 DVD 播放器&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 灯光 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Light</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenLight</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开灯光&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseLight</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭灯光&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="定义一个外观"><a href="#定义一个外观" class="headerlink" title="定义一个外观"></a>定义一个外观</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 定义一个外观 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MovieFacade</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 在外观类中必须保存有子系统中各个对象 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>    <span class="hljs-keyword">private</span> Projector projector;<br>    <span class="hljs-keyword">private</span> Amplifier amplifier;<br>    <span class="hljs-keyword">private</span> Screen screen;<br>    <span class="hljs-keyword">private</span> DVDPlayer dvdPlayer;<br>    <span class="hljs-keyword">private</span> Light light;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MovieFacade</span>()</span><br>    &#123;<br>        projector = <span class="hljs-keyword">new</span> Projector();<br>        amplifier = <span class="hljs-keyword">new</span> Amplifier();<br>        screen = <span class="hljs-keyword">new</span> Screen();<br>        dvdPlayer = <span class="hljs-keyword">new</span> DVDPlayer();<br>        light = <span class="hljs-keyword">new</span> Light();<br>    &#125;<br>    <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 打开电影 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenMovie</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//先打开投影仪 </span><br>        projector.OpenProjector();<br>        <span class="hljs-comment">//再打开功放 </span><br>        amplifier.OpenAmplifier();<br>        <span class="hljs-comment">//再打开屏幕 </span><br>        screen.OpenScreen();<br>        <span class="hljs-comment">//再打开 DVD </span><br>        dvdPlayer.OpenDVDPlayer();<br>        <span class="hljs-comment">//再打开灯光 </span><br>        light.OpenLight();<br>    &#125;<br>    <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 关闭电影 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseMovie</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//关闭投影仪 </span><br>        projector.CloseProjector();<br>        <span class="hljs-comment">//关闭功放 </span><br>        amplifier.CloseAmplifier();<br>        <span class="hljs-comment">//关闭屏幕 </span><br>        screen.CloseScreen();<br>        <span class="hljs-comment">//关闭 DVD </span><br>        dvdPlayer.CloseDVDPlayer();<br>        <span class="hljs-comment">//关闭灯光 </span><br>        light.CloseLight();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="看电影"><a href="#看电影" class="headerlink" title="看电影"></a>看电影</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    MovieFacade movie = <span class="hljs-keyword">new</span> MovieFacade();<br>    <span class="hljs-comment">//Projector projector = new Projector();</span><br><br>    <span class="hljs-comment">//首先是观看电影 </span><br>    movie.OpenMovie();<br>    Console.WriteLine();<br><br>    <span class="hljs-comment">//然后是将投影仪模式调到宽屏模式 </span><br>    <span class="hljs-comment">//projector.SetWideScreen();</span><br>    <span class="hljs-comment">//再将投影仪模式调回普通模式 </span><br>    <span class="hljs-comment">//projector.SetStandardScreen();</span><br>    <span class="hljs-comment">//Console.WriteLine();</span><br><br>    <span class="hljs-comment">//最后就是关闭电影了 </span><br>    movie.CloseMovie();<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="优缺点-2"><a href="#优缺点-2" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ol><li>外观模式对客户端屏蔽了子系统组件，从而简化了接口，减少了客户处理的对象数目并使得子系统的使用更加简单。</li><li>外观模式实现了客户端和子系统之间的松耦合关系，而子系统内部的组件是紧耦合的。松耦合使得子系统的组件变化不会影响到客户端。</li></ol><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ol><li>如果新增新的子系统可能需要修改外观类，这就不符合开闭原则，不过这也是没法避免的。</li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>外观模式也叫门面模式。属于<strong>结构型</strong>模式。</p><p>为子系统中的一系列接口提供一个一致的界面，该模式提供了一个高层接口，这个接口使得这一子系统更加容易使用。</p><p>外观模式是通过定义一个外观类将子类包装起来，来简化客户端所调用的方法.</p><h2 id="6-设计模式-享元模式"><a href="#6-设计模式-享元模式" class="headerlink" title="6. 设计模式-享元模式"></a>6. 设计模式-享元模式</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a><a href="https://www.cnblogs.com/wyy1234/p/10041658.html">概念</a></h3><p>​        <em><code>FlyweightPattern</code></em></p><p>​        在软件开发中我们经常遇到多次使用相似或者相同对象的情况，如果每次使用这个对象都去new一个新的实例会很浪费资源。这时候很多人会想到前边介绍过的一个设计模式：</p><p>​        原型模式，原型模式通过拷贝现有对象来生成一个新的实例，使用拷贝来替代new。原型模式可以很好的解决创建多个相同/相似实例的问题，为什么还要用享元模式呢？</p><p>​        这是因为这两种模式的使用场景是不同的，原型模式侧重于”创建“，我们通过拷贝确确实实的创建了新的实例，它属于创建型设计模式；而享元模式侧重于“重用”，即如果有现有的实例就不去创建了，直接拿来用就行了。</p><h3 id="举个栗子-3"><a href="#举个栗子-3" class="headerlink" title="举个栗子"></a>举个栗子</h3><h4 id="抽象车类"><a href="#抽象车类" class="headerlink" title="抽象车类"></a>抽象车类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Car</span><br>&#123;<br>    <span class="hljs-comment">//开车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Use</span>(<span class="hljs-params">Driver d</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="具体车类"><a href="#具体车类" class="headerlink" title="具体车类"></a>具体车类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">RealCar</span> : <span class="hljs-title">Car</span><br>&#123;<br>    <span class="hljs-comment">//颜色</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Color &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">RealCar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> color</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Color = color;<br>    &#125;<br>    <span class="hljs-comment">//开车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Use</span>(<span class="hljs-params">Driver d</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;d.Name&#125;</span>开<span class="hljs-subst">&#123;<span class="hljs-keyword">this</span>.Color&#125;</span>的车&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="车库"><a href="#车库" class="headerlink" title="车库"></a>车库</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 车库</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CarFactory</span><br>&#123;<br>    <span class="hljs-keyword">private</span> Dictionary&lt;<span class="hljs-built_in">string</span>, Car&gt; carPool = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, Car&gt;();<br>    <span class="hljs-comment">//初始的时候，只有红色和绿色两辆汽车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CarFactory</span>()</span><br>    &#123;<br>        carPool.Add(<span class="hljs-string">&quot;红色&quot;</span>, <span class="hljs-keyword">new</span> RealCar(<span class="hljs-string">&quot;红色&quot;</span>));<br>        carPool.Add(<span class="hljs-string">&quot;绿色&quot;</span>, <span class="hljs-keyword">new</span> RealCar(<span class="hljs-string">&quot;蓝色&quot;</span>));<br>    &#125;<br>    <span class="hljs-comment">//获取汽车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Car <span class="hljs-title">GetCar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> key</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//如果车库有就用车库里的车，车库没有就买一个（new一个）</span><br>        <span class="hljs-keyword">if</span> (!carPool.ContainsKey(key))<br>        &#123;<br>            carPool.Add(key, <span class="hljs-keyword">new</span> RealCar(key));<br>            Console.WriteLine(<span class="hljs-string">&quot;没有&#123;0&#125;的车，就买一个&quot;</span>, key);<br>        &#125;<br>        <span class="hljs-keyword">return</span> carPool[key];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="司机类"><a href="#司机类" class="headerlink" title="司机类"></a>司机类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 司机类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Driver</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Driver</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Name = name;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    CarFactory carFactory = <span class="hljs-keyword">new</span> CarFactory();<br><br>    <span class="hljs-comment">//小头爸爸开蓝色的车</span><br>    Driver d1 = <span class="hljs-keyword">new</span> Driver(<span class="hljs-string">&quot;小头爸爸&quot;</span>);<br>    Car c1 = carFactory.GetCar(<span class="hljs-string">&quot;蓝色&quot;</span>);<br>    c1.Use(d1);<br><br>    <span class="hljs-comment">//扁头妈妈开蓝色的车</span><br>    Driver d2 = <span class="hljs-keyword">new</span> Driver(<span class="hljs-string">&quot;扁头妈妈&quot;</span>);<br>    Car c2 = carFactory.GetCar(<span class="hljs-string">&quot;蓝色&quot;</span>);<br>    c2.Use(d2);<br><br>    <span class="hljs-keyword">if</span> (c1.Equals(c2))<br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;小头爸爸和扁头妈妈开的是同一辆车&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">//车库没有白色的车，就new一辆白色的车</span><br>    Driver d3 = <span class="hljs-keyword">new</span> Driver(<span class="hljs-string">&quot;大头儿子&quot;</span>);<br>    Car c3 = carFactory.GetCar(<span class="hljs-string">&quot;白色&quot;</span>);<br>    c3.Use(d3);<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h3><p>​        当系统中大量使用某些相同或者相似的对象，这些对象要耗费大量的内存，并且这些对象剔除外部状态后可以通过一个对象来替代，这时可以考虑使用享元模式。在软件系统中享元模式大量用于各种池技术，如数据库连接对象池，字符串缓存池，<code>HttpApplication</code>池等。</p><h3 id="优缺点-3"><a href="#优缺点-3" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ol><li>降低了系统中对象的数量，从而降低了系统中细粒度对象给内存带来的压力。</li></ol><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ol><li>需要分离对象的外部状态和内部状态，使用不当会引起线程安全问题，提高了系统的复杂度。</li></ol><h2 id="7-设计模式-原型模式"><a href="#7-设计模式-原型模式" class="headerlink" title="7. 设计模式-原型模式"></a>7. 设计模式-原型模式</h2><h3 id="一句话-4"><a href="#一句话-4" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>用原型实例指定创建对象的种类，并且通过复制这些原型创建新的对象。</p></blockquote><h3 id="举个栗子-4"><a href="#举个栗子-4" class="headerlink" title="举个栗子"></a>举个栗子</h3><h4 id="以手机来做个原型"><a href="#以手机来做个原型" class="headerlink" title="以手机来做个原型"></a>以手机来做个原型</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 手机原型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MobilePhonePrototype</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _brand;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 品牌</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Brand<br>    &#123;<br>        <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> _brand; &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MobilePhonePrototype</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> brand</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>._brand = brand;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> MobilePhonePrototype <span class="hljs-title">Clone</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="小米原型"><a href="#小米原型" class="headerlink" title="小米原型"></a>小米原型</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 小米手机原型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">XiaoMiPrototype</span> : <span class="hljs-title">MobilePhonePrototype</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">XiaoMiPrototype</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> brand</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">brand</span>)</span><br>        &#123;<br>        &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> MobilePhonePrototype <span class="hljs-title">Clone</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> (MobilePhonePrototype)<span class="hljs-keyword">this</span>.MemberwiseClone();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="苹果手机原型"><a href="#苹果手机原型" class="headerlink" title="苹果手机原型"></a>苹果手机原型</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 苹果手机原型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ApplePrototype</span> : <span class="hljs-title">MobilePhonePrototype</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ApplePrototype</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> brand</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">brand</span>)</span><br>        &#123;<br>        &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> MobilePhonePrototype <span class="hljs-title">Clone</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> (MobilePhonePrototype)<span class="hljs-keyword">this</span>.MemberwiseClone();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="最后-1"><a href="#最后-1" class="headerlink" title="最后"></a>最后</h4><p>由于原型模式<code>Prototype</code>是一种创建型设计模式，它关注的是大量相同或者相似的对象创建问题。通过<code>new</code>一个对象后，然后通过<code>new</code>出来的对象进行复制，创建出相同的对象。也就是通过这种方式来创建对象。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp">XiaoMiPrototype xiaomi = <span class="hljs-keyword">new</span> XiaoMiPrototype(<span class="hljs-string">&quot;小米&quot;</span>);<br>XiaoMiPrototype xiaomi2 = (XiaoMiPrototype)xiaomi.Clone();<br>Console.WriteLine(xiaomi2.Brand);<br><br>ApplePrototype iphone = <span class="hljs-keyword">new</span> ApplePrototype(<span class="hljs-string">&quot;iPhone7 Plus&quot;</span>);<br>ApplePrototype iphone2 = (ApplePrototype)iphone.Clone();<br>Console.WriteLine(iphone2.Brand);<br></code></pre></td></tr></table></figure><h2 id="8-设计模式-装饰器模式"><a href="#8-设计模式-装饰器模式" class="headerlink" title="8. 设计模式-装饰器模式"></a>8. 设计模式-装饰器模式</h2><h3 id="一句话-5"><a href="#一句话-5" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>当我们需要动态添加类的功能同时不改变类的结构时可以使用装饰者模式，装饰类本质是一个现有类的包装。</p></blockquote><h3 id="举个栗子-5"><a href="#举个栗子-5" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>创建一个人，然后给他穿衣服。</p><h4 id="创建一个人"><a href="#创建一个人" class="headerlink" title="创建一个人"></a>创建一个人</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 人类  具体组件角色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> : <span class="hljs-title">AbstractPerson</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment">//待添加功能的Show方法，具体组件中的Show方法只有原始功能</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        Console.Write(<span class="hljs-string">$&quot;打扮的人是<span class="hljs-subst">&#123;<span class="hljs-keyword">this</span>.Name&#125;</span>：&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="抽象这个人"><a href="#抽象这个人" class="headerlink" title="抽象这个人"></a>抽象这个人</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 抽象人类  </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AbstractPerson</span><br>&#123;<br>    <span class="hljs-comment">//展示装饰方法,我们使用装饰器模式的目的就是为了扩展这个接口的功能</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="抽象穿衣服方法"><a href="#抽象穿衣服方法" class="headerlink" title="抽象穿衣服方法"></a>抽象穿衣服方法</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//因为我们装饰后的person要直接替换装饰前的person，所以必须继承AbstractPerson</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Finery</span> : <span class="hljs-title">AbstractPerson</span><br>&#123;<br>    <span class="hljs-keyword">protected</span> AbstractPerson person;<br>    <span class="hljs-comment">//设置要打扮的人</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetPerson</span>(<span class="hljs-params">AbstractPerson p</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.person = p;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (person != <span class="hljs-literal">null</span>)<br>        &#123;<br>            person.Show();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="衣服库"><a href="#衣服库" class="headerlink" title="衣服库"></a>衣服库</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//t恤</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TShirt</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;大t恤  &quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//网鞋</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Sneaker</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;网鞋  &quot;</span>);<br>    &#125;<br><br>&#125;<br><span class="hljs-comment">//西装</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Suit</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;西装  &quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//领带</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Tie</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;领带  &quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//皮鞋</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Leather</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;皮鞋  &quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="穿衣服咯"><a href="#穿衣服咯" class="headerlink" title="穿衣服咯"></a>穿衣服咯</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-comment">//首先要有打扮的人</span><br>    AbstractPerson xc = <span class="hljs-keyword">new</span> Person() &#123; Name = <span class="hljs-string">&quot;小菜&quot;</span> &#125;;<br><br>    Console.WriteLine(<span class="hljs-string">&quot;第一种装饰-------------------&quot;</span>);<br>    Finery personWithsuit = <span class="hljs-keyword">new</span> Suit();<br>    Finery personWithtie = <span class="hljs-keyword">new</span> Tie();<br>    Finery personWithleather = <span class="hljs-keyword">new</span> Leather();<br>    <span class="hljs-comment">//装饰过程</span><br>    personWithsuit.SetPerson(xc);<span class="hljs-comment">//给小菜穿上西服</span><br>    personWithtie.SetPerson(personWithsuit);<span class="hljs-comment">//给穿上西服的小菜带上领带</span><br>    personWithleather.SetPerson(personWithtie);<span class="hljs-comment">//给穿上西服带上领带的小菜穿上皮鞋</span><br>    personWithleather.Show();<br><br>    Console.WriteLine();<br>    Console.WriteLine(<span class="hljs-string">&quot;第二种装饰-------------------&quot;</span>);<br>    Finery personWithTshirt = <span class="hljs-keyword">new</span> TShirt();<br>    Finery personWithSneaker = <span class="hljs-keyword">new</span> Sneaker();<br>    <span class="hljs-comment">//装饰过程</span><br>    personWithTshirt.SetPerson(xc);<span class="hljs-comment">//给小菜穿上t恤</span><br>    personWithSneaker.SetPerson(personWithTshirt);<span class="hljs-comment">//给穿上t恤的小菜穿上网球鞋</span><br>    personWithSneaker.Show();<br><br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp">第一种装饰-------------------<br>打扮的人是小菜：西装  领带  皮鞋<br>第二种装饰-------------------<br>打扮的人是小菜：大t恤  网鞋<br></code></pre></td></tr></table></figure><h3 id="优缺点-4"><a href="#优缺点-4" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><ol><li>一个类需要添加一些功能，而这些功能按数目、顺序组合形成的效果不一样，如果用继承会造成子类过多，装饰者模式可以很好地解决这个问题；</li><li>使用装饰者模式我们可以动态的添加/删除类的功能，灵活性好</li></ol><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><ol><li>多层装饰比较复杂，我们需要注意装饰顺序等因素。如先穿内裤再穿裤子，是正常人；而先穿裤子再穿内裤就是超人了。在开发中先过滤字符串再加密，和先加密字符串再过滤的效果是完全不同的。</li></ol><h2 id="9-设计模式-组合模式"><a href="#9-设计模式-组合模式" class="headerlink" title="9. 设计模式-组合模式"></a>9. 设计模式-组合模式</h2><h3 id="一句话-6"><a href="#一句话-6" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>在树形结构的处理中模糊了对象和对象组的概念，使用对象和对象组采用了统一的接口，让我们可以像处理简单对象一样处理对象组。</p></blockquote><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>首先得有个树结构，最先想到的就是<code>OA</code>系统里的组织结构。集团总公司、分公司、部门、岗位、人员等等，下面以员工和部门举栗子。</p><h4 id="先抽个象。"><a href="#先抽个象。" class="headerlink" title="先抽个象。"></a>先抽个象。</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 抽象部件 定义了树枝和树叶的公共属性和接口</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Component</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> name;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Component</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br>    <br>    <span class="hljs-comment">//添加子节点</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Add</span>(<span class="hljs-params">Component c</span>)</span>;<br>    <br>    <span class="hljs-comment">//删除子节点</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Remove</span>(<span class="hljs-params">Component c</span>)</span>;<br>    <br>    <span class="hljs-comment">//展示方法，dept为节点深度</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Display</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dept</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="树叶子：员工"><a href="#树叶子：员工" class="headerlink" title="树叶子：员工"></a>树叶子：员工</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//具体员工，树形结构的Leaf</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> : <span class="hljs-title">Component</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Employee</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br>    <span class="hljs-comment">//Leaf不能添加/删除子节点所以空实现</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Add</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Remove</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Display</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dept</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&#x27;-&#x27;</span>, dept) + name);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="树枝：部门"><a href="#树枝：部门" class="headerlink" title="树枝：部门"></a>树枝：部门</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 部门类，相当于树枝</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Depart</span> : <span class="hljs-title">Component</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Depart</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br>    <span class="hljs-comment">//添加子节点</span><br>    <span class="hljs-keyword">public</span> List&lt;Component&gt; children = <span class="hljs-keyword">new</span> List&lt;Component&gt;();<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Add</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br>        children.Add(c);<br>    &#125;<br>    <span class="hljs-comment">//删除子节点</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Remove</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br>        children.Remove(c);<br>    &#125;<br>    <span class="hljs-comment">//展示自己和和内部的所有子节点，这里是组合模式的核心</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Display</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dept</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&#x27;-&#x27;</span>, dept) + name);<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> children)<br>        &#123;<br>            <span class="hljs-comment">//这里用到了递归的思想</span><br>            item.Display(dept + <span class="hljs-number">4</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="最后：攒"><a href="#最后：攒" class="headerlink" title="最后：攒"></a>最后：攒</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Component DepartA = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;A总公司&quot;</span>);<br>    Component DepartAX = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AX部门&quot;</span>);<br>    Component DepartAY = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AY部门&quot;</span>);<br>    Component DepartAX1 = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AX1子部门&quot;</span>);<br>    Component DepartAX2 = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AX2子部门&quot;</span>);<br>    Component Ae1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;公司直属员工1&quot;</span>);<br>    Component AXe1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AX部门员工1&quot;</span>);<br>    Component AX1e1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AX1部门员工1&quot;</span>);<br>    Component AX1e2 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AX1部门员工2&quot;</span>);<br>    Component AYe1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AY部门员工1&quot;</span>);<br>    Component AYe2 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AY部门员工2&quot;</span>);<br>    DepartA.Add(Ae1);<br>    DepartA.Add(DepartAX);<br>    DepartA.Add(DepartAY);<br>    DepartAX.Add(AXe1);<br>    DepartAX.Add(DepartAX1);<br>    DepartAX.Add(DepartAX2);<br>    DepartAX1.Add(AX1e1);<br>    DepartAX1.Add(AX1e2);<br>    DepartAY.Add(AYe1);<br>    DepartAY.Add(AYe2);<br>    <span class="hljs-comment">//遍历总公司</span><br>    DepartA.Display(<span class="hljs-number">1</span>);<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205051432849.png" alt="image-20220505143244328"></p>]]></content>
    
    
    <summary type="html">学习设计模式笔记</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>ApiFox参数配置</title>
    <link href="http://example.com/2022/04/28/APIFox-%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/04/28/APIFox-%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/</id>
    <published>2022-04-28T05:58:31.000Z</published>
    <updated>2022-05-19T07:34:29.066Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ApiFox-参数配置"><a href="#ApiFox-参数配置" class="headerlink" title="ApiFox 参数配置"></a>ApiFox 参数配置</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421221.png" alt="ApiFox"></p><h2 id="设置全局参数"><a href="#设置全局参数" class="headerlink" title="设置全局参数"></a>设置全局参数</h2><p>出于<code>JWT</code>权限验证，需要获取<code>token</code>才能访问。否则就是如下情况。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421319.png" alt="401 Unauthoized"></p><p>先设置全局参数 <code>Authorizatior</code> 默认值 <code>bearer &#123;&#123;token&#125;&#125;</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421550.png" alt="设置全局参数"></p><p>在获取<code>token</code>的接口处，常规添加<code>Params</code>，主要是看<strong>后置操作</strong></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421954.png" alt="后置操作"></p><p>以下是添加完的。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421334.png" alt="添加公共脚本"></p><p>添加公共脚本</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281422732.png" alt="公共脚本"></p><p>输入公共脚本内容</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281422599.png" alt="公共脚本内容"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//核心</span><br>pm.<span class="hljs-title function_">test</span>(<span class="hljs-string">&quot;Status code is 200&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    pm.<span class="hljs-property">response</span>.<span class="hljs-property">to</span>.<span class="hljs-property">have</span>.<span class="hljs-title function_">status</span>(<span class="hljs-number">200</span>);<br>&#125;);<br><span class="hljs-comment">// 把responseBody转为json字符串</span><br><span class="hljs-keyword">var</span> data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(responseBody);<br><span class="hljs-comment">// 设置环境变量token，供后面的接口引用，位置就是上一步获取的位置</span><br>pm.<span class="hljs-property">globals</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;token&quot;</span>, data.<span class="hljs-property">result</span>.<span class="hljs-property">AccessToken</span>);<br></code></pre></td></tr></table></figure><p>以上，在执行完登录接口后，公共脚本会把<code>token</code>信息赋值给全局变量<code>Authorization</code>,其他接口就可以直接使用<code>token</code>了。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281422625.png" alt="使用全局参数"></p>]]></content>
    
    
    <summary type="html">接口神器</summary>
    
    
    
    
    <category term="Api" scheme="http://example.com/tags/Api/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号网站调试</title>
    <link href="http://example.com/2022/04/01/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%BD%91%E7%AB%99%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2022/04/01/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%BD%91%E7%AB%99%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/</id>
    <published>2022-04-01T01:50:33.000Z</published>
    <updated>2022-05-19T07:34:29.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微信公众号网站调试"><a href="#微信公众号网站调试" class="headerlink" title="微信公众号网站调试"></a>微信公众号网站调试</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 <code>Microsoft Visual Studio 2019</code> 开发的<code>MVC</code> 作为微信公众号的后台，</p><p>由于微信公众号的限制，需要在后台设置业务域名进行安全验证。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915539.png" alt="image-20220328151830858"></p><p>还有就是  <code>Microsoft Visual Studio 2019</code> 在开发的同时，是启用<code>IIS Express</code>  或者 <code>本地IIS</code>。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915421.png" alt="image-20220328152024665"></p><p>综述上面两点，导致开发人员在项目调试的时候，没有以往那般丝滑。</p><h2 id="NATAPP"><a href="#NATAPP" class="headerlink" title="NATAPP"></a><code>NATAPP</code></h2><p>经朋友介绍，引入  <a href="https://natapp.cn/">NATAPP-内网穿透 基于ngrok的国内高速内网映射工具</a></p><p>大概分几步：</p><ol><li><p>注册，认证，这无需多言。</p></li><li><p>购买隧道，这里我买的是免费的，经费充裕尽量买收费的，这样域名不会变来变去。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915731.png" alt="image-20220328152411264"></p></li><li><p>下载客户端，我这是 <code>windows 64</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204011050571.png" alt="image-20220328152651312"></p></li><li><p>修改<code>config.ini</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">default</span>]<br>authtoken=***********<br>clienttoken=<br>log=none                        <br>loglevel=ERROR                  <br>http_proxy= <br></code></pre></td></tr></table></figure><p>这里的 <code>authtoken</code> 是购买的隧道中的信息</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915485.png" alt="image-20220328152850308"></p></li><li><p>双击<code>natapp.exe</code>,前提是本地的<code>IIS</code>或者别的宿主好使。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204011050248.png" alt="image-20220328153026831"></p></li></ol><p>至此，内外网穿透完事，得到外网域名和内网端口，但是还没有达到能通过VS可以调试的地步，接着整。</p><h2 id="本地发布"><a href="#本地发布" class="headerlink" title="本地发布"></a>本地发布</h2><p>接下来设置本地</p><ol><li><p>先在VS中把网站发布到本地的文件夹里，把上面这个<code>MP_verify_***********.TXT</code>，也放到这个地方，不放不行，不放上一步域名添加不了。</p></li><li><p>在<code>IIS</code>添加站点，我这本地是80端口，那就设置80端口的一个站点，站点的主机头就是：之前到手的那个域名，这个时候，基本上就能通过域名访问本地站点</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915419.png" alt="image-20220328154224740"></p></li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915010.png" alt="image-20220328154311358"></p><h2 id="公众号后台设置"><a href="#公众号后台设置" class="headerlink" title="公众号后台设置"></a>公众号后台设置</h2><p>设置微信公众号设置-功能设置，添加各种，由于之前有域名，那就添加刚到手的这个域名。添加的时候回提醒下载个<code>MP_verify_***********.TXT</code>文件放到本地，介时下载下来先备用。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915087.png" alt="image-20220328154628975"></p><h2 id="设置项目属性"><a href="#设置项目属性" class="headerlink" title="设置项目属性"></a>设置项目属性</h2><p>指向刚才发布的那个站点。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915884.png" alt="image-20220328154940226"></p><p>这个时候，在调试的时候，就是以这个域名启动调试。</p><h2 id="微信开发者工具"><a href="#微信开发者工具" class="headerlink" title="微信开发者工具"></a>微信开发者工具</h2><p>最最最后，再来一个工具，微信开发者工具</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310916458.png" alt="image-20220328155132195"></p><p>是为了当验证用户的时候，不用弹出</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310916145.png" alt="image-20220328155311767"></p><p>至此，准备工作都完成了</p><h2 id="修改HOST"><a href="#修改HOST" class="headerlink" title="修改HOST"></a>修改HOST</h2><p><code>C:\Windows\System32\drivers\etc</code></p><p>最后添加 <code>127.0.0.1</code>  域名</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310916713.png" alt="image-20220328161612732"></p><h2 id="调试顺序"><a href="#调试顺序" class="headerlink" title="调试顺序"></a>调试顺序</h2><ol><li>VS 启动调试，断点啥的该打打上。</li><li>微信开发工具 地址栏填写您要请求的页面地址。</li><li>进断点，为所欲为。</li><li>开发者工具可以调试前端代码。</li></ol>]]></content>
    
    
    <summary type="html">温故而知新，可以为师矣。</summary>
    
    
    
    <category term="微信公众号" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
    <category term="公众号" scheme="http://example.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    <category term="内网穿透" scheme="http://example.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Office Tools 安装部署Office</title>
    <link href="http://example.com/2022/03/12/Office%20Tools%20%E5%AE%89%E8%A3%85%E8%80%81%E4%B8%89%E4%BB%B6%E5%92%8CVisio/"/>
    <id>http://example.com/2022/03/12/Office%20Tools%20%E5%AE%89%E8%A3%85%E8%80%81%E4%B8%89%E4%BB%B6%E5%92%8CVisio/</id>
    <published>2022-03-11T16:07:20.000Z</published>
    <updated>2022-05-19T07:34:29.078Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/Snipaste_2022-03-18_21-16-56.png"></p><h1 id="Office-Tools"><a href="#Office-Tools" class="headerlink" title="Office Tools"></a>Office Tools</h1><p>官网</p><p><a href="https://otp.landian.vip/zh-cn/">Office Tool Plus 官方网站 - 一键部署 Office (landian.vip)</a></p><p>选择产品</p><p>我这是安装完的，之前的忘记截图了。我选择了Office 专业增强版 2019 和 Visio 专业版 2019</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220312000401414.png" alt="选择"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220311235809244.png" alt="安装中"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220311235930667.png" alt="关闭防护"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220312000022460.png" alt="激活"></p><p>最后记得MKS激活一发即可。</p>]]></content>
    
    
    <summary type="html">Office Tools 安装部署 老三件和Visio</summary>
    
    
    
    <category term="StorageBox" scheme="http://example.com/categories/StorageBox/"/>
    
    
    <category term="Program" scheme="http://example.com/tags/Program/"/>
    
  </entry>
  
  <entry>
    <title>Docker+GitLab+Jenkins</title>
    <link href="http://example.com/2022/01/20/jenkins/"/>
    <id>http://example.com/2022/01/20/jenkins/</id>
    <published>2022-01-20T14:47:51.000Z</published>
    <updated>2022-05-19T07:34:29.084Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大概意图：<code>Docker</code>+<code>GitLab</code>+<code>Jenkins</code> 自动部署 <code>Dot Net Core Web Application</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220120211456716.png" alt="大概意图"></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220120212431735.png" alt="主要容器"></p><h2 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/cd796745db80288a131fb24d57d12880.jpeg" alt="Gitlab"></p><h3 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><p>或者 导入本地镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker load &lt; /root/dockerimage/xxxx.tar<br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d  -p 443:443 -p 8888:80 -p 222:22 --name gitlab --restart always \<br>-v /root/gitlab/config:/etc/gitlab \<br>-v /root/gitlab/logs:/var/log/gitlab \<br>-v /root/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><h3 id="添加秘钥"><a href="#添加秘钥" class="headerlink" title="添加秘钥"></a>添加秘钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &#x27;xxx@xxx.com&#x27;<br></code></pre></td></tr></table></figure><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220120225149050.png" alt="Jenkins"></p><h3 id="Windows-安装"><a href="#Windows-安装" class="headerlink" title="Windows 安装"></a>Windows 安装</h3><h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>安装 JDK 1.8 <code>jdk-8u321-windows-x64.exe</code> </p><p>安装完成之后设置环境变量</p><h4 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125134818266.png" alt="image-20220125134818266"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125134838645.png" alt="image-20220125134838645"></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mel">JAVA_HOME<br>C:\Program Files\Java\jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0</span>_321<br><br>CLASSPATH<br>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;<br></code></pre></td></tr></table></figure><h4 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135007369.png" alt="image-20220125135007369"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135030637.png" alt="image-20220125135030637"></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haml">Path<br><span class="hljs-tag">%<span class="hljs-selector-tag">JAVA_HOME</span></span>%\bin\<br><span class="hljs-tag">%<span class="hljs-selector-tag">JAVA_HOME</span></span>%\jre\bin\<br></code></pre></td></tr></table></figure><h4 id="下载-war"><a href="#下载-war" class="headerlink" title="下载 war"></a>下载 war</h4><p><code>jenkins.war</code>:下载 <a href="https://mirrors.huaweicloud.com/jenkins/war/2.269/">https://mirrors.huaweicloud.com/jenkins/war/2.269/</a> </p><h4 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135345995.png" alt="image-20220125135345995"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> D:\jenkins<br>java -jar jenkins.war<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135452362.png" alt="image-20220125135452362"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135709149.png" alt="image-20220125135709149"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135728614.png" alt="image-20220125135728614"></p><h3 id="Linux-安装"><a href="#Linux-安装" class="headerlink" title="Linux 安装"></a>Linux 安装</h3><h4 id="镜像下载-1"><a href="#镜像下载-1" class="headerlink" title="镜像下载"></a>镜像下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull jenkins/jenkins<br></code></pre></td></tr></table></figure><h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -u root -d -p 8080:8080 -p 50000:50000 -v /root/jenkins_data/DockerData:/var/jenkins_home -v /root/jenkins_data/docker.sock:/var/run/docker.sock jenkins/jenkins --restart always<br></code></pre></td></tr></table></figure><h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><blockquote><p> Please wait while Jenkins is getting ready to work …</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">打开</span><br>hudson.model.UpdateCenter.xml   #这个就是挂载的root/jenkins_data/Dockerdata里<br><span class="hljs-meta prompt_"># </span><span class="language-bash">把</span><br>http://updates.jenkins-io/update-center.json<br><span class="hljs-meta prompt_"># </span><span class="language-bash">改成 清华大学镜像地址</span><br>http://mirror.xmission.com/jenkins/updates/update-center.json<br></code></pre></td></tr></table></figure><h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><blockquote><p>容器内执行<code>apt-get update</code> 总超时，需要添加源</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将容器内的配置文件导出来</span><br>docker cp elegant_neumann:&quot;/etc/apt/sources.list&quot; /root/jenkins_config/<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将修改好的配置文件覆盖到容器中</span><br>docker cp &quot;/root/jenkins_config/sources.list&quot; elegant_neumann:&quot;/etc/apt/sources.list&quot;<br></code></pre></td></tr></table></figure><h4 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h4><blockquote><p>更新源后会报错：<code>NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 40976EAF437D05B5 3B4FE6ACC0B21F32<br></code></pre></td></tr></table></figure><p>然后添加ping <code>apt install iputils-ping</code></p><h4 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h4><blockquote><p>因为要在<code>Jenkins</code>中运行 <code>DotNet 5.0 Web</code>，所以需要在<code>Jenkins</code>容器内有 <code>dotnet 5.0 SDK</code>,这个问题会体现在构建的时候。</p><p>这涉及到通过<code>Dockerfile</code> 创建镜像，这里需要创建一个携带<code>dotnet5.0 SDK</code>的<code>jenkins</code>镜像</p></blockquote><p>参考地址：<a href="https://blog.csdn.net/feng005211/article/details/114818504">.NET 5 + Docker Jenkins，做自动化部署，全Docker环境</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">封装Jenkins镜像（带有dotnet环境的） sdk=5.1</span><br>FROM jenkins/jenkins:lts<br>USER root<br>WORKDIR /dotnet<br>RUN wget -O dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/820db713-c9a5-466e-b72a-16f2f5ed00e2/628aa2a75f6aa270e77f4a83b3742fb8/dotnet-sdk-5.0.100-linux-x64.tar.gz<br>RUN tar zxf dotnet.tar.gz -C ./<br>RUN rm -rf dotnet.tar.gz<br>ENV PATH=&quot;$&#123;PATH&#125;:/dotnet:/var/jenkins_home/.dotnet/tools&quot;<br>ENV DOTNET_ROOT=&quot;/dotnet&quot;<br>RUN apt update -y<br>RUN apt install icu-devtools vim zip unzip -y<br>RUN usermod -a -G root jenkins<br>USER jenkins<br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs haskell">命令解释<br><span class="hljs-number">1</span>.这个<span class="hljs-type">Docker</span>镜像基于jenkins<br><span class="hljs-number">2</span>.设置当前用户为root，因为后面安装需要使用root<br><span class="hljs-number">3</span>.设置当前工作目录为<span class="hljs-keyword">dotnet</span><br><span class="hljs-number">4</span>.下载<span class="hljs-keyword">dotnet</span> <span class="hljs-type">SDK</span>包，保存为<span class="hljs-keyword">dotnet</span>.tar.gz。这里要注意下载正确版本的<span class="hljs-type">SDK</span>，可前往微软官方网站获取下载链接：https://<span class="hljs-keyword">dotnet</span>.microsoft.com/download<br><span class="hljs-number">5</span>.解压<span class="hljs-keyword">dotnet</span> <span class="hljs-type">SDK</span>到当前目录，即/<span class="hljs-keyword">dotnet</span>目录<br><span class="hljs-number">6</span>.删除<span class="hljs-keyword">dotnet</span> <span class="hljs-type">SDK</span>包<br><span class="hljs-number">7</span>.把<span class="hljs-keyword">dotnet</span>目录和<span class="hljs-keyword">dotnet</span> tools目录添加到环境变量<span class="hljs-type">PATH</span>，这样就可以使用<span class="hljs-keyword">dotnet</span>命令了<br><span class="hljs-number">8</span>.设置<span class="hljs-type">DOTNET_ROOT</span>变量<br><span class="hljs-number">9</span>.更新源<br><span class="hljs-number">10</span>.安装一些必需的，常用的工具包，其中icu-devtools是运行<span class="hljs-keyword">dotnet</span>需要的<br><span class="hljs-number">11</span>.修改jenkins用户到root附加组<br><span class="hljs-number">12</span>.设置当前用户为jenkins<br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haskell">构建镜像 name=jenkins:<span class="hljs-keyword">dotnet</span><br><span class="hljs-title">docker</span> build -t jenkins:<span class="hljs-keyword">dotnet</span> .<br>很简单的将包含<span class="hljs-keyword">dotnet</span>环境的jenkins安装好了<br></code></pre></td></tr></table></figure><h4 id="问题5"><a href="#问题5" class="headerlink" title="问题5"></a>问题5</h4><blockquote><p>容器内想安装别的就会用到 wget</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get update  <br>apt-get install wget  <br>wget --version  <br></code></pre></td></tr></table></figure><h4 id="问题6"><a href="#问题6" class="headerlink" title="问题6"></a>问题6</h4><blockquote><p>构建携带dotnet 5环境的Jenkins镜像</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">封装Jenkins镜像（带有dotnet环境的） sdk=5.1</span><br>FROM jenkins/jenkins:latest<br>USER root<br>WORKDIR /dotnet<br>RUN echo &quot;deb http://mirrors.aliyun.com/debian/ buster main non-free contrib\n\<br>deb http://mirrors.aliyun.com/debian-security buster/updates main\n\<br>deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib\n\<br>deb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib\n\<br>deb-src http://mirrors.aliyun.com/debian-security buster/updates main\n\<br>deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib\n\<br>deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib\n\<br>deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib&quot; &gt; /etc/apt/sources.list<br>RUN apt-get update --fix-missing &amp;&amp; apt-get install -y wget --fix-missing<br>RUN wget -O dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/820db713-c9a5-466e-b72a-16f2f5ed00e2/628aa2a75f6aa270e77f4a83b3742fb8/dotnet-sdk-5.0.100-linux-x64.tar.gz<br>RUN tar zxf dotnet.tar.gz -C ./<br>RUN rm -rf dotnet.tar.gz<br>ENV PATH=&quot;$&#123;PATH&#125;:/dotnet:/var/jenkins_home/.dotnet/tools&quot;<br>ENV DOTNET_ROOT=&quot;/dotnet&quot;<br>RUN apt update -y<br>RUN apt install icu-devtools vim zip unzip -y<br>RUN usermod -a -G root jenkins<br>USER jenkins<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name dotnetjenkins  --restart always -u root -d -p 8080:8080 -p 50000:50000 -v /root/jenkins_data/DockerData:/var/jenkins_home -v /root/jenkins_data/docker.sock:/var/run/docker.sock jenkins:dotnet<br></code></pre></td></tr></table></figure><h2 id="Registry"><a href="#Registry" class="headerlink" title="Registry"></a>Registry</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220127143255440.png" alt="image-20220127143255440"></p><p>私有仓库服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry:2.7.1<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d \<br>   -p 5001:5000 \<br>   --restart=always \<br>   --name registry \<br>   -v /root/data/docker-registry:/var/lib/registry \<br>   registry:2.7.1<br></code></pre></td></tr></table></figure><p>访问： <a href="http://192.168.137.5:5001/v2/">http://192.168.137.5:5001/v2/</a></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220126205651174.png" alt="image-20220126205651174"></p><h3 id="Push"><a href="#Push" class="headerlink" title="Push"></a>Push</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将hello-world 重新复制命名为 192.168.137.5:5001/hello-world</span><br>docker tag hello-world 192.168.137.5:5001/hello-world<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行 docker push 192.168.137.5:5001/hello-world 就会提交到私有仓库</span><br></code></pre></td></tr></table></figure><h3 id="问题1-1"><a href="#问题1-1" class="headerlink" title="问题1"></a>问题1</h3><blockquote><p><code>Get &quot;https://192.168.137.5:5001/v2/&quot;: http: server gave HTTP response to HTTPS client</code></p></blockquote><p>此问题的原因是由于 Docker自从<code>1.3.X</code>之后docker registry交互默认使用的是<code>HTTPS</code>，但是搭建私有镜像默认使用的是<code>HTTP</code>服务，所以与私有镜像交时出现以上错误。</p><p>想要解决此问题，执行了两个方案，执行到第二种方才好使</p><p>第一种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/docker/daemon.json<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加 <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;192.168.137.5:5001&quot;</span>]</span><br>&#123;<br>  &quot;insecure-registries&quot;: [&quot;192.168.137.5:5001&quot;],&quot;registry-mirrors&quot;: [&quot;https://i6*****.mirror.aliyuncs.com&quot;]<br>&#125;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启 daemom</span><br>systemctl daemon-reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启docker服务</span><br>systemctl restart docker<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启容器</span><br>docker start $(docker ps -aq)<br></code></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /usr/lib/systemd/system/docker.service<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220126214929695.png" alt="image-20220126214929695"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在ExecStart 这行后面添加 --insecure-registry 192.168.137.5:5001  也就是在Docker启动的时候添加参数</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启 daemom</span><br>systemctl daemon-reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启docker服务</span><br>systemctl restart docker<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启容器</span><br>docker start $(docker ps -aq)<br></code></pre></td></tr></table></figure><p>问题解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@microservicevm:~# curl -XGET http://192.168.137.5:5001/v2/_catalog<br>&#123;&quot;repositories&quot;:[]&#125;<br><br>root@microservicevm:/# docker push 192.168.137.5:5001/hello-world<br>Using default tag: latest<br>The push refers to repository [192.168.137.5:5001/hello-world]<br>e07ee1baac5f: Pushed <br>latest: digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4 size: 525<br><br>root@microservicevm:/# curl -XGET http://192.168.137.5:5001/v2/_catalog<br>&#123;&quot;repositories&quot;:[&quot;hello-world&quot;]&#125;<br></code></pre></td></tr></table></figure><h2 id="Harbor"><a href="#Harbor" class="headerlink" title="Harbor"></a>Harbor</h2><h2 id="Net-5-GitLab-Jenkins"><a href="#Net-5-GitLab-Jenkins" class="headerlink" title="Net 5 + GitLab + Jenkins"></a>Net 5 + GitLab + Jenkins</h2><h3 id="Net-5"><a href="#Net-5" class="headerlink" title="Net 5"></a>Net 5</h3><p>根据此处的<a href="#%E9%97%AE%E9%A2%986">Dockerfile</a>，创建携带.net 5.0 环境的<code>Jenkins</code>容器</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204439495.png" alt="创建"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204544944.png" alt="配置"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204632628.png" alt="net5.0"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204732348.png" alt="测试代码"></p><h3 id="Jenkins-1"><a href="#Jenkins-1" class="headerlink" title="Jenkins"></a>Jenkins</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203211820516.png" alt="系统管理-系统配置"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203211538155.png" alt="配置GitLab账号信息"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203205927175.png" alt="源码管理"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203210045375.png" alt="构建触发器"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203210232801.png" alt="点击高级获取Secret token"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203210446489.png" alt="构建"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203212831776.png" alt="设置凭证"></p><h3 id="GitLab-1"><a href="#GitLab-1" class="headerlink" title="GitLab"></a>GitLab</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204909533.png" alt="将测试代码上传到Gitlab"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203211043489.png" alt="webhooks 设置网址和令牌"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203213909943.png" alt="GitPush-构建"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203230849200.png" alt="控制台信息"></p>]]></content>
    
    
    <summary type="html">Docker+GitLab+Jenkins 自动部署 DotNet Core Application</summary>
    
    
    
    <category term="MicroService" scheme="http://example.com/categories/MicroService/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term=".net core" scheme="http://example.com/tags/net-core/"/>
    
    <category term="jenkins" scheme="http://example.com/tags/jenkins/"/>
    
    <category term="GitLab" scheme="http://example.com/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>multipass 操作指北</title>
    <link href="http://example.com/2022/01/18/multipass-%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8C%97/"/>
    <id>http://example.com/2022/01/18/multipass-%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8C%97/</id>
    <published>2022-01-18T01:53:26.000Z</published>
    <updated>2023-02-14T01:18:59.671Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Multipass-操作指北"><a href="#Multipass-操作指北" class="headerlink" title="Multipass 操作指北"></a>Multipass 操作指北</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220113152838526.png" alt="multipass"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于学习需要操作<code>Docker</code>，有之前使用的<code>VM14PRO</code>+<code>CentOS7</code>+<code>Ubuntu</code>,还有就是<code>docker desktop for windows</code>,现在发现<code>multipass</code> ，忍不住想试试。</p><p>本篇其实是想以虚拟机子系统安装Docker，Docker中安装Consul，模拟Consul集群，客户端进行访问。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118135857819.png" alt="image-20220118135857819"></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ul><li>[下载](<a href="https://multipass.run/">Multipass orchestrates virtual Ubuntu instances</a>)</li><li>安装完成之后，右下角托盘中能看到图标，右键图标即可运行shell</li></ul><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><p><code>win+R</code> 运行 <code>cmd</code>  , 查看版本 <code>multipass version</code></p><h3 id="查看虚拟机列表"><a href="#查看虚拟机列表" class="headerlink" title="查看虚拟机列表"></a>查看虚拟机列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass ls<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118101606479.png" alt="虚拟机列表"></p><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><p>创建虚拟机<br>语法：multipass launch -n 虚拟机名称<br>-n, –name: 名称<br>-c, –cpus: cpu核心数, 默认: 1<br>-m, –mem: 内存大小, 默认: 1G<br>-d, –disk: 硬盘大小, 默认: 5G</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass launch -n ubuntu-lts -c 4 -m 4G -d 40G<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118101648294.png" alt="新建虚拟机"></p><h3 id="进入虚拟机"><a href="#进入虚拟机" class="headerlink" title="进入虚拟机"></a>进入虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass shell 虚拟机名称<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118101802147.png" alt="进入虚拟机"></p><h3 id="不进入虚拟机直接执行命令"><a href="#不进入虚拟机直接执行命令" class="headerlink" title="不进入虚拟机直接执行命令"></a>不进入虚拟机直接执行命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass exec ubuntu-lts -- ls #语法：multipass exec 虚拟机名称 --命令<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118102055691.png" alt="image-20220118102055691"></p><h3 id="查看虚拟机信息"><a href="#查看虚拟机信息" class="headerlink" title="查看虚拟机信息"></a>查看虚拟机信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass info 虚拟机名称<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118102212512.png" alt="image-20220118102212512"></p><h3 id="重启虚拟机"><a href="#重启虚拟机" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass restart 虚拟机名称<br></code></pre></td></tr></table></figure><h3 id="删除虚拟机"><a href="#删除虚拟机" class="headerlink" title="删除虚拟机"></a>删除虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">普通删除（可恢复）</span><br>multipass delete 虚拟机名称<br><span class="hljs-meta prompt_"># </span><span class="language-bash">彻底删除</span><br>multipass delete --purge 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="恢复删除虚拟机"><a href="#恢复删除虚拟机" class="headerlink" title="恢复删除虚拟机"></a>恢复删除虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass recover 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass start 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="暂停虚拟机"><a href="#暂停虚拟机" class="headerlink" title="暂停虚拟机"></a>暂停虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass stop 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="挂载宿主机目录"><a href="#挂载宿主机目录" class="headerlink" title="挂载宿主机目录"></a>挂载宿主机目录</h3><p>启用挂载：<code>multipass set local.privileged-mounts=true</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass mount 宿主机目录 虚拟机名称:虚拟机目录<br></code></pre></td></tr></table></figure><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202302101626485.png" alt="image-20230210162609131"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">C:\Users\Administrator&gt;multipass mount E:\ubuntu\ ubuntu:/usr/houshuai/<br>mount failed: Mounts are disabled on this installation of Multipass.<br><br>See https://multipass.run/docs/set-command#local.privileged-mounts for information<br>on how to enable them.<br><br>C:\Users\Administrator&gt;multipass set local.privileged-mounts=true<br><br>C:\Users\Administrator&gt;multipass mount E:\ubuntu\ ubuntu:/usr/houshuai/<br>mount failed: cannot connect to the multipass socket<br>Please ensure multipassd is running and &#x27;localhost:50051&#x27; is accessible<br><br>C:\Users\Administrator&gt;sc query multipass<br><br>SERVICE_NAME: multipass<br>        TYPE               : 10  WIN32_OWN_PROCESS<br>        STATE              : 4  RUNNING<br>                                (STOPPABLE, NOT_PAUSABLE, ACCEPTS_SHUTDOWN)<br>        WIN32_EXIT_CODE    : 0  (0x0)<br>        SERVICE_EXIT_CODE  : 0  (0x0)<br>        CHECKPOINT         : 0x0<br>        WAIT_HINT          : 0x0<br><br>C:\Users\Administrator&gt;netstat -nt | findstr 50051<br>  TCP    [::1]:50051            [::1]:55722            TIME_WAIT       InHost<br><br>C:\Users\Administrator&gt;multipass mount E:\ubuntu\ ubuntu:/usr/houshuai/<br><br>C:\Users\Administrator&gt;<br></code></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202302101625530.png" alt="image-20230210162513007"></p><h3 id="卸载挂载目录"><a href="#卸载挂载目录" class="headerlink" title="卸载挂载目录"></a>卸载挂载目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass unmount 虚拟机名称:虚拟机目录<br></code></pre></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>现在multipass 默认安装的是 Ubuntu 20.04.3 LTS</p><h3 id="设置源"><a href="#设置源" class="headerlink" title="设置源"></a>设置源</h3><p>首先备份文件 <code>cp /etc/apt/sources.list /etc/apt/sources.list.bak</code></p><p>然后修改文件 <code>sudo vim /etc/apt/sources.list</code></p><p><strong>Ubuntu 22.04 LTS 阿里源</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><p><strong>ubuntu 22.04 清华源</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">预发布软件源，不建议启用</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><p><strong>ubuntu 22.04 中科大源</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse<br></code></pre></td></tr></table></figure><p><strong>ubuntu 22.04 163源</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><p>最后 <code>sudo apt-get update</code></p><h3 id="修改-root-pwd"><a href="#修改-root-pwd" class="headerlink" title="修改 root pwd"></a>修改 root pwd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo passwd root<br></code></pre></td></tr></table></figure><h3 id="更新-apt-包索引"><a href="#更新-apt-包索引" class="headerlink" title="更新 apt 包索引"></a>更新 apt 包索引</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><h3 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install net-tools<br></code></pre></td></tr></table></figure><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><h4 id="使用-Docker-仓库进行安装"><a href="#使用-Docker-仓库进行安装" class="headerlink" title="使用 Docker 仓库进行安装"></a>使用 Docker 仓库进行安装</h4><ol><li>安装 apt 依赖包</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-get install \</span><br><span class="language-bash">    apt-transport-https \</span><br><span class="language-bash">    ca-certificates \</span><br><span class="language-bash">    curl \</span><br><span class="language-bash">    gnupg-agent \</span><br><span class="language-bash">    software-properties-common</span><br></code></pre></td></tr></table></figure><ol start="2"><li>添加 Docker 的官方 GPG 密钥：</li></ol><p>中科大</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br></code></pre></td></tr></table></figure><p>阿里云</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br></code></pre></td></tr></table></figure><ol start="3"><li>验证您现在是否拥有带有指纹的密钥</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-key fingerprint 0EBFCD88</span><br>   <br>pub   rsa4096 2017-02-22 [SCEA]<br>      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88<br>uid           [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;<br>sub   rsa4096 2017-02-22 [S]<br></code></pre></td></tr></table></figure><ol start="4"><li>使用以下指令设置稳定版仓库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo add-apt-repository \</span><br><span class="language-bash">   <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \</span></span><br><span class="hljs-string"><span class="language-bash">  <span class="hljs-subst">$(lsb_release -cs)</span> \</span></span><br><span class="hljs-string"><span class="language-bash">  stable&quot;</span></span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;<br></code></pre></td></tr></table></figure><h4 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h4><ol><li>更新 apt 包索引。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><ol start="2"><li>安装最新版本的 Docker Engine-Community 和 containerd</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><ol start="3"><li>测试Docker</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo docker run hello-world<br></code></pre></td></tr></table></figure><h4 id="开机自启容器"><a href="#开机自启容器" class="headerlink" title="开机自启容器"></a>开机自启容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable docker.service<br></code></pre></td></tr></table></figure><h4 id="解决github下载docker-compose慢的问题"><a href="#解决github下载docker-compose慢的问题" class="headerlink" title="解决github下载docker-compose慢的问题"></a>解决<code>github</code>下载docker-compose慢的问题</h4><h5 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h5><p>在<code>x86_64的linux</code>中使用root用户执行命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L <span class="hljs-string">&quot;https://gitee.com/large_cat/docker-compose/raw/main/install.sh&quot;</span> | sh    <span class="hljs-comment"># 下载docker-compose</span><br>chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose    <span class="hljs-comment"># 增加执行权限</span><br></code></pre></td></tr></table></figure><h4 id="获取Consul"><a href="#获取Consul" class="headerlink" title="获取Consul"></a>获取Consul</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull consull<br></code></pre></td></tr></table></figure><h4 id="运行Consul"><a href="#运行Consul" class="headerlink" title="运行Consul"></a>运行Consul</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8600:8600 --publish 8500:8500 --publish 8300:8300 --publish 8301:8301 --publish 8302:8302 --name consul-01 --restart always \<br>--volume /root/docker/consulone/data:/consul/data \<br>--volume /root/docker/consulone/config:/consul/config consul:latest agent --server --bootstrap-expect=1 --ui --bind=0.0.0.0 --client=0.0.0.0 <br><br>docker run --publish 8501:8500 --name consul-02 --restart always \<br>--volume /root/docker/consultwo/data:/consul/data \<br>--volume /root/docker/consultwo/config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br><br>docker run --publish 8502:8500 --name consul-03 --restart always \<br>--volume /root/docker/consulthree/data:/consul/data \<br>--volume /root/docker/consulthree/config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://*:8500  172.17.0.2</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://*:8501  172.17.0.3</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://*:8502  172.17.0.4</span><br></code></pre></td></tr></table></figure><h3 id="Docker-所有容器命令"><a href="#Docker-所有容器命令" class="headerlink" title="Docker 所有容器命令"></a>Docker 所有容器命令</h3><p>docker中 启动所有的容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker start $(docker ps -a | awk &#x27;&#123; print $1&#125;&#x27; | tail -n +2)<br></code></pre></td></tr></table></figure><p>docker中 关闭所有的容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker stop $(docker ps -a | awk &#x27;&#123; print $1&#125;&#x27; | tail -n +2)<br></code></pre></td></tr></table></figure><p>docker中 删除所有的容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rm $(docker ps -a | awk &#x27;&#123; print $1&#125;&#x27; | tail -n +2)<br></code></pre></td></tr></table></figure><p>docker中 删除所有的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rmi $(docker images | awk &#x27;&#123;print $3&#125;&#x27; |tail -n +2)<br></code></pre></td></tr></table></figure><h2 id="开启SSH登录"><a href="#开启SSH登录" class="headerlink" title="开启SSH登录"></a>开启SSH登录</h2><p>使用<code>xshell and xftp</code></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install openssh-server<br></code></pre></td></tr></table></figure><h3 id="验证开启SSH"><a href="#验证开启SSH" class="headerlink" title="验证开启SSH"></a>验证开启SSH</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -e |grep ssh <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dpkg --get-selections | grep ssh<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118104032656.png" alt="image-20220118104032656"></p><p>如果看到sshd那说明ssh-server已经启动了。</p><p>如果没有则可以这样启动 <code>sudo /etc/init.d/ssh start</code></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>ssh-server配置文件位于<code>/etc/ssh/sshd_config</code>，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">Port 22<br>LoginGraceTime 2m<br>PermitRootLogin without-password<br>PermitRootLogin yes<br>StrictModes yes<br>RSAAuthentication yes<br>PubkeyAuthentication yes<br></code></pre></td></tr></table></figure><p>别的看着弄，上面这几个配置弄好了就成。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118104744600.png" alt="image-20220118104744600"></p><h3 id="RSA秘钥"><a href="#RSA秘钥" class="headerlink" title="RSA秘钥"></a>RSA秘钥</h3><p>打开xshell，工具-用户秘钥管理者-生成</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105251888.png" alt="下一步"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105307456.png" alt="下一步"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105346104.png" alt="完成"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105443765.png" alt="这么点"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105607833.png" alt="点这里"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105648372.png" alt="喏，这就是那个公钥"></p><p>这个秘钥需要复制到Ubuntu 里。</p><p>先打开 <code>cd ~/.ssh</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105927900.png" alt="定位到文件"></p><p>打开之后就是下面这些，把下面的内容替换成上面生成的公钥即可。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105956280.png" alt="image-20220118105956280"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110131201.png" alt="这么粘"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110222578.png" alt="粘贴公钥"></p><h3 id="连接xshell"><a href="#连接xshell" class="headerlink" title="连接xshell"></a>连接xshell</h3><p>先获取IP<code>ifconfig</code>,没有的话安装一下<code>sudo apt install net-tools</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110413466.png" alt="获取当前IP"></p><p>配置xshell连接属性</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110734124.png" alt="连接xshell"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110800257.png" alt="设置用户密码"></p><p>点击连接</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110834655.png" alt="接收并保存"></p><p>点击接收并保存，选择Public Key，输入刚才设置的密码，点击确定</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110924974.png" alt="选择秘钥填充密码"></p><p>连接成功</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118111009999.png" alt="连接成功"></p><h2 id="设置固定IP"><a href="#设置固定IP" class="headerlink" title="设置固定IP"></a>设置固定IP</h2><p>每次重启IP都变了，xshell还得重新配置IP，设置固定IP搞定</p><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><p>想要固定IP，需要在Hype-v 管理器中添加</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116145911179.png" alt="image-20220116145911179"></p><h3 id="然后新建虚拟机交换机"><a href="#然后新建虚拟机交换机" class="headerlink" title="然后新建虚拟机交换机"></a>然后新建虚拟机交换机</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150220744.png" alt="image-20220116150220744"></p><h3 id="设置交换机IP"><a href="#设置交换机IP" class="headerlink" title="设置交换机IP"></a>设置交换机IP</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150314941.png" alt="image-20220116150314941"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150340431.png" alt="image-20220116150340431"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150402104.png" alt="image-20220116150402104"></p><h3 id="分享Internet"><a href="#分享Internet" class="headerlink" title="分享Internet"></a>分享Internet</h3><p>设置完IP之后，</p><p>需要Internet访问的话，需要将现在宿主用的网络分享给vethernet(新建虚拟机)</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150646604.png" alt="image-20220116150646604"></p><p>也就是说在 宿主再用的WLAN里点击属性，点击共享选择 vEthernet（新建虚拟交换机），就是刚才咱新建的内部交换机。</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>至此，宿主这块设置好了。接下来需要设置子系统 Ubuntu。</p><p>先执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/netplan/50-cloud-init.yaml<br></code></pre></td></tr></table></figure><p>insert 模式  i</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116151058994.png" alt="image-20220116151058994"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">network:<br>    ethernets:<br>        eth0:<br>            dhcp4: no<br>            addresses: [192.168.137.6/24]<br>            optional: true<br>            gateway4: 192.168.137.1<br>            nameservers:<br>                addresses: [8.8.8.8,114.114.114.114]<br>    version: 2<br></code></pre></td></tr></table></figure><p>修改完配置之后，重启网卡。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo netplan apply<br></code></pre></td></tr></table></figure><p>如果通过multipass 的shell 去执行 <code>sudo netplan appyly</code>的话，执行完不报错也没啥反应</p><p>也可以选择在 hype-v 中连接 ，在shell中去输入</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>可以输入 <code>ifconfig</code></p><p>如果报错 需要升级 <code>sudo apt install net-tools </code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116151509554.png" alt="image-20220116151509554"></p><p>不要在意ip不对，我一共启动了三个虚拟机，分别是 5、6、6为后缀的IP</p><h3 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h3><p>固定IP算是设置完毕了，超简单.</p><h2 id="设置固定IP方法二"><a href="#设置固定IP方法二" class="headerlink" title="设置固定IP方法二"></a>设置固定IP方法二</h2><p>第一种方式虽然说设置了，但是不能联网，所以，找各种资料，亲测成功</p><h3 id="打印路由表"><a href="#打印路由表" class="headerlink" title="打印路由表"></a>打印路由表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs she">root@gitlab:~# route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         172.25.160.1    0.0.0.0         UG    0      0        0 eth0<br>172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0<br>172.20.0.0      0.0.0.0         255.255.0.0     U     0      0        0 br-1cd785becad1<br>172.25.160.0    0.0.0.0         255.255.255.0   U     0      0        0 eth0<br></code></pre></td></tr></table></figure><p>注意这网关Gateway 是 <code>172.25.160.1</code></p><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@gitlab:~# cd /etc/netplan/<br>root@gitlab:/etc/netplan# ls<br>50-cloud-init.yaml  50-cloud-init.yaml111  50-cloud-init.yaml222<br>root@gitlab:/etc/netplan# cat 50-cloud-init.yaml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">This file is generated from information provided by the datasource.  Changes</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">to it will not persist across an instance reboot.  To <span class="hljs-built_in">disable</span> cloud-init<span class="hljs-string">&#x27;s</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">network configuration capabilities, write a file</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">network: &#123;config: disabled&#125;</span></span><br>network:<br>    ethernets:<br>        eth0:<br>            addresses: [172.25.160.160/24]   #设置静态IP和掩码<br>            gateway4: 172.25.160.1           #设置网关地址    <br>            dhcp4: false                     #禁用DHCP<br>            nameservers:<br>                addresses: [114.114.114.114, 8.8.8.8] # 设置主、备DNS<br>    version: 2<br>root@gitlab:/etc/netplan# sudo netplan apply<br></code></pre></td></tr></table></figure><p>按照上面中这一段修改即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">network:<br>    ethernets:<br>        eth0:<br>            addresses: [172.25.160.160/24]   #设置静态IP和掩码<br>            gateway4: 172.25.160.1           #设置网关地址    <br>            dhcp4: false                     #禁用DHCP<br>            nameservers:<br>                addresses: [114.114.114.114, 8.8.8.8] # 设置主、备DNS<br>    version: 2<br></code></pre></td></tr></table></figure><h3 id="重启生效"><a href="#重启生效" class="headerlink" title="重启生效"></a>重启生效</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@gitlab:/etc/netplan# sudo netplan apply<br></code></pre></td></tr></table></figure><h2 id="安装-FTP"><a href="#安装-FTP" class="headerlink" title="安装 FTP"></a>安装 FTP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install vsftpd<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置开机启动并启动ftp服务</span><br>systemctl enable vsftpd<br>systemctl start vsftpd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看其运行状态</span><br>systemctl  status vsftpd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启服务</span><br>systemctl  restart vsftpd<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改配置</span><br>sudo /etc/vsftpd.conf<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">存在的修改成酱紫：</span><br>listen=NO # 阻止 vsftpd 在独立模式下运行<br>listen_ipv6=YES # vsftpd 将监听 ipv6 而不是 IPv4，你可以根据你的网络情况设置<br>anonymous_enable=NO # 关闭匿名登录<br>local_enable=YES # 允许本地用户登录<br>write_enable=YES # 启用可以修改文件的 FTP 命令<br>local_umask=022 # 本地用户创建文件的 umask 值<br>dirmessage_enable=YES # 当用户第一次进入新目录时显示提示消息<br>xferlog_enable=YES # 一个存有详细的上传和下载信息的日志文件<br>connect_from_port_20=YES # 在服务器上针对 PORT 类型的连接使用端口 20（FTP 数据）<br>xferlog_std_format=YES # 保持标准日志文件格式<br>pam_service_name=vsftpd # vsftpd 将使用的 PAM 验证设备的名字<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">windows 10 multipass配合Hype-v管理器使用</summary>
    
    
    
    <category term="Ubuntu" scheme="http://example.com/categories/Ubuntu/"/>
    
    
    <category term="multipass" scheme="http://example.com/tags/multipass/"/>
    
    <category term="ubuntu" scheme="http://example.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>微服务之负载均衡示例</title>
    <link href="http://example.com/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://example.com/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2022-01-01T13:23:15.000Z</published>
    <updated>2022-05-29T12:13:34.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101213220.jpeg"></p><h2 id="下载-nginx-download"><a href="#下载-nginx-download" class="headerlink" title="下载 nginx: download"></a>下载 <a href="http://nginx.org/en/download.html">nginx: download</a></h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205536.png" alt="image-20220101205520096"></p><h2 id="配置Conf"><a href="#配置Conf" class="headerlink" title="配置Conf"></a>配置Conf</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br><span class="hljs-comment">#user  nobody;</span><br>worker_processes  1;<br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br>events &#123;<br>    worker_connections  1024;<br>&#125;<br><br><br>http &#123;<br>    include       mime.types;<br>    default_type  application/octet-stream;<br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br><br>    sendfile        on;<br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    keepalive_timeout  65;<br><br>    <span class="hljs-comment">#gzip  on;</span><br><br><span class="hljs-comment"># 配置多个地址</span><br>    upstream ServiceInstance&#123;<br>        server localhost:5726;<br>        server localhost:5727;<br>        server localhost:5728;<br>    &#125;<br><br>    server &#123;<br>    <span class="hljs-comment"># 监听端口 8080</span><br>        listen       8080;<br>        <br>        <span class="hljs-comment"># 监听本地 可替换成IP</span><br>        server_name  localhost;<br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        location / &#123;<br>            <span class="hljs-comment"># root   html;</span><br>            <span class="hljs-comment"># index  index.html index.htm;</span><br>            <br>            <span class="hljs-comment"># 指向配置</span><br>            proxy_pass http://ServiceInstance;<br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br><br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    root           html;</span><br>        <span class="hljs-comment">#    fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#    fastcgi_index  index.php;</span><br>        <span class="hljs-comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#    include        fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123;</span><br>        <span class="hljs-comment">#    deny  all;</span><br>        <span class="hljs-comment">#&#125;</span><br>    &#125;<br><br><br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       8000;</span><br>    <span class="hljs-comment">#    listen       somename:8080;</span><br>    <span class="hljs-comment">#    server_name  somename  alias  another.alias;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br><br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       443 ssl;</span><br>    <span class="hljs-comment">#    server_name  localhost;</span><br><br>    <span class="hljs-comment">#    ssl_certificate      cert.pem;</span><br>    <span class="hljs-comment">#    ssl_certificate_key  cert.key;</span><br><br>    <span class="hljs-comment">#    ssl_session_cache    shared:SSL:1m;</span><br>    <span class="hljs-comment">#    ssl_session_timeout  5m;</span><br><br>    <span class="hljs-comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#    ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205643.png" alt="image-20220101205640901"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205705.png" alt="image-20220101205703680"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205720.png" alt="image-20220101205718852"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205815.png" alt="image-20220101205813853"></p><h2 id="执行多个应用"><a href="#执行多个应用" class="headerlink" title="执行多个应用"></a>执行多个应用</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101210216.png" alt="image-20220101210214117"></p><p>执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet run urls=&quot;http://*:5726&quot;<br>dotnet run urls=&quot;http://*:5727&quot;<br>dotnet run urls=&quot;http://*:5728&quot;<br></code></pre></td></tr></table></figure><h2 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\nginx-1.18.0\nginx-1.18.0&gt;start nginx<br></code></pre></td></tr></table></figure><h2 id="停止Nginx"><a href="#停止Nginx" class="headerlink" title="停止Nginx"></a>停止Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\nginx-1.18.0\nginx-1.18.0&gt;nginx.exe -s stop<br></code></pre></td></tr></table></figure><h2 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nginx -s reload<br></code></pre></td></tr></table></figure><h2 id="访问流程"><a href="#访问流程" class="headerlink" title="访问流程"></a>访问流程</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101211445.png" alt="访问流程"></p><h2 id="访问结果"><a href="#访问结果" class="headerlink" title="访问结果"></a>访问结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101211706.png" alt="image-20220101211704858"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>Nginx 不能伸缩</p><p>也就是再加一个端口，要把端口加进来让Nginx发现，需要修改配置并且重启Nginx，做不到热处理</p><p>看下面的Consul吧</p><h1 id="Consul"><a href="#Consul" class="headerlink" title="Consul"></a>Consul</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102220532.jpeg" alt="Consul"></p><h2 id="Consul-服务注册"><a href="#Consul-服务注册" class="headerlink" title="Consul 服务注册"></a>Consul 服务注册</h2><p>参考：<a href="https://www.cnblogs.com/pudefu/p/15034011.html">.NET 5.0实现Consul服务注册 - 半山上的人 - 博客园 (cnblogs.com)</a></p><h2 id="Consul-1-7-2"><a href="#Consul-1-7-2" class="headerlink" title="Consul 1.7.2"></a>Consul 1.7.2</h2><p><a href="http://localhost:8500/">http://localhost:8500</a> 1.7.2 长这样</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102201501.png" alt="image-20220102201451530"></p><h2 id="consul-1-11-1"><a href="#consul-1-11-1" class="headerlink" title="consul 1.11.1"></a>consul 1.11.1</h2><p><a href="http://localhost:8500/">http://localhost:8500</a> 1.11.1 长这样</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102211047.png" alt="image-20220102211045421"></p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="appsetting-json-配置文件"><a href="#appsetting-json-配置文件" class="headerlink" title="appsetting.json 配置文件"></a>appsetting.json 配置文件</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;Logging&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;LogLevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;Default&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Warning&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;AllowedHosts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;*&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;ConsulConfig&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;ServiceId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;d72e7de8b01a43acac640b1a00b26c81&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-comment">//可以换成Guid</span><br>    <span class="hljs-attr">&quot;ServiceName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HarrisService&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ServiceIP&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//当前应用部署的服务器IP地址</span><br>    <span class="hljs-attr">&quot;ServicePort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5726</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//当前应用部署的服务器端口  可以去参数传来得Port</span><br>    <span class="hljs-attr">&quot;ConsulIP&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//Consul部署的服务器IP地址</span><br>    <span class="hljs-attr">&quot;ConsulPort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">8500</span> <span class="hljs-comment">//Consul端口</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Model-实体类"><a href="#Model-实体类" class="headerlink" title="Model 实体类"></a>Model 实体类</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsulTest.Models</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ServiceConfig</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务唯一ID</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ServiceId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务部署的IP</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ServiceIP &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务部署的端口</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> ServicePort &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务名称</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ServiceName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> consul部署的IP</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ConsulIP &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> consul端口</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> ConsulPort &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 权重</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> weight &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="AppBuilderExtensions-帮助类"><a href="#AppBuilderExtensions-帮助类" class="headerlink" title="AppBuilderExtensions 帮助类"></a>AppBuilderExtensions 帮助类</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Consul;<br><span class="hljs-keyword">using</span> ConsulTest.Models;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Builder;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Hosting;<br><span class="hljs-keyword">using</span> System;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsulTest.Untiy</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppBuilderExtensions</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IApplicationBuilder <span class="hljs-title">RegisterConsul</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IApplicationBuilder app, IHostApplicationLifetime lifetime, ServiceConfig serviceConfig</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> consulClient = <span class="hljs-keyword">new</span> ConsulClient(x =&gt; x.Address = <span class="hljs-keyword">new</span> Uri(<span class="hljs-string">$&quot;http://<span class="hljs-subst">&#123;serviceConfig.ConsulIP&#125;</span>:<span class="hljs-subst">&#123;serviceConfig.ConsulPort&#125;</span>&quot;</span>));<br>            <span class="hljs-keyword">var</span> httpCheck = <span class="hljs-keyword">new</span> AgentServiceCheck()<br>            &#123;<br>                DeregisterCriticalServiceAfter = TimeSpan.FromSeconds(<span class="hljs-number">5</span>),<span class="hljs-comment">//服务器启动5秒后注册</span><br>                Interval = TimeSpan.FromMinutes(<span class="hljs-number">1</span>),<span class="hljs-comment">//每分钟检测一次（健康检查间隔时间）</span><br>                HTTP = <span class="hljs-string">$&quot;http://<span class="hljs-subst">&#123;serviceConfig.ServiceIP&#125;</span>:<span class="hljs-subst">&#123;serviceConfig.ServicePort&#125;</span>/api/health&quot;</span>,<span class="hljs-comment">//本服务健康检查地址</span><br>                Timeout = TimeSpan.FromSeconds(<span class="hljs-number">20</span>),<br>            &#125;;<br>            <span class="hljs-keyword">var</span> registerAgent = <span class="hljs-keyword">new</span> AgentServiceRegistration()<br>            &#123;<br>                Check = httpCheck,<br>                Checks = <span class="hljs-keyword">new</span>[] &#123; httpCheck &#125;,<br>                ID = serviceConfig.ServiceId,<span class="hljs-comment">//一定要指定服务ID，否则每次都会创建一个新的服务节点</span><br>                Name = serviceConfig.ServiceName,<br>                Address = serviceConfig.ServiceIP,<br>                Port = serviceConfig.ServicePort,<br>                Tags = <span class="hljs-keyword">new</span>[] &#123; <span class="hljs-string">$&quot;urlprefix-/<span class="hljs-subst">&#123;serviceConfig.ServiceName&#125;</span>&quot;</span> &#125;<span class="hljs-comment">//添加 urlprefix-/servicename 格式的tag标签，以便Fabio识别</span><br>            &#125;;<br>            consulClient.Agent.ServiceRegister(registerAgent).Wait();<span class="hljs-comment">//服务启动时注册，使用Consul API进行注册（HttpClient发起）</span><br>            lifetime.ApplicationStopped.Register(() =&gt;<br>            &#123;<br>                consulClient.Agent.ServiceDeregister(registerAgent.ID).Wait();<span class="hljs-comment">//服务器停止时取消注册</span><br>            &#125;);<br>            <span class="hljs-keyword">return</span> app;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Startup-注册Consul"><a href="#Startup-注册Consul" class="headerlink" title="Startup 注册Consul"></a>Startup 注册Consul</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> ConsulTest.Models;<br><span class="hljs-keyword">using</span> ConsulTest.Untiy;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Builder;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Configuration;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.DependencyInjection;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> Microsoft.OpenApi.Models;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsulTest</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Startup</span>(<span class="hljs-params">IConfiguration configuration</span>)</span><br>        &#123;<br>            Configuration = configuration;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> IConfiguration Configuration &#123; <span class="hljs-keyword">get</span>; &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to add services to the container.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>        &#123;<br><br>            services.AddControllers();<br>            services.AddSwaggerGen(c =&gt;<br>            &#123;<br>                c.SwaggerDoc(<span class="hljs-string">&quot;v1&quot;</span>, <span class="hljs-keyword">new</span> OpenApiInfo &#123; Title = <span class="hljs-string">&quot;ConsulTest&quot;</span>, Version = <span class="hljs-string">&quot;v1&quot;</span> &#125;);<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Configure</span>(<span class="hljs-params">IApplicationBuilder app, IWebHostEnvironment env, IHostApplicationLifetime lifetime,IConfiguration configuration</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (env.IsDevelopment())<br>            &#123;<br>                app.UseDeveloperExceptionPage();<br>                app.UseSwagger();<br>                app.UseSwaggerUI(c =&gt; c.SwaggerEndpoint(<span class="hljs-string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="hljs-string">&quot;ConsulTest v1&quot;</span>));<br>            &#125;<br><br>            app.UseRouting();<br><br>            app.UseAuthorization();<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 注册Consul服务</span><br><br>            <span class="hljs-keyword">var</span> serviceConfig = Configuration.GetSection(<span class="hljs-string">&quot;ConsulConfig&quot;</span>).Get&lt;ServiceConfig&gt;();<br><br>            <span class="hljs-comment">//获取weight</span><br>            <span class="hljs-built_in">int</span> weight = <span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(configuration[<span class="hljs-string">&quot;weight&quot;</span>]) ? <span class="hljs-number">1</span> : <span class="hljs-built_in">int</span>.Parse(configuration[<span class="hljs-string">&quot;weight&quot;</span>]);<br><br>            serviceConfig.weight = weight;<br><br>            serviceConfig.ServiceId = <span class="hljs-string">&quot;Service&quot;</span> + Guid.NewGuid().ToString();<br><br>            <span class="hljs-comment">//获取端口</span><br>            <span class="hljs-built_in">int</span> port = <span class="hljs-built_in">int</span>.Parse(configuration[<span class="hljs-string">&quot;port&quot;</span>]);<br><br>            serviceConfig.ServicePort = port;<br><br>            Console.WriteLine(port);<br><br>            app.RegisterConsul(lifetime, serviceConfig);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            app.UseEndpoints(endpoints =&gt;<br>            &#123;<br>                endpoints.MapControllers();<br>            &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="启动Consul"><a href="#启动Consul" class="headerlink" title="启动Consul"></a>启动Consul</h2><p>consul agent -dev（如果需要其他机器访问，命令为consul agent -dev -client 0.0.0.0 -ui）</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102215501.png" alt="image-20220102215459287"></p><h2 id="启动API应用"><a href="#启动API应用" class="headerlink" title="启动API应用"></a>启动API应用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet run --urls=&quot;http://*:5726&quot; --ip=127.0.0.1 --port=5726 --weight=2<br>dotnet run --urls=&quot;http://*:5727&quot; --ip=127.0.0.1 --port=5727 --weight=3<br>dotnet run --urls=&quot;http://*:5728&quot; --ip=127.0.0.1 --port=5728 --weight=4<br>dotnet run --urls=&quot;http://*:5729&quot; --ip=127.0.0.1 --port=5729 --weight=5<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102221132.png" alt="image-20220102215640307"></p><h2 id="Consul-应用界面"><a href="#Consul-应用界面" class="headerlink" title="Consul 应用界面"></a>Consul 应用界面</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102211047.png" alt="image-20220102211045421"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102221139.png" alt="image-20220102215804743"></p><h2 id="Consul-服务发现"><a href="#Consul-服务发现" class="headerlink" title="Consul 服务发现"></a>Consul 服务发现</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102220007.png" alt="image-20220102220005859"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102220043.png" alt="image-20220102220034369"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Consul;<br><span class="hljs-keyword">using</span> CustomerDemo.Models;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Diagnostics;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">CustomerDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HomeController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger&lt;HomeController&gt; _logger;<br><br>        <span class="hljs-comment">// （随机标识）没考虑溢出问题，到达一定长度应该重置</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> iSeed = <span class="hljs-number">0</span>;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HomeController</span>(<span class="hljs-params">ILogger&lt;HomeController&gt; logger</span>)</span><br>        &#123;<br>            _logger = logger;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> Consul 服务发现</span><br><br>            ConsulClient client = <span class="hljs-keyword">new</span> ConsulClient(c =&gt;<br>            &#123;<br>                c.Address = <span class="hljs-keyword">new</span> Uri(<span class="hljs-string">&quot;http://localhost:8500&quot;</span>);<br>                c.Datacenter = <span class="hljs-string">&quot;dc1&quot;</span>;<br>            &#125;);<br><br>            <span class="hljs-keyword">var</span> response = client.Agent.Services().Result.Response;<br><br>            <span class="hljs-built_in">string</span> url = <span class="hljs-string">&quot;http://HarrisService/WeatherForecast&quot;</span>;<br><br>            Uri uri = <span class="hljs-keyword">new</span> Uri(url);<br><br>            <span class="hljs-built_in">string</span> groupName = uri.Host;<br><br>            AgentService service = <span class="hljs-literal">null</span>;<br><br>            <span class="hljs-keyword">var</span> serviceDictionary = response.Where(s =&gt; s.Value.Service.Equals(groupName, StringComparison.OrdinalIgnoreCase)).ToList();<br><br>            <span class="hljs-comment"><span class="hljs-doctag">///</span>/方便测试这里取第一个</span><br>            <span class="hljs-comment">//&#123;</span><br>            <span class="hljs-comment">//    service = serviceDictionary.FirstOrDefault().Value;</span><br>            <span class="hljs-comment">//&#125;</span><br><br>            <span class="hljs-comment">//均衡策略实现</span><br>            &#123;<br>                <span class="hljs-comment">//随机策略---平均策略</span><br>                <span class="hljs-comment">//Random rd = new Random();</span><br>                <span class="hljs-comment">//int index = rd.Next(serviceDictionary.Count);</span><br>                <span class="hljs-comment">//service = serviceDictionary[index].Value;</span><br><br>                <span class="hljs-comment">// 随机策略/平均策略</span><br>                <span class="hljs-comment">//var array = serviceDictionary.ToArray();</span><br>                <span class="hljs-comment">//service = array[new Random(iSeed++).Next(0, array.Length)].Value;</span><br>            &#125;<br><br>            <span class="hljs-comment">// 轮巡策略 / 平均策略</span><br>            &#123;<br>                <span class="hljs-comment">//var array = serviceDictionary.ToArray();</span><br>                <span class="hljs-comment">//service = array[iSeed++ % array.Length].Value;// 取余数：就能按照0 1 2 的顺序调用</span><br>            &#125;<br><br>            <span class="hljs-comment">// 权重模式</span><br>            &#123;<br>                List&lt;KeyValuePair&lt;<span class="hljs-built_in">string</span>, AgentService&gt;&gt; serviceList = <span class="hljs-keyword">new</span> List&lt;KeyValuePair&lt;<span class="hljs-built_in">string</span>, AgentService&gt;&gt;();<br><br>                <span class="hljs-keyword">foreach</span> (KeyValuePair&lt;<span class="hljs-built_in">string</span>, AgentService&gt; agentService <span class="hljs-keyword">in</span> serviceDictionary)<br>                &#123;<br>                    <span class="hljs-built_in">int</span> count = <span class="hljs-built_in">int</span>.Parse(agentService.Value.Tags[<span class="hljs-number">0</span>]);<br><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; count; i++)<br>                    &#123;<br>                        serviceList.Add(agentService);<br>                    &#125;<br>                &#125;<br><br>                service = serviceList[<span class="hljs-keyword">new</span> Random(iSeed++).Next(<span class="hljs-number">0</span>, serviceList.Count())].Value;<br>            &#125;<br><br>            url = <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;uri.Scheme&#125;</span>://<span class="hljs-subst">&#123;service.Address&#125;</span>:<span class="hljs-subst">&#123;service.Port&#125;</span><span class="hljs-subst">&#123;uri.PathAndQuery&#125;</span>&quot;</span>;<br><br>            <span class="hljs-built_in">string</span> content = Untiy.WebApiHelperExtend.InvokeApi(url);<br><br>            <span class="hljs-keyword">var</span> weather = Newtonsoft.Json.JsonConvert.DeserializeObject&lt;List&lt;WeatherForecast&gt;&gt;(content);<br><br>            <span class="hljs-keyword">this</span>.ViewData[<span class="hljs-string">&quot;weather&quot;</span>] = weather;<br><br>            <span class="hljs-keyword">this</span>.ViewData[<span class="hljs-string">&quot;Url&quot;</span>] = url;<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Privacy</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br><br>        [<span class="hljs-meta">ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Error</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> View(<span class="hljs-keyword">new</span> ErrorViewModel &#123; RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Index-cshtml"><a href="#Index-cshtml" class="headerlink" title="Index.cshtml"></a>Index.cshtml</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs csharp">@&#123;<br>    ViewData[<span class="hljs-string">&quot;Title&quot;</span>] = <span class="hljs-string">&quot;Home Page&quot;</span>;<br>&#125;<br><br>&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;<br>    &lt;h1 <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;display-4&quot;</span>&gt;Welcome&lt;/h1&gt;<br><br>    &lt;h2&gt;Weather&lt;/h2&gt;<br><br>    &lt;ul&gt;<br><br>        @foreach (WeatherForecast item <span class="hljs-keyword">in</span> ViewData[<span class="hljs-string">&quot;weather&quot;</span>] <span class="hljs-keyword">as</span> List&lt;WeatherForecast&gt;)<br>        &#123;<br>            &lt;li&gt;@item.summary +@item.date.ToString()+ @item.summary+@item.temperatureC+@item.temperatureF &lt;/li&gt;<br>        &#125;<br><br>    &lt;/ul&gt;<br><br>    &lt;h2&gt;@this.ViewData[<span class="hljs-string">&quot;Url&quot;</span>]&lt;/h2&gt;<br><br>    &lt;p&gt;Learn about &lt;a href=<span class="hljs-string">&quot;https://docs.microsoft.com/aspnet/core&quot;</span>&gt;building Web apps <span class="hljs-keyword">with</span> ASP.NET Core&lt;/a&gt;.&lt;/p&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><h3 id="WebApiHelperExtend-cs"><a href="#WebApiHelperExtend-cs" class="headerlink" title="WebApiHelperExtend.cs"></a>WebApiHelperExtend.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Net.Http;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">CustomerDemo.Untiy</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 接口调用帮助类</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WebApiHelperExtend</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 模拟调用接口</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;url&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">InvokeApi</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url</span>)</span><br>        &#123;<br>            <span class="hljs-comment">// 提供基类，用于从由URI标识的资源发送HTTP请求和接收HTTP响应。</span><br>            <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>            &#123;<br>                <span class="hljs-comment">// Http请求消息</span><br>                HttpRequestMessage message = <span class="hljs-keyword">new</span> HttpRequestMessage();<br>                <span class="hljs-comment">// 请求方式</span><br>                message.Method = HttpMethod.Get;<br>                <span class="hljs-comment">// 请求地址</span><br>                message.RequestUri = <span class="hljs-keyword">new</span> Uri(url);<br>                <span class="hljs-comment">// 以异步操作的形式发送HTTP请求。并接收响应信息</span><br>                <span class="hljs-keyword">var</span> result = httpClient.SendAsync(message).Result;<br>                <span class="hljs-comment">// 将HTTP内容序列化为字符串</span><br>                <span class="hljs-built_in">string</span> content = result.Content.ReadAsStringAsync().Result;<br>                <span class="hljs-keyword">return</span> content;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WeatherForecast</span><br>&#123;<br>    <span class="hljs-keyword">public</span> DateTime date &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> temperatureC &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> temperatureF &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> summary &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220103171437.png" alt="image-20220103171428670"></p><h2 id="Docker-For-Consul"><a href="#Docker-For-Consul" class="headerlink" title="Docker For Consul"></a>Docker For Consul</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker pull consul <span class="hljs-comment"># 默认拉取latest</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker pull consul:1.6.1 <span class="hljs-comment"># 拉取指定版本</span></span><br></code></pre></td></tr></table></figure><h3 id="运行第一个节点-leader"><a href="#运行第一个节点-leader" class="headerlink" title="运行第一个节点 leader"></a>运行第一个节点 leader</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8600:8600 --publish 8500:8500 --publish 8300:8300 --publish 8301:8301 --publish 8302:8302 --name consul-01 --restart always --volume D:\docker\Consul\Consul-01\data:/consul/data --volume D:\docker\Consul\Consul-01\config:/consul/config consul:latest agent --server --bootstrap-expect=1 --ui --bind=0.0.0.0 --client=0.0.0.0 <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8600:8600 --publish 8500:8500 --publish 8300:8300 --publish 8301:8301 --publish 8302:8302 --name consul-01 --volume /docker/consul/data:/consul/data  --volume /docker/consul/config:/consul/config consul:latest agent  --server --bootstrap-expect=1 --ui --bind=0.0.0.0 --client=0.0.0.0 <br></code></pre></td></tr></table></figure><ul><li>其中，端口示意：<ul><li><code>8500</code>端口，用于Consul的HTTP接口及Web UI界面。</li><li><code>8600</code>端口，用于Consul已注册服务的DNS服务。</li><li><code>8300</code>端口，用于同一数据中心内Consul Server的RPC通信。</li><li><code>8301</code>端口，用于同一数据中心内Consul Server的gossip serf lan通信。</li><li><code>8302</code>端口，用于不同数据中心内Consul Server的gossip serf wan通信。</li></ul></li></ul><ul><li><p>其中，参数示意：</p><ul><li><p><code>–net=host</code> docker参数, 使得docker容器越过了net namespace的隔离，免去手动指定端口映射的步骤</p></li><li><p><code>-server</code> consul支持以server或client的模式运行, server是服务发现模块的核心, client主要用于转发请求</p></li><li><p><code>-advertise</code> 将本机私有IP传递到consul</p></li><li><p><code>-retry-join</code> 指定要加入的consul节点地址，失败后会重试, 可多次指定不同的地址</p></li><li><p><code>-client</code> 指定consul绑定在哪个client地址上，这个地址可提供HTTP、DNS、RPC等服务，默认是&gt;127.0.0.1</p></li><li><p><code>-bind</code> 绑定服务器的ip地址；该地址用来在集群内部的通讯，集群内的所有节点到地址必须是可达的，&gt;默认是0.0.0.0</p></li><li><p><code>allow_stale</code> 设置为true则表明可从consul集群的任一server节点获取dns信息, false则表明每次请求都会&gt;经过consul的server leader</p></li><li><p><code>-bootstrap-expect</code> 数据中心中预期的服务器数。指定后，Consul将等待指定数量的服务器可用，然后&gt;启动群集。允许自动选举leader，但不能与传统-bootstrap标志一起使用, 需要在server模式下运行。</p></li><li><p><code>-data-dir</code> 数据存放的位置，用于持久化保存集群状态</p></li><li><p><code>-node</code> 群集中此节点的名称，这在群集中必须是唯一的，默认情况下是节点的主机名。</p></li><li><p><code>-config-dir</code> 指定配置文件，当这个目录下有 .json 结尾的文件就会被加载，详细可参考<a href="https://www.consul.io/docs/agent/options.html#configuration_files">https://www.consul.io/docs/agent/options.html#configuration_files</a></p></li><li><p><code>-enable-script-checks</code> 检查服务是否处于活动状态，类似开启心跳</p></li><li><p><code>-datacenter</code> 数据中心名称</p></li><li><p><code>-ui</code> 开启ui界面</p></li><li><p><code>-join</code> 指定ip, 加入到已有的集群中</p></li></ul></li></ul><h3 id="查看已存在节点的IP"><a href="#查看已存在节点的IP" class="headerlink" title="查看已存在节点的IP"></a>查看已存在节点的IP</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker inspect --format=&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27; consul-01<br></code></pre></td></tr></table></figure><h3 id="开启第二个节点"><a href="#开启第二个节点" class="headerlink" title="开启第二个节点"></a>开启第二个节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8501:8500 --name consul-02 --restart always --volume D:\docker\Consul\Consul-02\data:/consul/data --volume D:\docker\Consul\Consul-02\config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br></code></pre></td></tr></table></figure><h3 id="开启第三个节点"><a href="#开启第三个节点" class="headerlink" title="开启第三个节点"></a>开启第三个节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8502:8500 --name consul-03 --restart always --volume D:\docker\Consul\Consul-03\data:/consul/data --volume D:\docker\Consul\Consul-03\config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br></code></pre></td></tr></table></figure><h3 id="查看Consul集群信息"><a href="#查看Consul集群信息" class="headerlink" title="查看Consul集群信息"></a>查看Consul集群信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shelll">docker exec -it consul-01 consul members<br></code></pre></td></tr></table></figure><h3 id="查看容器IP"><a href="#查看容器IP" class="headerlink" title="查看容器IP"></a>查看容器IP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shel">docker inspect NAMES<br># 查看容器所有状态信息；<br>docker inspect --format=&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27;<br># 查看 容器ip 地址<br>docker inspect --format &#x27;&#123;&#123;.Name&#125;&#125; &#123;&#123;.State.Running&#125;&#125;&#x27;<br># 容器运行状态<br></code></pre></td></tr></table></figure><h2 id="net-core-发布"><a href="#net-core-发布" class="headerlink" title="net core 发布"></a>net core 发布</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220110225514.png" alt="img"></p><h3 id="新建Dockerfile"><a href="#新建Dockerfile" class="headerlink" title="新建Dockerfile"></a>新建Dockerfile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base<br>WORKDIR /app<br>EXPOSE 80<br><br>WORKDIR /app<br>COPY .  /app<br>ENTRYPOINT [&quot;dotnet&quot;, &quot;ConsulTest.dll&quot;]<br></code></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t consultest02:v2.0 .<br></code></pre></td></tr></table></figure><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name consultest02 -p 80:80 -d consultest02:v2.0<br></code></pre></td></tr></table></figure><h3 id="宿主访问容器"><a href="#宿主访问容器" class="headerlink" title="宿主访问容器"></a>宿主访问容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">添加路由<br>route -p add 172.17.0.0 MASK 255.255.255.0 192.168.65.2<br>删除路由<br>route delete 172.17.0.0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Nginx+Consul 负载均衡示例</summary>
    
    
    
    <category term="Nginx" scheme="http://example.com/categories/Nginx/"/>
    
    
    <category term=".net core" scheme="http://example.com/tags/net-core/"/>
    
    <category term="Nginx" scheme="http://example.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>微服务基础知识</title>
    <link href="http://example.com/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2022-01-01T13:23:15.000Z</published>
    <updated>2022-05-19T07:34:29.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微服务基础知识"><a href="#微服务基础知识" class="headerlink" title="微服务基础知识"></a>微服务基础知识</h1><h2 id="什么是微服务"><a href="#什么是微服务" class="headerlink" title="什么是微服务"></a>什么是微服务</h2><p>先说百度百科给的定义</p><p>​        一种软件开发技术- 面向服务的体系结构（<code>SOA</code>）架构样式的一种变体，它提倡将单一应用程序划分成一组小的服务，服务之间互相协调、互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务与服务间采用轻量级的通信机制互相沟通（通常是基于HTTP的<code>Restful API</code>）。每个服务都围绕着具体业务进行构建，并且能够独立地部署到生产环境、类生产环境等。另外，应尽量避免统一的、集中式的服务管理机制，对具体的一个服务而言，应根据上下文，选择合适的语言、工具对其进行构建。</p><p>结合网上大佬的帖子，光说微服务体会不到微服务，有人说的对，聊到概念，应该是从现有的<strong>单体应用</strong>与<strong>微服务架构</strong>进行比较才能得出结论。</p><h3 id="传统架构-amp-微服务架构"><a href="#传统架构-amp-微服务架构" class="headerlink" title="传统架构&amp;微服务架构"></a>传统架构&amp;微服务架构</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com//image-20220213115320787.png" alt="image-20220213115320787"></p><h2 id="微服务的优点"><a href="#微服务的优点" class="headerlink" title="微服务的优点"></a>微服务的优点</h2><ul><li>微服务是<strong>松藕合</strong>的，无论是在开发阶段或部署阶段都是独立的。</li><li>能够快速响应, 局部修改容易, 一个服务出现问题不会影响整个应用。</li><li>易于和第三方应用系统集成, 支持使用<strong>不同的语言开发</strong>, 允许你利用融合最新技术。</li><li>每个微服务都很小，足够内聚，足够小，代码容易理解。团队能够更关注自己的工作成果, 聚焦指定的业务功能或业务需求。</li><li>开发简单、开发效率提高，一个服务可能就是专一的只干一件事, 能够被小团队单独开发，这个小团队可以是 2 到 5 人的开发人员组成。</li></ul><h2 id="微服务的缺点"><a href="#微服务的缺点" class="headerlink" title="微服务的缺点"></a>微服务的缺点</h2><ul><li>由于服务增加，复杂性同时增加，在生产环境中项目涉及到的微服务数量会很庞杂，尤其是在微服务之间的互相调用。</li><li>资源一致性</li><li>运维成本增加，也就是需要更多的<code>DevOps</code>操作</li><li>由于分布式部署问题追踪问题难</li></ul><h2 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h2><ol><li><p><strong>单一职责</strong>：每个微服务只需要实现自己的业务逻辑就可以了，比如订单管理模块，它只需要处理订单的业务逻辑就可以了，其它的不必考虑</p></li><li><p><strong>服务自治</strong>：每个微服务从开发、测试、运维等都是独立的，包括存储的数据库也都是独立的，自己就有一套完整的流程，我们完全可以把它当成一个项目来对待。不必依赖于其它模块。</p></li><li><p><strong>轻量级通信</strong>：首先是通信的语言非常的轻量，第二，该通信方式需要是跨语言、跨平台的，之所以要跨平台、跨语言就是为了让每个微服务都有足够的独立性，可以不受技术的钳制。</p></li><li><p><strong>接口明确</strong>：由于微服务之间可能存在着调用关系，为了尽量避免以后由于某个微服务的接口变化而导致其它微服务都做调整，在设计之初就要考虑到所有情况，让接口尽量做的更通用，更灵活，从而尽量避免其它模块也做调整。</p></li></ol><h2 id="微服务如何拆分"><a href="#微服务如何拆分" class="headerlink" title="微服务如何拆分"></a>微服务如何拆分</h2><h2 id="微服务技术栈"><a href="#微服务技术栈" class="headerlink" title="微服务技术栈"></a>微服务技术栈</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvODI0MjkxLzIwMjAwNC84MjQyOTEtMjAyMDA0MDYyMjMxMDM3MzAtNTI3NjA5NzU4LmpwZw" alt="img"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p><a href="https://blog.csdn.net/a312586670/article/details/105375184/">.Net Core微服务架构技术栈的那些事</a></p></li><li><p><a href="https://www.cnblogs.com/xiao-feng/p/9129784.html">微服务定义及.Net Core中用的技术 - me黄小峰 - 博客园</a></p></li></ul>]]></content>
    
    
    <summary type="html">微服务基础知识</summary>
    
    
    
    <category term="MicroService" scheme="http://example.com/categories/MicroService/"/>
    
    
    <category term="MicroService" scheme="http://example.com/tags/MicroService/"/>
    
  </entry>
  
  <entry>
    <title>Docker for Something</title>
    <link href="http://example.com/2021/12/01/Docker-Something/"/>
    <id>http://example.com/2021/12/01/Docker-Something/</id>
    <published>2021-12-01T14:34:32.000Z</published>
    <updated>2023-02-14T01:19:57.087Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Docker-for-Something"><a href="#Docker-for-Something" class="headerlink" title="Docker for Something"></a>Docker for Something</h1><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201225103.jpeg" alt="MongoDB" style="zoom:33%;" /><h3 id="安装镜像"><a href="#安装镜像" class="headerlink" title="安装镜像"></a>安装镜像</h3><p><code>docker pull mongo</code></p><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><p><code>docker run --name mongo -v /docker/mongodb/data:/data/db -d -p 27017:27017 mongo</code></p><h3 id="配置账号密码"><a href="#配置账号密码" class="headerlink" title="配置账号密码"></a>配置账号密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it mongo /bin/sh<br><span class="hljs-meta prompt_"># </span><span class="language-bash">mongo admin</span><br></code></pre></td></tr></table></figure><h3 id="创建Mongo账号"><a href="#创建Mongo账号" class="headerlink" title="创建Mongo账号"></a>创建Mongo账号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">//选择admin数据库<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">use admin</span> <br>//创建账号<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">db.createUser(&#123;user: <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-built_in">pwd</span>: <span class="hljs-string">&#x27;admin123456&#x27;</span>, roles: [&#123;role: <span class="hljs-string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="hljs-string">&quot;admin&quot;</span> &#125;]&#125;);</span> <br>//测试账号<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"> db.auth(<span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;admin123456&#x27;</span>)</span> <br></code></pre></td></tr></table></figure><h3 id="登录测试"><a href="#登录测试" class="headerlink" title="登录测试"></a>登录测试</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201223653.png" alt="MongoDB"></p><h2 id="SqlServer"><a href="#SqlServer" class="headerlink" title="SqlServer"></a>SqlServer</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201224941.jpeg" alt="MSSQL" style="zoom:50%;" /><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>需要大概2G的空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull mcr.microsoft.com/mssql/server:2017-latest<br></code></pre></td></tr></table></figure><p><em>或者阿里云的</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry.cn-hangzhou.aliyuncs.com/newbe36524/server:2019-latest<br></code></pre></td></tr></table></figure><h3 id="创建映射目录"><a href="#创建映射目录" class="headerlink" title="创建映射目录"></a>创建映射目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\docker\SqlServer\data<br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -e &quot;ACCEPT_EULA=Y&quot; -e &quot;SA_PASSWORD=MyMMSQL1433...&quot;  -p 1433:1433 -v D:\docker\SqlServer\data:/var/opt/mssql/data --name mssql -d mcr.microsoft.com/mssql/server:2017-latest<br></code></pre></td></tr></table></figure><p>注意：</p><p>参数中必须用双引号，否则:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">The SQL Server End-User License Agreement (EULA) must be accepted before SQL<br><br>Server can start. The license terms for this product can be downloaded from<br><br>...<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205003335.png" alt="映射完毕"></p><p>然后，连接成功</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128232443.png" alt="image-20211128232440826"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128231959.png" alt="image-20211128231956823"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128232047.png" alt="image-20211128232044403"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128232509.png" alt="image-20211128232508455"></p><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/mysql.jpeg" style="zoom:50%;" /><h3 id="docker-pull-mysql"><a href="#docker-pull-mysql" class="headerlink" title="docker pull mysql"></a><code>docker pull mysql</code></h3><p>提前设置好相关映射文件夹 <code>/mysql/conf</code> &amp; <code>/mysql/data</code></p><p><code>docker run --name mysql -v /mysql/conf:/etc/mysql/conf.d -v /mysql/data:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql</code></p><ol><li><p>进入<code>mysql</code></p><p><code>docker exec -it mysql mysql -uroot -p123456</code></p><p>报这个错的话，就稍等, 我就是等等就好了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mysql: [<span class="hljs-built_in">Warning</span>] World-writable<span class="hljs-built_in"> config </span>file <span class="hljs-string">&#x27;/etc/mysql/conf.d/my.cnf&#x27;</span> is ignored.<br>mysql: [<span class="hljs-built_in">Warning</span>] Using a password on the command line<span class="hljs-built_in"> interface </span>can be insecure.<br><span class="hljs-built_in">ERROR</span> 2002 (HY000): Can<span class="hljs-string">&#x27;t cdocker exec -it mysql mysql -uroot -p123456 &#x27;</span>/var/run/mysqld/mysqld.sock<span class="hljs-string">&#x27; (2)</span><br></code></pre></td></tr></table></figure><p>报错：<code>ERROR 1045 (28000): Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)</code></p><p>解决：<a href="https://www.jianshu.com/p/a49389497a0c">Docker安装mysql5.7报错 ERROR 1045 (28000): Access denied for user - 简书 (jianshu.com)</a></p></li><li><p>修改密码</p><p><code>alter user &#39;root&#39;@&#39;%&#39; identified with mysql_native_password by &#39;Aa111111&#39;;</code></p></li><li><p>本地DBeaver 连接</p><ol><li>服务器地址 127.0.0.1</li><li>端口 3306</li><li>数据库 空</li><li>用户名 root</li><li>密码 Aa111111</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211114162009.png" alt="image-20211114162007559"></p></li></ol><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/Oracle.jpeg" style="zoom: 33%;" /><h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g<br></code></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker tag &lt;imageid&gt; 重命名<br><br>docker rmi &lt;之前的名&gt;<br></code></pre></td></tr></table></figure><h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 1521:1521 -v /home/oracle/app/oracle/oradata:/usr/local/docker/oracle --name oracle11 aliyunoracle_11g<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 1521:1521 -v /usr/houshuai/oracle/oradata:/usr/local/docker/oracle --name oracle11 oracle11g    --20230214指向到映射文件夹<br></code></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it oracle11 bash<br></code></pre></td></tr></table></figure><h3 id="切换-Root"><a href="#切换-Root" class="headerlink" title="切换 Root"></a>切换 Root</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">su root <br><span class="hljs-meta prompt_">#</span><span class="language-bash">输入密码：helowin</span><br></code></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/profile <br><br>export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2<br>export ORACLE_SID=helowin<br>export PATH=$ORACLE_HOME/bin:$PATH<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使配置生效</span><br>source /etc/profile<br></code></pre></td></tr></table></figure><h3 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s $ORACLE_HOME/bin/sqlplus /usr/bin<br></code></pre></td></tr></table></figure><h3 id="切换Oracle登录SqlPlus"><a href="#切换Oracle登录SqlPlus" class="headerlink" title="切换Oracle登录SqlPlus"></a>切换Oracle登录SqlPlus</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">su - oracle<br><br>sqlplus /nolog<br><br>conn /as sysdba<br></code></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">system</span> identified <span class="hljs-keyword">by</span> <span class="hljs-keyword">system</span>;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> sys identified <span class="hljs-keyword">by</span> sys;<br></code></pre></td></tr></table></figure><h3 id="修改最大连接数"><a href="#修改最大连接数" class="headerlink" title="修改最大连接数"></a>修改最大连接数</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">alter<span class="hljs-built_in"> system </span><span class="hljs-built_in">set</span> <span class="hljs-attribute">processes</span>=1000 <span class="hljs-attribute">scope</span>=spfile;<br></code></pre></td></tr></table></figure><h3 id="修改密码规则策略为密码永不过期"><a href="#修改密码规则策略为密码永不过期" class="headerlink" title="修改密码规则策略为密码永不过期"></a>修改密码规则策略为密码永不过期</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> PROFILE <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">LIMIT</span> PASSWORD_LIFE_TIME UNLIMITED;<br></code></pre></td></tr></table></figure><h3 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span>SPACE TSP_JHEMR <br>  datafile <span class="hljs-string">&#x27;/home/oracle/app/oracle/oradata/jhemr/jhemr.dbf&#x27;</span> <br>  size <span class="hljs-number">20</span>M <br>  reuse<br>  autoextend <span class="hljs-keyword">on</span><br>  next <span class="hljs-number">5</span>M<br>  maxsize unlimited,<br>  <span class="hljs-string">&#x27;/home/oracle/app/oracle/oradata/jhemr/jhemr2.dbf&#x27;</span><br>  size <span class="hljs-number">20</span>M<br>  reuse<br>  autoextend <span class="hljs-keyword">on</span><br>  next <span class="hljs-number">5</span>M<br>  maxsize unlimited<br>LOGGING   <br>PERMANENT   <br>EXTENT MANAGEMENT <span class="hljs-keyword">LOCAL</span> AUTOALLOCATE   <br>BLOCKSIZE <span class="hljs-number">8</span>K   <br>SEGMENT SPACE MANAGEMENT MANUAL   <br>FLASHBACK <span class="hljs-keyword">ON</span>;<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span>SPACE TSP_JHDICT <br>DATAFILE <span class="hljs-string">&#x27;/home/oracle/app/oracle/oradata/jhemr/JHDICT.DBF&#x27;</span> <br>  size <span class="hljs-number">20</span>M<br>  reuse<br>  autoextend <span class="hljs-keyword">on</span><br>  next <span class="hljs-number">5</span>M<br>  maxsize unlimited<br>LOGGING   <br>PERMANENT   <br>EXTENT MANAGEMENT <span class="hljs-keyword">LOCAL</span> AUTOALLOCATE   <br>BLOCKSIZE <span class="hljs-number">8</span>K   <br>SEGMENT SPACE MANAGEMENT MANUAL   <br>FLASHBACK <span class="hljs-keyword">ON</span>;<br></code></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> jhemr identified <span class="hljs-keyword">by</span> &quot;jhemr&quot; <span class="hljs-keyword">default</span> tablespace TSP_JHEMR temporary tablespace temp;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">connect</span> <span class="hljs-keyword">to</span> jhemr;<br><span class="hljs-keyword">grant</span> resource <span class="hljs-keyword">to</span> jhemr;<br><span class="hljs-keyword">grant</span> dba <span class="hljs-keyword">to</span> jhemr;<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> JHDICT IDENTIFIED <span class="hljs-keyword">BY</span> JHDICT<br><span class="hljs-keyword">default</span> TABLESPACE TSP_JHDICT;<br><span class="hljs-keyword">GRANT</span> UNLIMITED TABLESPACE <span class="hljs-keyword">TO</span> JHDICT;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">TO</span> JHDICT;<br><span class="hljs-keyword">GRANT</span> RESOURCE <span class="hljs-keyword">TO</span> JHDICT;<br></code></pre></td></tr></table></figure><h3 id="导入DMP文件"><a href="#导入DMP文件" class="headerlink" title="导入DMP文件"></a>导入DMP文件</h3><p>先通过xftp 将文件放到linux中，然后再复制到容器内。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">docker <span class="hljs-built_in">cp</span> 本地文件 容器ID:容器目录 <span class="hljs-comment">#将文件传到容器</span></span><br>docker cp /usr/oracle/oracledata/TR_JHEMR_20211009.dmp 2b4a86f4331f:dmpfile<br>docker cp /usr/oracle/oracledata/TR_JHDICT_20211009.dmp 2b4a86f4331f:dmpfile<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">imp jhemr/jhemr@helowin <span class="hljs-attribute">file</span>=/dmpfile/TR_JHEMR_20211009.dmp <span class="hljs-attribute">full</span>=y<br>imp JHDICT/JHDICT@helowin <span class="hljs-attribute">file</span>=/dmpfile/TR_JHDICT_20211009.dmp <span class="hljs-attribute">full</span>=y<br></code></pre></td></tr></table></figure><p>如果遇到 <code>bash: imp: command not found</code> 应该是环境变量的配置没跟上，执行 <code>source /etc/profile</code>即可。</p><h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204251340905.jpeg" alt="rabbitmqlogo" style="zoom: 50%;" /><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -dit --name Myrabbitmq -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 rabbitmq:management<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">-d                          #后台运行<br>-- homename fuyi-rabbit     #主机名<br>RABBITMQ_DEFAULT_USER=admin #可视化界面登录用户名<br>RABBITMQ_DEFAULT_PASS=admin #可视化界面登录密码<br>-p 15672:15672              #端口映射<br>c20                         #镜像ID<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">docker 安装别的软件</summary>
    
    
    
    <category term="Docker" scheme="http://example.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Navicat Premium 15</title>
    <link href="http://example.com/2021/11/30/Navicat-Premium15/"/>
    <id>http://example.com/2021/11/30/Navicat-Premium15/</id>
    <published>2021-11-30T14:31:43.000Z</published>
    <updated>2022-05-19T07:34:29.075Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Navicat-Premium-15"><a href="#Navicat-Premium-15" class="headerlink" title="Navicat Premium 15"></a><code>Navicat Premium 15</code></h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201224654.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这几天一直想着把自己的电脑上Docker中把主流的数据库镜像都安装一遍，现在已经安装了</p><ol><li><code>Oracle-XE</code></li><li><code>MySql</code></li><li><code>Mssql</code></li><li><code>MongoDB</code></li></ol><p>以前一直用的是<code>PLSql</code>、<code>Dbeaver Community</code>, 考虑到<code>Dbeaver</code> 如果不用企业版也就是 <code>Dbeaver-ee</code> 连接<code>MongoDB</code>有点空难，所以考虑本篇说的软件<code>Navicat Premium 15</code>，主要记录怎么安装和<a href="http://www.downcc.com/soft/430673.html">科技</a>。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载完正常安装即可。关闭所有安全软件，包括<code>windows安全中心</code></p><p>重点</p><h3 id="打开注册机"><a href="#打开注册机" class="headerlink" title="打开注册机"></a>打开注册机</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130232749.png" alt="打开注册机"></p><h3 id="选择路径"><a href="#选择路径" class="headerlink" title="选择路径"></a>选择路径</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130232926.png" alt="选择路径"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233016.png" alt="稍等一下"></p><h3 id="核对信息"><a href="#核对信息" class="headerlink" title="核对信息"></a>核对信息</h3><p>​    然后回到注册机，确保以下几个选项是对应的</p><ul><li>License为Ent<a href="http://www.downcc.com/k/erpapp/">erp</a>rise</li><li>Products为Premium</li><li>Languages为Simplified Chinese（简体中文，其它语言版本请自选）</li><li>Resale Version为Site license</li><li>Your Name和Your Organization可以任意填写或者默认</li></ul><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233244.png" alt="核对信息"></p><h3 id="生产注册码"><a href="#生产注册码" class="headerlink" title="生产注册码"></a>生产注册码</h3><p>上面几项设置好后，点击“Generate”，会自动生成一个注册码，如下图</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233350.png" alt="点击“Generate”"></p><h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p>这个时候就可以打开<code>navicat premium15</code>，将上面生成的注册码复制到注册窗口中（注册窗在头部“帮助”选项下面），点击激活，</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233445.png"></p><p>会提示因为激活服务器暂时不可使用…..我们选择“手动激活”</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233524.png"></p><p>会生成一个请求码</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233829.png"></p><p>将请求码复制到注册机中的Request Code框中，然后点击Generate按钮</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233900.png"></p><p>将上面的激活码复制到手动激活窗口中，并点击“激活”</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233926.png"></p><p>这个时候就会弹出<code>Navicat</code> 现已激活</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233955.png"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>扫描下述二维码，下载安装，仅供学习，资金充裕也希望充米买正版。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130231927.png" alt="扫描下载，仅供学习"></p><h2 id="避坑"><a href="#避坑" class="headerlink" title="避坑"></a>避坑</h2><p>连接<code>MSSQL</code>的时候需要执行安装目录的下的一个文件<code>msodbcsql_64.msi</code>,算是驱动。</p><h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130234625.png" alt="Oracle"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130234723.png" alt="Mysql"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130234750.png" alt="MSSQL"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201223653.png" alt="MongoDB"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201223758.png" alt="Mysql|Oracle|Mssql|MongoDB"></p>]]></content>
    
    
    <summary type="html">记录安装过程</summary>
    
    
    
    <category term="StorageBox" scheme="http://example.com/categories/StorageBox/"/>
    
    
    <category term="Program" scheme="http://example.com/tags/Program/"/>
    
  </entry>
  
  <entry>
    <title>T4模板应用</title>
    <link href="http://example.com/2021/11/26/T4%E6%A8%A1%E6%9D%BF%E5%BA%94%E7%94%A8/"/>
    <id>http://example.com/2021/11/26/T4%E6%A8%A1%E6%9D%BF%E5%BA%94%E7%94%A8/</id>
    <published>2021-11-26T07:50:06.000Z</published>
    <updated>2022-05-19T07:34:29.080Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="T4模板应用（一）"><a href="#T4模板应用（一）" class="headerlink" title="T4模板应用（一）"></a><code>T4</code>模板应用（一）</h1><p>之前在搭建系统框架的过程中用到的功能点，功效就是模板的功能。</p><p>个人是用<code>T4</code>模板批量生产到系统中的<code>CRUD</code>中，现在记录一下，不记录具体基础语法，只记录大概过程。</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><h3 id="ModelAuto-ttinclude"><a href="#ModelAuto-ttinclude" class="headerlink" title="ModelAuto.ttinclude"></a><code>ModelAuto.ttinclude</code></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Core&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;EnvDTE&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.IO&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Text&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Microsoft.VisualStudio.TextTemplating&quot;#&gt;</span><br><br>&lt;<span class="hljs-meta">#+</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> Block &#123;<br>        <span class="hljs-keyword">public</span> String Name;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Start, Length;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;Block&gt; blocks = <span class="hljs-keyword">new</span> List&lt;Block&gt;();<br>    <span class="hljs-keyword">public</span> Block currentBlock;<br>    <span class="hljs-keyword">public</span> Block footerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> Block headerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> ITextTemplatingEngineHost host;<br>    <span class="hljs-keyword">public</span> ManagementStrategy strategy;<br>    <span class="hljs-keyword">public</span> StringBuilder template;<br>    <span class="hljs-keyword">public</span> String OutputPath &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Manager</span>(<span class="hljs-params">ITextTemplatingEngineHost host, StringBuilder template, <span class="hljs-built_in">bool</span> commonHeader</span>)</span> &#123;<br>        <span class="hljs-keyword">this</span>.host = host;<br>        <span class="hljs-keyword">this</span>.template = template;<br>        OutputPath = String.Empty;<br>        strategy = ManagementStrategy.Create(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartBlock</span>(<span class="hljs-params">String name</span>)</span> &#123;<br>        currentBlock = <span class="hljs-keyword">new</span> Block &#123; Name = name, Start = template.Length &#125;;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartFooter</span>()</span> &#123;<br>        footerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndFooter</span>()</span> &#123;<br>        footerBlock.Length = template.Length - footerBlock.Start;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartHeader</span>()</span> &#123;<br>        headerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndHeader</span>()</span> &#123;<br>        headerBlock.Length = template.Length - headerBlock.Start;<br>    &#125;    <br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndBlock</span>()</span> &#123;<br>        currentBlock.Length = template.Length - currentBlock.Start;<br>        blocks.Add(currentBlock);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Process</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> split</span>)</span> &#123;<br>        String header = template.ToString(headerBlock.Start, headerBlock.Length);<br>        String footer = template.ToString(footerBlock.Start, footerBlock.Length);<br>        blocks.Reverse();<br>        <span class="hljs-keyword">foreach</span>(Block block <span class="hljs-keyword">in</span> blocks) &#123;<br>            String fileName = Path.Combine(OutputPath, block.Name);<br>            <span class="hljs-keyword">if</span> (split) &#123;<br>                String content = header + template.ToString(block.Start, block.Length) + footer;<br>                strategy.CreateFile(fileName, content);<br>                template.Remove(block.Start, block.Length);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                strategy.DeleteFile(fileName);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> ManagementStrategy <span class="hljs-title">Create</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> (host <span class="hljs-keyword">is</span> IServiceProvider) ? <span class="hljs-keyword">new</span> VSManagementStrategy(host) : <span class="hljs-keyword">new</span> ManagementStrategy(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">ManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        File.WriteAllText(fileName, content);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>            File.Delete(fileName);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">VSManagementStrategy</span> : <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-keyword">private</span> EnvDTE.ProjectItem templateProjectItem;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">VSManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">host</span>)</span> &#123;<br>        IServiceProvider hostServiceProvider = (IServiceProvider)host;<br>        <span class="hljs-keyword">if</span> (hostServiceProvider == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain hostServiceProvider&quot;</span>);<br><br>        EnvDTE.DTE dte = (EnvDTE.DTE)hostServiceProvider.GetService(<span class="hljs-keyword">typeof</span>(EnvDTE.DTE));<br>        <span class="hljs-keyword">if</span> (dte == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain DTE from host&quot;</span>);<br><br>        templateProjectItem = dte.Solution.FindProjectItem(host.TemplateFile);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        <span class="hljs-keyword">base</span>.CreateFile(fileName, content);<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; templateProjectItem.ProjectItems.AddFromFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; FindAndDeleteFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">FindAndDeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">foreach</span>(EnvDTE.ProjectItem projectItem <span class="hljs-keyword">in</span> templateProjectItem.ProjectItems) &#123;<br>            <span class="hljs-keyword">if</span> (projectItem.get_FileNames(<span class="hljs-number">0</span>) == fileName) &#123;<br>                projectItem.Delete();<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h3 id="AllModelTemplate-tt"><a href="#AllModelTemplate-tt" class="headerlink" title="AllModelTemplate.tt"></a><code>AllModelTemplate.tt</code></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ template debug=&quot;true&quot; hostspecific=&quot;true&quot; language=&quot;C#&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ output extension=&quot;.cs&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;$(TargetDir)Oracle.ManagedDataAccess.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Oracle.ManagedDataAccess&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ include file=&quot;ModelAuto.ttinclude&quot;#&gt;</span><br>&lt;<span class="hljs-meta"># var manager2 = new Manager(Host, GenerationEnvironment, true) &#123; OutputPath = Path.GetDirectoryName(Host.TemplateFile)&#125;; #&gt;</span><br>&lt;<span class="hljs-meta"># </span><br>ModelManager manager = <span class="hljs-keyword">new</span> ModelManager();<br>List&lt;<span class="hljs-built_in">string</span>&gt; list=manager.GetTableList();<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> list)<br>    &#123;<br><span class="hljs-built_in">string</span> tableName=item;<br>        DataTable table= manager.GetTableSchema(tableName);<br> <span class="hljs-meta">#&gt;</span><br><br> &lt;<span class="hljs-meta"># </span><br>manager2.StartBlock(tableName+<span class="hljs-string">&quot;.cs&quot;</span>);<br> <span class="hljs-meta">#&gt;</span><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Model</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据表实体类：<span class="hljs-doctag">&lt;#= tableName #&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">Serializable()</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> &lt;#= <span class="hljs-title">tableName</span> #&gt;<br>&#123;<br>&lt;<span class="hljs-meta">#</span><br><span class="hljs-keyword">foreach</span>(DataRow row <span class="hljs-keyword">in</span> table.Rows)<br>&#123;<br><span class="hljs-meta">#&gt;</span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;#=row[&quot;备注&quot;]#&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span>     </span><br>   <span class="hljs-keyword">public</span> &lt;<span class="hljs-meta">#= manager.TransFromSqlType(row[&quot;数据类型&quot;].ToString())#&gt; &lt;#=row[&quot;字段名&quot;]#&gt;&#123; get; set; &#125;</span><br>&lt;<span class="hljs-meta">#&#125;</span><br><span class="hljs-meta">#&gt;</span><br>&#125;<br>&#125;<br><br>&lt;<span class="hljs-meta"># manager2.EndBlock(); #&gt;</span><br><br>&lt;<span class="hljs-meta">#</span><br>    &#125;  <br> <span class="hljs-meta">#&gt; </span><br>   <br>&lt;<span class="hljs-meta"># manager2.Process(true); #&gt;</span><br><br>&lt;<span class="hljs-meta">#+</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ModelManager</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库连接字符串</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> CONNECTION_STRING = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XE;&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 用户信息表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> PERSONINFO_TABLE_NAME = <span class="hljs-string">&quot;XLZF_USERS&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据表名查询表结构信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> SELECT_SCHEMA_BY_TABLE_NAME = <span class="hljs-string">@&quot;SELECT A.column_name    字段名,                                                                                     A.data_type      数据类型,</span><br><span class="hljs-string">                                                                    A.data_length    长度,</span><br><span class="hljs-string">                                                                    A.data_precision 整数位,</span><br><span class="hljs-string">                                                                    A.Data_Scale     小数位,</span><br><span class="hljs-string">                                                                    A.nullable       允许空值,</span><br><span class="hljs-string">                                                                    A.Data_default   缺省值,</span><br><span class="hljs-string">                                                                    B.comments       备注,</span><br><span class="hljs-string">                                                                    A.TABLE_NAME     表名</span><br><span class="hljs-string">                                                                    FROM user_tab_columns A,user_col_comments B  </span><br><span class="hljs-string">                                                                    WHERE a.COLUMN_NAME = b.column_name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = B.Table_Name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = &#x27;&#123;0&#125;&#x27;&quot;</span>;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获得数据连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-keyword">private</span> Oracle.ManagedDataAccess.Client.<span class="hljs-function">OracleConnection <span class="hljs-title">GetConnection</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(CONNECTION_STRING);<br>        &#125;<br><br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到当前用户的所有表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetTableList</span>()</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-string">&quot;SELECT * FROM USER_TABLES&quot;</span>;<br>            DataTable dt = OracleHelper.ExecuteDataTable(sql);<br>            List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>            <span class="hljs-keyword">if</span> (dt!=<span class="hljs-literal">null</span>&amp;&amp;dt.Rows.Count&gt;<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dt.Rows.Count; i++)<br>                &#123;<br>                    list.Add(dt.Rows[i][<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>                &#125; <br>            &#125;<br>            <span class="hljs-keyword">return</span> list;<br>         &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 释放连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;con&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ReleaseConnection</span>(<span class="hljs-params">Oracle.ManagedDataAccess.Client.OracleConnection con</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (con != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (con.State == ConnectionState.Open)<br>                &#123;<br>                    con.Close();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取表内字段及字段其他信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;tableName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> DataTable <span class="hljs-title">GetTableSchema</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> tableName</span>)</span><br>        &#123;<br>            DataTable dt;<br><br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection con = GetConnection())<br>            &#123;<br>                con.Open();<br><br>                Oracle.ManagedDataAccess.Client.OracleCommand cmd = con.CreateCommand();<br><br>                cmd.CommandText = <span class="hljs-built_in">string</span>.Format(SELECT_SCHEMA_BY_TABLE_NAME,tableName);<br><br>                cmd.CommandType = CommandType.Text;<br><br>                Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(cmd);<br><br>                DataSet ds = <span class="hljs-keyword">new</span> DataSet(); <br><br>                adapter.Fill(ds);<br><br>                dt = ds.Tables[<span class="hljs-number">0</span>];<br>            &#125;<br>            <span class="hljs-keyword">return</span> dt;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> SQL</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;type&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">TransFromSqlType</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> type</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(type))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;number&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;int&quot;</span>;<br>            &#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;date&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;DateTime&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;nvarchar2&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>        &#125; <br><br>    &#125;<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta">#+ </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OracleHelper</span><br>    &#123;<br><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> oracleConnectionStr = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XE;&quot;</span>;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">ExecuteDataTable</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123; <br>                conn.Open();<br><br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br><br>                    command.Parameters.AddRange(paramList);<br><br>                    DataTable dt = <span class="hljs-keyword">new</span> DataTable();<br><br>                    Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(command);<br><br>                    adapter.Fill(dt);<br><br>                    <span class="hljs-keyword">return</span> dt;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">ExecuteNonQuery</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteNonQuery();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> <span class="hljs-title">ExecuteScalar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteScalar();<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br> <span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>右键运行T4模板</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210438.png" alt="image-20211205210429402"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210454.png" alt="image-20211205210452146"></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210522.png" alt="image-20211205210516763"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210544.png" alt="image-20211205210543104"></p><h1 id="T4模板应用（二）"><a href="#T4模板应用（二）" class="headerlink" title="T4模板应用（二）"></a><code>T4</code>模板应用（二）</h1><p>这次是通过 <code>MMSQL</code> 然后运行 <code>T4</code> 模板，生产数据库中所有表对应的实体类</p><h2 id="前提-1"><a href="#前提-1" class="headerlink" title="前提"></a>前提</h2><p><code>ModelAuto.ttinclude</code> 与前面的一致。</p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p><code>ModelTemplate.tt</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ template language=&quot;C#&quot; debug=&quot;True&quot; hostspecific=&quot;True&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ output extension=&quot;.cs&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data.SqlClient&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ include file=&quot;ModelAuto.ttinclude&quot;#&gt;</span><br>&lt;<span class="hljs-meta"># var manager = new Manager(Host, GenerationEnvironment, true) &#123; OutputPath = Path.GetDirectoryName(Host.TemplateFile)&#125;; #&gt;</span><br>&lt;<span class="hljs-meta"># </span><br><span class="hljs-built_in">string</span> connectionString = <span class="hljs-string">&quot;Data Source=.;Initial Catalog=XLZF_TESTDB;User ID=sa;Password=MyMMSQL1433...;&quot;</span>; <br>    SqlConnection conn = <span class="hljs-keyword">new</span> SqlConnection(connectionString); <br>    conn.Open(); <br>    System.Data.DataTable schema = conn.GetSchema(<span class="hljs-string">&quot;TABLES&quot;</span>); <br>    <span class="hljs-built_in">string</span> selectQuery = <span class="hljs-string">&quot;select * from @tableName&quot;</span>; <br>    SqlCommand command = <span class="hljs-keyword">new</span> SqlCommand(selectQuery,conn); <br>    SqlDataAdapter ad = <span class="hljs-keyword">new</span> SqlDataAdapter(command); <br>    System.Data.DataSet ds = <span class="hljs-keyword">new</span> DataSet();<br> <br>    <span class="hljs-built_in">string</span> propQuery = <span class="hljs-string">&quot;SELECT 表名=sobj.name,字段名=scol.name,字段说明=sprop.[value] FROM syscolumns as scol inner join sys.sysobjects as sobj on scol.id=sobj.id and sobj.xtype=&#x27;U&#x27; and sobj.name&lt;&gt;&#x27;dtproperties&#x27; left join sys.extended_properties as sprop on scol.id=sprop.major_id and scol.colid=sprop.minor_id where sobj.name=&#x27;@tableName&#x27; and scol.name=&#x27;@columnName&#x27;&quot;</span>; <br>    SqlCommand command2 = <span class="hljs-keyword">new</span> SqlCommand(propQuery,conn); <br>    SqlDataAdapter ad2 = <span class="hljs-keyword">new</span> SqlDataAdapter(command2); <br>    System.Data.DataSet ds2 = <span class="hljs-keyword">new</span> DataSet();<br> <span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    <span class="hljs-keyword">foreach</span>(System.Data.DataRow row <span class="hljs-keyword">in</span> schema.Rows) <br>    &#123;  <span class="hljs-meta">#&gt;   </span><br><br>     &lt;<span class="hljs-meta"># </span><br>manager.StartBlock(row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>]+<span class="hljs-string">&quot;.cs&quot;</span>);<br> <span class="hljs-meta">#&gt;</span><br><span class="hljs-comment">//----------&lt;#=row[&quot;TABLE_NAME&quot;].ToString()#&gt;开始----------</span><br>    <br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">MyProject.Entities</span> <br>&#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据表实体类：<span class="hljs-doctag">&lt;#= row[&quot;TABLE_NAME&quot;].ToString() #&gt;</span> </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        [<span class="hljs-meta">Serializable()</span>]<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> &lt;#= <span class="hljs-title">row</span>[&quot;<span class="hljs-title">TABLE_NAME</span>&quot;].<span class="hljs-title">ToString</span>() #&gt;<br>        &#123;    <br>    &lt;<span class="hljs-meta">#</span><br>            ds.Tables.Clear();<br>            command.CommandText = selectQuery.Replace(<span class="hljs-string">&quot;@tableName&quot;</span>,row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString()); <br>            ad.FillSchema(ds, SchemaType.Mapped, row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>            <span class="hljs-keyword">foreach</span> (DataColumn dc <span class="hljs-keyword">in</span> ds.Tables[<span class="hljs-number">0</span>].Columns)<br>            &#123; <br>            <span class="hljs-meta">#&gt;</span><br>            &lt;<span class="hljs-meta"># </span><br>             ds2.Tables.Clear();<br>             command2.CommandText = propQuery.Replace(<span class="hljs-string">&quot;@tableName&quot;</span>,row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString()); <br>             command2.CommandText = command2.CommandText.Replace(<span class="hljs-string">&quot;@columnName&quot;</span>,dc.ColumnName); <br>             ad2.Fill(ds2);<br>            <span class="hljs-meta">#&gt; </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;#= dc.DataType.Name #&gt;</span>:<span class="hljs-doctag">&lt;#=ds2.Tables[0].Rows[0].ItemArray[2]#&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span>                       </span><br><span class="hljs-keyword">public</span> &lt;<span class="hljs-meta">#= dc.DataType.Name #&gt; &lt;#= dc.ColumnName #&gt; &#123;get;set;&#125;   </span><br>            &lt;<span class="hljs-meta"># &#125;  #&gt;   </span><br>        &#125;    <br>     &#125;<br><br><span class="hljs-comment">//----------&lt;#=row[&quot;TABLE_NAME&quot;].ToString()#&gt;结束----------</span><br><br>&lt;<span class="hljs-meta"># manager.EndBlock(); #&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    &#125; <span class="hljs-meta">#&gt; </span><br><br>&lt;<span class="hljs-meta">#</span><br>    manager.Process(<span class="hljs-literal">true</span>);<br><span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h2><p>常规右键-运行自定义工具</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213046.png" alt="数据库表"></p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213126.png" alt="运行结果"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213259.png" alt="image-20211205213257560"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213412.png" alt="image-20211205213411337"></p><h1 id="T4模板应用（三）"><a href="#T4模板应用（三）" class="headerlink" title="T4模板应用（三）"></a><code>T4</code>模板应用（三）</h1><p>本节主要描述给<code>T4</code>模板传参，应用<code>T4</code>模板生产指定的程序。</p><p>由于涉及到传参，先定义一个</p><h2 id="参数实体"><a href="#参数实体" class="headerlink" title="参数实体"></a>参数实体</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">Serializable</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ParameterEntity</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 命名空间</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> NameSpace &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 作者</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Auth &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 表名</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TableName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 连接字符串</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ConnectionString &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ModelAuto-ttinclude-1"><a href="#ModelAuto-ttinclude-1" class="headerlink" title="ModelAuto.ttinclude"></a><code>ModelAuto.ttinclude</code></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Core&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;D:\2-技术实战\01-C#\04-Winform\DemoCode\packages\EnvDTE.8.0.2\lib\net10\EnvDTE.dll&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.IO&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Text&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Microsoft.VisualStudio.TextTemplating&quot;#&gt;</span><br><br>&lt;<span class="hljs-meta">#+</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> Block &#123;<br>        <span class="hljs-keyword">public</span> String Name;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Start, Length;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;Block&gt; blocks = <span class="hljs-keyword">new</span> List&lt;Block&gt;();<br>    <span class="hljs-keyword">public</span> Block currentBlock;<br>    <span class="hljs-keyword">public</span> Block footerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> Block headerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> ITextTemplatingEngineHost host;<br>    <span class="hljs-keyword">public</span> ManagementStrategy strategy;<br>    <span class="hljs-keyword">public</span> StringBuilder template;<br>    <span class="hljs-keyword">public</span> String OutputPath &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Manager</span>(<span class="hljs-params">ITextTemplatingEngineHost host, StringBuilder template, <span class="hljs-built_in">bool</span> commonHeader</span>)</span> &#123;<br>        <span class="hljs-keyword">this</span>.host = host;<br>        <span class="hljs-keyword">this</span>.template = template;<br>        OutputPath = String.Empty;<br>        strategy = ManagementStrategy.Create(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartBlock</span>(<span class="hljs-params">String name</span>)</span> &#123;<br>        currentBlock = <span class="hljs-keyword">new</span> Block &#123; Name = name, Start = template.Length &#125;;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartFooter</span>()</span> &#123;<br>        footerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndFooter</span>()</span> &#123;<br>        footerBlock.Length = template.Length - footerBlock.Start;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartHeader</span>()</span> &#123;<br>        headerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndHeader</span>()</span> &#123;<br>        headerBlock.Length = template.Length - headerBlock.Start;<br>    &#125;    <br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndBlock</span>()</span> &#123;<br>        currentBlock.Length = template.Length - currentBlock.Start;<br>        blocks.Add(currentBlock);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Process</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> split</span>)</span> &#123;<br>        String header = template.ToString(headerBlock.Start, headerBlock.Length);<br>        String footer = template.ToString(footerBlock.Start, footerBlock.Length);<br>        blocks.Reverse();<br>        <span class="hljs-keyword">foreach</span>(Block block <span class="hljs-keyword">in</span> blocks) &#123;<br>            String fileName = Path.Combine(OutputPath, block.Name);<br>            <span class="hljs-keyword">if</span> (split) &#123;<br>                String content = header + template.ToString(block.Start, block.Length) + footer;<br>                strategy.CreateFile(fileName, content);<br>                template.Remove(block.Start, block.Length);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                strategy.DeleteFile(fileName);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> ManagementStrategy <span class="hljs-title">Create</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> (host <span class="hljs-keyword">is</span> IServiceProvider) ? <span class="hljs-keyword">new</span> VSManagementStrategy(host) : <span class="hljs-keyword">new</span> ManagementStrategy(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">ManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        File.WriteAllText(fileName, content);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>            File.Delete(fileName);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">VSManagementStrategy</span> : <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-keyword">private</span> EnvDTE.ProjectItem templateProjectItem;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">VSManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">host</span>)</span> &#123;<br>        IServiceProvider hostServiceProvider = (IServiceProvider)host;<br>        <span class="hljs-keyword">if</span> (hostServiceProvider == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain hostServiceProvider&quot;</span>);<br><br>        EnvDTE.DTE dte = (EnvDTE.DTE)hostServiceProvider.GetService(<span class="hljs-keyword">typeof</span>(EnvDTE.DTE));<br>        <span class="hljs-keyword">if</span> (dte == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain DTE from host&quot;</span>);<br><br>        templateProjectItem = dte.Solution.FindProjectItem(host.TemplateFile);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        <span class="hljs-keyword">base</span>.CreateFile(fileName, content);<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; templateProjectItem.ProjectItems.AddFromFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; FindAndDeleteFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">FindAndDeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">foreach</span>(EnvDTE.ProjectItem projectItem <span class="hljs-keyword">in</span> templateProjectItem.ProjectItems) &#123;<br>            <span class="hljs-keyword">if</span> (projectItem.get_FileNames(<span class="hljs-number">0</span>) == fileName) &#123;<br>                projectItem.Delete();<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="启动方法"><a href="#启动方法" class="headerlink" title="启动方法"></a>启动方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Mian_Two</span>()</span><br>&#123;<br>    ParameterEntity parameterEntity = <span class="hljs-keyword">new</span> ParameterEntity();<br><br>    parameterEntity.Auth = <span class="hljs-string">&quot;MR.XLZF&quot;</span>;<br><br>    parameterEntity.ConnectionString = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XLZF;&quot;</span>;<br><br>    parameterEntity.NameSpace = <span class="hljs-string">&quot;T4ParameterSample&quot;</span>;<br><br>    parameterEntity.TableName = <span class="hljs-string">&quot;CONFIGTABLE&quot;</span>;<br><br>    <span class="hljs-built_in">string</span> T4File = <span class="hljs-string">&quot;AllModelTemplate_1.tt&quot;</span>;<br><br>    <span class="hljs-built_in">string</span> templateFileName = Path.GetFullPath(T4File);<br><br>    CustomTextTemplatingEngineHost host = <span class="hljs-keyword">new</span> CustomTextTemplatingEngineHost();<br><br>    Engine engine = <span class="hljs-keyword">new</span> Engine();<br><br>    host.TemplateFileValue = templateFileName;<br><br>    host.Session = <span class="hljs-keyword">new</span> TextTemplatingSession();<br><br>    host.Session.Add(<span class="hljs-string">&quot;parameter1&quot;</span>, parameterEntity);<br><br>    <span class="hljs-built_in">string</span> input = File.ReadAllText(templateFileName);<br><br>    <span class="hljs-built_in">string</span> output = engine.ProcessTemplate(input, host);<br><br>    Console.WriteLine(output);<br><br>    <span class="hljs-keyword">foreach</span> (CompilerError error <span class="hljs-keyword">in</span> host.Errors)<br>    &#123;<br>        Console.WriteLine(error.ToString());<br>    &#125;<br><br>    Console.ReadLine();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="CustomTextTemplatingEngineHost-cs"><a href="#CustomTextTemplatingEngineHost-cs" class="headerlink" title="CustomTextTemplatingEngineHost.cs"></a><code>CustomTextTemplatingEngineHost.cs</code></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.CodeDom.Compiler;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> Microsoft.VisualStudio.TextTemplating;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">T4ParameterSample</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomTextTemplatingEngineHost</span> : <span class="hljs-title">ITextTemplatingEngineHost</span>, <span class="hljs-title">ITextTemplatingSessionHost</span><br>    &#123;<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> ITextTemplatingEngineHost</span><br>        <span class="hljs-comment">//the path and file name of the text template that is being processed</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">internal</span> <span class="hljs-built_in">string</span> TemplateFileValue;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TemplateFile<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> TemplateFileValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//This will be the extension of the generated text output file.</span><br>        <span class="hljs-comment">//The host can provide a default by setting the value of the field here.</span><br>        <span class="hljs-comment">//The engine can change this value based on the optional output directive</span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> fileExtensionValue = <span class="hljs-string">&quot;.txt&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FileExtension<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> fileExtensionValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//This will be the encoding of the generated text output file.</span><br>        <span class="hljs-comment">//The host can provide a default by setting the value of the field here.</span><br>        <span class="hljs-comment">//The engine can change this value based on the optional output directive</span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">private</span> Encoding fileEncodingValue = Encoding.UTF8;<br>        <span class="hljs-keyword">public</span> Encoding FileEncoding<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> fileEncodingValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//These are the errors that occur when the engine processes a template.</span><br>        <span class="hljs-comment">//The engine passes the errors to the host when it is done processing,</span><br>        <span class="hljs-comment">//and the host can decide how to display them. For example, the host </span><br>        <span class="hljs-comment">//can display the errors in the UI or write them to a file.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">private</span> CompilerErrorCollection errorsValue;<br>        <span class="hljs-keyword">public</span> CompilerErrorCollection Errors<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> errorsValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//The host can provide standard assembly references.</span><br>        <span class="hljs-comment">//The engine will use these references when compiling and</span><br>        <span class="hljs-comment">//executing the generated transformation class.</span><br>        <span class="hljs-comment">//--------------------------------------------------------------</span><br>        <span class="hljs-keyword">public</span> IList&lt;<span class="hljs-built_in">string</span>&gt; StandardAssemblyReferences<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[]<br>                &#123;<br>                    <span class="hljs-comment">//If this host searches standard paths and the GAC,</span><br>                    <span class="hljs-comment">//we can specify the assembly name like this.</span><br>                    <span class="hljs-comment">//---------------------------------------------------------</span><br>                    <span class="hljs-comment">//&quot;System&quot;</span><br><br>                    <span class="hljs-comment">//Because this host only resolves assemblies from the </span><br>                    <span class="hljs-comment">//fully qualified path and name of the assembly,</span><br>                    <span class="hljs-comment">//this is a quick way to get the code to give us the</span><br>                    <span class="hljs-comment">//fully qualified path and name of the System assembly.</span><br>                    <span class="hljs-comment">//---------------------------------------------------------</span><br>                    <span class="hljs-keyword">typeof</span>(System.Uri).Assembly.Location,<br>                    <span class="hljs-keyword">typeof</span>(T4ParameterSample.Parameter).Assembly.Location<br>                &#125;;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//The host can provide standard imports or using statements.</span><br>        <span class="hljs-comment">//The engine will add these statements to the generated </span><br>        <span class="hljs-comment">//transformation class.</span><br>        <span class="hljs-comment">//--------------------------------------------------------------</span><br>        <span class="hljs-keyword">public</span> IList&lt;<span class="hljs-built_in">string</span>&gt; StandardImports<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[]<br>                &#123;<br>                    <span class="hljs-string">&quot;System&quot;</span>,<br>                    <span class="hljs-string">&quot;T4ParameterSample&quot;</span><br>                &#125;;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method based on the optional include directive</span><br>        <span class="hljs-comment">//if the user has specified it in the text template.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-comment">//The included text is returned in the context parameter.</span><br>        <span class="hljs-comment">//If the host searches the registry for the location of include files,</span><br>        <span class="hljs-comment">//or if the host searches multiple locations by default, the host can</span><br>        <span class="hljs-comment">//return the final path of the include file in the location parameter.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">LoadIncludeText</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> requestFileName, <span class="hljs-keyword">out</span> <span class="hljs-built_in">string</span> content, <span class="hljs-keyword">out</span> <span class="hljs-built_in">string</span> location</span>)</span><br>        &#123;<br>            content = System.String.Empty;<br>            location = System.String.Empty;<br><br>            <span class="hljs-comment">//If the argument is the fully qualified path of an existing file,</span><br>            <span class="hljs-comment">//then we are done.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (File.Exists(requestFileName))<br>            &#123;<br>                content = File.ReadAllText(requestFileName);<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-comment">//This can be customized to search specific paths for the file.</span><br>            <span class="hljs-comment">//This can be customized to accept paths to search as command line</span><br>            <span class="hljs-comment">//arguments.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//Called by the Engine to enquire about </span><br>        <span class="hljs-comment">//the processing options you require. </span><br>        <span class="hljs-comment">//If you recognize that option, return an </span><br>        <span class="hljs-comment">//appropriate value. </span><br>        <span class="hljs-comment">//Otherwise, pass back NULL.</span><br>        <span class="hljs-comment">//--------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">GetHostOption</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> optionName</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">object</span> returnObject;<br>            <span class="hljs-keyword">switch</span> (optionName)<br>            &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;CacheAssemblies&quot;</span>:<br>                    returnObject = <span class="hljs-literal">true</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-literal">default</span>:<br>                    returnObject = <span class="hljs-literal">null</span>;<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> returnObject;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method to resolve assembly references used in</span><br>        <span class="hljs-comment">//the generated transformation class project and for the optional </span><br>        <span class="hljs-comment">//assembly directive if the user has specified it in the text template.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ResolveAssemblyReference</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> assemblyReference</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//If the argument is the fully qualified path of an existing file,</span><br>            <span class="hljs-comment">//then we are done. (This does not do any work.)</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (File.Exists(assemblyReference))<br>            &#123;<br>                <span class="hljs-keyword">return</span> assemblyReference;<br>            &#125;<br>            <span class="hljs-comment">//Maybe the assembly is in the same folder as the text template that </span><br>            <span class="hljs-comment">//called the directive.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-built_in">string</span> candidate = Path.Combine(Path.GetDirectoryName(<span class="hljs-keyword">this</span>.TemplateFile), assemblyReference);<br>            <span class="hljs-keyword">if</span> (File.Exists(candidate))<br>            &#123;<br>                <span class="hljs-keyword">return</span> candidate;<br>            &#125;<br>            <span class="hljs-comment">//This can be customized to search specific paths for the file</span><br>            <span class="hljs-comment">//or to search the GAC.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-comment">//This can be customized to accept paths to search as command line</span><br>            <span class="hljs-comment">//arguments.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-comment">//If we cannot do better, return the original file name.</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method based on the directives the user has </span><br>        <span class="hljs-comment">//specified in the text template.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Type <span class="hljs-title">ResolveDirectiveProcessor</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> processorName</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//This host will not resolve any specific processors.</span><br>            <span class="hljs-comment">//Check the processor name, and if it is the name of a processor the </span><br>            <span class="hljs-comment">//host wants to support, return the type of the processor.</span><br>            <span class="hljs-comment">//---------------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Compare(processorName, <span class="hljs-string">&quot;XYZ&quot;</span>, StringComparison.OrdinalIgnoreCase) == <span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-comment">//return typeof();</span><br>            &#125;<br>            <span class="hljs-comment">//This can be customized to search specific paths for the file</span><br>            <span class="hljs-comment">//or to search the GAC</span><br>            <span class="hljs-comment">//If the directive processor cannot be found, throw an error.</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">&quot;Directive Processor not found&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">//A directive processor can call this method if a file name does not </span><br>        <span class="hljs-comment">//have a path.</span><br>        <span class="hljs-comment">//The host can attempt to provide path information by searching </span><br>        <span class="hljs-comment">//specific paths for the file and returning the file and path if found.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ResolvePath</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> fileName</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (fileName == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the file name cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-comment">//If the argument is the fully qualified path of an existing file,</span><br>            <span class="hljs-comment">//then we are done</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>            &#123;<br>                <span class="hljs-keyword">return</span> fileName;<br>            &#125;<br>            <span class="hljs-comment">//Maybe the file is in the same folder as the text template that </span><br>            <span class="hljs-comment">//called the directive.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-built_in">string</span> candidate = Path.Combine(Path.GetDirectoryName(<span class="hljs-keyword">this</span>.TemplateFile), fileName);<br>            <span class="hljs-keyword">if</span> (File.Exists(candidate))<br>            &#123;<br>                <span class="hljs-keyword">return</span> candidate;<br>            &#125;<br>            <span class="hljs-comment">//Look more places.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-comment">//More code can go here...</span><br>            <span class="hljs-comment">//If we cannot do better, return the original file name.</span><br>            <span class="hljs-keyword">return</span> fileName;<br>        &#125;<br>        <span class="hljs-comment">//If a call to a directive in a text template does not provide a value</span><br>        <span class="hljs-comment">//for a required parameter, the directive processor can try to get it</span><br>        <span class="hljs-comment">//from the host by calling this method.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ResolveParameterValue</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> directiveId, <span class="hljs-built_in">string</span> processorName, <span class="hljs-built_in">string</span> parameterName</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (directiveId == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the directiveId cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span> (processorName == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the processorName cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span> (parameterName == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the parameterName cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-comment">//Code to provide &quot;hard-coded&quot; parameter values goes here.</span><br>            <span class="hljs-comment">//This code depends on the directive processors this host will interact with.</span><br>            <span class="hljs-comment">//If we cannot do better, return the empty string.</span><br>            <span class="hljs-keyword">return</span> String.Empty;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method to change the extension of the </span><br>        <span class="hljs-comment">//generated text output file based on the optional output directive </span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetFileExtension</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> extension</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//The parameter extension has a &#x27;.&#x27; in front of it already.</span><br>            <span class="hljs-comment">//--------------------------------------------------------</span><br>            fileExtensionValue = extension;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method to change the encoding of the </span><br>        <span class="hljs-comment">//generated text output file based on the optional output directive </span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//----------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetOutputEncoding</span>(<span class="hljs-params">System.Text.Encoding encoding, <span class="hljs-built_in">bool</span> fromOutputDirective</span>)</span><br>        &#123;<br>            fileEncodingValue = encoding;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method when it is done processing a text</span><br>        <span class="hljs-comment">//template to pass any errors that occurred to the host.</span><br>        <span class="hljs-comment">//The host can decide how to display them.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">LogErrors</span>(<span class="hljs-params">CompilerErrorCollection errors</span>)</span><br>        &#123;<br>            errorsValue = errors;<br>        &#125;<br>        <span class="hljs-comment">//This is the application domain that is used to compile and run</span><br>        <span class="hljs-comment">//the generated transformation class to create the generated text output.</span><br>        <span class="hljs-comment">//----------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> AppDomain <span class="hljs-title">ProvideTemplatingAppDomain</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> content</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//This host will provide a new application domain each time the </span><br>            <span class="hljs-comment">//engine processes a text template.</span><br>            <span class="hljs-comment">//-------------------------------------------------------------</span><br><br>            <span class="hljs-comment">//return AppDomain.CurrentDomain;</span><br>            <span class="hljs-keyword">return</span> AppDomain.CreateDomain(<span class="hljs-string">&quot;Generation App Domain&quot;</span>);<br>            <span class="hljs-comment">//This could be changed to return the current appdomain, but new </span><br>            <span class="hljs-comment">//assemblies are loaded into this AppDomain on a regular basis.</span><br>            <span class="hljs-comment">//If the AppDomain lasts too long, it will grow indefintely, </span><br>            <span class="hljs-comment">//which might be regarded as a leak.</span><br>            <span class="hljs-comment">//This could be customized to cache the application domain for </span><br>            <span class="hljs-comment">//a certain number of text template generations (for example, 10).</span><br>            <span class="hljs-comment">//This could be customized based on the contents of the text </span><br>            <span class="hljs-comment">//template, which are provided as a parameter for that purpose.</span><br>        &#125;<br><br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> ITextTemplatingSessionHost</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> ITextTemplatingSession <span class="hljs-title">CreateSession</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> Session;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> ITextTemplatingSession Session<br>        &#123;<br>            <span class="hljs-keyword">get</span>;<br>            <span class="hljs-keyword">set</span>;<br>        &#125;<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="AllModelTemplate-1-tt"><a href="#AllModelTemplate-1-tt" class="headerlink" title="AllModelTemplate_1.tt"></a><code>AllModelTemplate_1.tt</code></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ template debug=&quot;true&quot; hostspecific=&quot;false&quot; language=&quot;C#&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ output extension=&quot;.txt&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\System.Data.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\System.Data.OracleClient.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\System.Xml.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;E:\Code\DemoCode\T4ParameterSample\bin\Debug\Oracle.ManagedDataAccess.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Oracle.ManagedDataAccess&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ include file=&quot;ModelAuto.ttinclude&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ parameter name=&quot;parameter1&quot; type=&quot;T4ParameterSample.ParameterEntity&quot; #&gt;</span><br>&lt;<span class="hljs-meta"># </span><br>ModelManager manager = <span class="hljs-keyword">new</span> ModelManager();<br>manager.CONNECTION_STRING = parameter1.ConnectionString;<br>List&lt;<span class="hljs-built_in">string</span>&gt; list=manager.GetTableList(parameter1.TableName);<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> list)<br>    &#123;<br><span class="hljs-built_in">string</span> tableName=item;<br>        DataTable table= manager.GetTableSchema(tableName);<br> <span class="hljs-meta">#&gt;</span><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Data;<br><span class="hljs-keyword">using</span> System.Data.OracleClient;<br><span class="hljs-keyword">namespace</span> &lt;#= parameter1.NameSpace <span class="hljs-meta">#&gt;</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据表实体类：<span class="hljs-doctag">&lt;#= tableName #&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> By: <span class="hljs-doctag">&lt;#= parameter1.Auth #&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">Serializable()</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> &lt;#= <span class="hljs-title">tableName</span> #&gt;<br>&#123;<br>&lt;<span class="hljs-meta">#</span><br><span class="hljs-keyword">foreach</span>(DataRow row <span class="hljs-keyword">in</span> table.Rows)<br>&#123;<br><span class="hljs-meta">#&gt;</span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;#=row[&quot;备注&quot;]#&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span>     </span><br>   <span class="hljs-keyword">public</span> &lt;<span class="hljs-meta">#= manager.TransFromSqlType(row[&quot;数据类型&quot;].ToString())#&gt; &lt;#=row[&quot;字段名&quot;]#&gt;&#123; get; set; &#125;</span><br>&lt;<span class="hljs-meta">#&#125;</span><br><span class="hljs-meta">#&gt;</span><br>&#125;<br>&#125;<br><br>&lt;<span class="hljs-meta">#</span><br>    &#125;  <br> <span class="hljs-meta">#&gt; </span><br>   <br><br><br>&lt;<span class="hljs-meta">#+</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ModelManager</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库连接字符串</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CONNECTION_STRING = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XE;&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 用户信息表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PERSONINFO_TABLE_NAME = <span class="hljs-string">&quot;XLZF_USERS&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据表名查询表结构信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> SELECT_SCHEMA_BY_TABLE_NAME = <span class="hljs-string">@&quot;SELECT A.column_name    字段名,                                                                                     A.data_type      数据类型,</span><br><span class="hljs-string">                                                                    A.data_length    长度,</span><br><span class="hljs-string">                                                                    A.data_precision 整数位,</span><br><span class="hljs-string">                                                                    A.Data_Scale     小数位,</span><br><span class="hljs-string">                                                                    A.nullable       允许空值,</span><br><span class="hljs-string">                                                                    A.Data_default   缺省值,</span><br><span class="hljs-string">                                                                    B.comments       备注,</span><br><span class="hljs-string">                                                                    A.TABLE_NAME     表名</span><br><span class="hljs-string">                                                                    FROM user_tab_columns A,user_col_comments B  </span><br><span class="hljs-string">                                                                    WHERE a.COLUMN_NAME = b.column_name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = B.Table_Name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = &#x27;&#123;0&#125;&#x27;&quot;</span>;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获得数据连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-keyword">public</span> Oracle.ManagedDataAccess.Client.<span class="hljs-function">OracleConnection <span class="hljs-title">GetConnection</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(CONNECTION_STRING);<br>        &#125;<br><br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到当前用户的所有表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetTableList</span>()</span><br>        &#123;<br>            OracleHelper helper = <span class="hljs-keyword">new</span> OracleHelper();<br>            <br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-string">&quot;SELECT * FROM USER_TABLES&quot;</span>;<br><br>            DataTable dt = helper.ExecuteDataTable(sql);<br><br>            List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br><br>            <span class="hljs-keyword">if</span> (dt!=<span class="hljs-literal">null</span>&amp;&amp;dt.Rows.Count&gt;<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dt.Rows.Count; i++)<br>                &#123;<br>                    list.Add(dt.Rows[i][<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>                &#125; <br>            &#125;<br><br>            <span class="hljs-keyword">return</span> list;<br>         &#125;<br><br> <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到当前用户的所有表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetTableList</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> tableName</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-string">&quot;SELECT * FROM USER_TABLES WHERE TABLE_NAME = &#x27;&quot;</span>+tableName+<span class="hljs-string">&quot;&#x27; &quot;</span>;<br><br>OracleHelper helper = <span class="hljs-keyword">new</span> OracleHelper();<br><br>helper.oracleConnectionStr = CONNECTION_STRING;<br><br>            DataTable dt = helper.ExecuteDataTable(sql);<br><br>            List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br><br>            <span class="hljs-keyword">if</span> (dt!=<span class="hljs-literal">null</span>&amp;&amp;dt.Rows.Count&gt;<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dt.Rows.Count; i++)<br>                &#123;<br>                    list.Add(dt.Rows[i][<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>                &#125; <br>            &#125;<br><br>            <span class="hljs-keyword">return</span> list;<br>         &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 释放连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;con&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ReleaseConnection</span>(<span class="hljs-params">Oracle.ManagedDataAccess.Client.OracleConnection con</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (con != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (con.State == ConnectionState.Open)<br>                &#123;<br>                    con.Close();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取表内字段及字段其他信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;tableName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> DataTable <span class="hljs-title">GetTableSchema</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> tableName</span>)</span><br>        &#123;<br>            DataTable dt;<br><br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection con = GetConnection())<br>            &#123;<br>                con.Open();<br><br>                Oracle.ManagedDataAccess.Client.OracleCommand cmd = con.CreateCommand();<br><br>                cmd.CommandText = <span class="hljs-built_in">string</span>.Format(SELECT_SCHEMA_BY_TABLE_NAME,tableName);<br><br>                cmd.CommandType = CommandType.Text;<br><br>                Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(cmd);<br><br>                DataSet ds = <span class="hljs-keyword">new</span> DataSet(); <br><br>                adapter.Fill(ds);<br><br>                dt = ds.Tables[<span class="hljs-number">0</span>];<br>            &#125;<br>            <span class="hljs-keyword">return</span> dt;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> SQL</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;type&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">TransFromSqlType</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> type</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(type))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;number&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;int&quot;</span>;<br>            &#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;date&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;DateTime&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;nvarchar2&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>        &#125; <br><br>    &#125;<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta">#+ </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OracleHelper</span><br>    &#123;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> oracleConnectionStr = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XLZF;&quot;</span>;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> DataTable <span class="hljs-title">ExecuteDataTable</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123; <br>                conn.Open();<br><br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br><br>                    command.Parameters.AddRange(paramList);<br><br>                    DataTable dt = <span class="hljs-keyword">new</span> DataTable();<br><br>                    Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(command);<br><br>                    adapter.Fill(dt);<br><br>                    <span class="hljs-keyword">return</span> dt;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">ExecuteNonQuery</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteNonQuery();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">ExecuteScalar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteScalar();<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br> <span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205223647.png" alt="image-20211205223643141"></p><p>结合传参功能的实现，在结合多种数据库，可以实现多种批量生产代码的功能，后续补充个人工具中的应用。</p>]]></content>
    
    
    <summary type="html">记录T4模板的应用</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
    <category term="T4" scheme="http://example.com/tags/T4/"/>
    
  </entry>
  
  <entry>
    <title>Git 常用命令及坑记录</title>
    <link href="http://example.com/2021/11/19/Git_Cmd/"/>
    <id>http://example.com/2021/11/19/Git_Cmd/</id>
    <published>2021-11-19T06:25:09.000Z</published>
    <updated>2022-05-19T07:34:29.072Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="配置用户名及邮箱"><a href="#配置用户名及邮箱" class="headerlink" title="配置用户名及邮箱"></a>配置用户名及邮箱</h2><p><code>git config</code>可以配置git的参数，可以使用<code>git config --list</code>查看已经配置的git参数。</p><p>其中有三个级别的保存位置，<code>--system</code>、<code>--global</code>、<code>--local</code>，分别</p><ul><li>表示所有用户（本系统）</li><li>当前用户（全局）</li><li>本地配置（当前目录）</li></ul><p>默认使用<code>--local</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;houshuai&quot; <br>git config --global user.email &quot;houshuai@bjgoodwill.com&quot;<br></code></pre></td></tr></table></figure><h2 id="获取远程仓库"><a href="#获取远程仓库" class="headerlink" title="获取远程仓库"></a>获取远程仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@git.com<br></code></pre></td></tr></table></figure><h2 id="生成SSH秘钥"><a href="#生成SSH秘钥" class="headerlink" title="生成SSH秘钥"></a>生成SSH秘钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;hou3125378@live.com&quot;<br></code></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="没有生成SSHkey或者找不到对应的-SSHkey"><a href="#没有生成SSHkey或者找不到对应的-SSHkey" class="headerlink" title="没有生成SSHkey或者找不到对应的 SSHkey"></a>没有生成<code>SSHkey</code>或者找不到对应的 <code>SSHkey</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">Permission denied(publickey).<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access right <br>and the repository exists<br></code></pre></td></tr></table></figure><p>解决：</p><ol><li><p>生成<code>SSHKey</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;XXX@qq.com&quot;<br></code></pre></td></tr></table></figure></li><li><p>debug</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -v git@github.com<br></code></pre></td></tr></table></figure></li><li><p>agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-agent -s<br></code></pre></td></tr></table></figure></li><li><p>将对应的<code>SSHKey</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure></li></ol><p>​        到这里如果遇到这个问题</p><p>​        <code>Could not open a connection to your authentication agent</code></p><ol start="5"><li><p>啥意思我也不知道</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">eval `ssh-agent -s`<br></code></pre></td></tr></table></figure></li><li><p>重新指向</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure></li></ol><p>​    自己遇到这个问题不是没生成<code>sshkey</code>,而是多个<code>sshkey</code> 没有对应好</p><p>​    参考地址:<a href="https://www.shangmayuan.com/a/39405a3fee8f4ce0aca1bc39.html">Git报错解决：git@gitee.com: Permission denied (publickey). - 尚码园 (shangmayuan.com)</a></p>]]></content>
    
    
    <summary type="html">本文章用来记录Git常用命令和坑</summary>
    
    
    
    <category term="StorageBox" scheme="http://example.com/categories/StorageBox/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="http://example.com/2021/11/19/Hexo/"/>
    <id>http://example.com/2021/11/19/Hexo/</id>
    <published>2021-11-19T06:25:09.000Z</published>
    <updated>2022-05-19T07:34:29.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><p><a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid 用户手册 (fluid-dev.com)</a></p><h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装<code>cnpm</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h2 id="安装-hexo-cli"><a href="#安装-hexo-cli" class="headerlink" title="安装 hexo-cli"></a>安装 <code>hexo-cli</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cnpm install -g hexo-cli<br><br>cnpm install hexo --save<br></code></pre></td></tr></table></figure><h2 id="查看hexo版本"><a href="#查看hexo版本" class="headerlink" title="查看hexo版本"></a>查看<code>hexo</code>版本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo -v<br></code></pre></td></tr></table></figure><h2 id="hexo初始化"><a href="#hexo初始化" class="headerlink" title="hexo初始化"></a><code>hexo</code>初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init<br></code></pre></td></tr></table></figure><h2 id="安装套件"><a href="#安装套件" class="headerlink" title="安装套件"></a>安装套件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cnpm install<br></code></pre></td></tr></table></figure><h2 id="hexo安装git组件"><a href="#hexo安装git组件" class="headerlink" title="hexo安装git组件"></a><code>hexo</code>安装<code>git</code>组件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><ol><li><pre><code class="shell">Please make sure you have the correct access rightsand the repository exists.FATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (E:\Hexo_New\node_modules\_hexo-util@2.6.0@hexo-util\lib\spawn.js:51:21)      at ChildProcess.emit (node:events:390:28)      at ChildProcess.cp.emit (E:\Hexo_New\node_modules\_cross-spawn@7.0.3@cross-spawn\lib\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (node:internal/child_process:290:12) &#123;    code: 128  &#125;&#125; Something&#39;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</code></pre><p>遇到上述问题，两个方面</p><ol><li>没有生产rsa秘钥，这种好整，生成即可</li><li>生产了，而且是多个秘钥，命令找了找没有找到要找得，需要先执行debug <code>ssh -v git@github.com</code>,这里如果是gitee或者别的平台，可以改成<code>ssh -v git@gitee.com</code>,我这里是把本地 ~/.ssh/下生成的秘钥改成debug里要看到的秘钥即可，当然也可以告诉git，要走ssh下的哪个rsa key.</li></ol></li></ol>]]></content>
    
    
    <summary type="html">本文章用来记录在github page部署Hexo的经过</summary>
    
    
    
    <category term="StorageBox" scheme="http://example.com/categories/StorageBox/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>C# ListHelper</title>
    <link href="http://example.com/2021/11/06/ListHelper/"/>
    <id>http://example.com/2021/11/06/ListHelper/</id>
    <published>2021-11-06T12:10:57.000Z</published>
    <updated>2022-05-19T07:34:29.074Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DataTable-amp-泛型集合之间的转换帮助类"><a href="#DataTable-amp-泛型集合之间的转换帮助类" class="headerlink" title="DataTable&amp;泛型集合之间的转换帮助类"></a>DataTable&amp;泛型集合之间的转换帮助类</h1><h2 id="DataRow转实体"><a href="#DataRow转实体" class="headerlink" title="DataRow转实体"></a>DataRow转实体</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataRow转实体</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据型类<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dr&quot;&gt;</span>DataRow<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>模式<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">DataRowToModel</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">DataRow dr</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    <span class="hljs-comment">//T t = (T)Activator.CreateInstance(typeof(T));</span><br>    T t = <span class="hljs-keyword">new</span> T();<br>    <span class="hljs-keyword">if</span> (dr == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">default</span>(T);<br>    &#125;<br>    <span class="hljs-comment">// 获得此模型的公共属性</span><br>    PropertyInfo[] propertys = t.GetType().GetProperties();<br>    DataColumnCollection Columns = dr.Table.Columns;<br>    <span class="hljs-keyword">foreach</span> (PropertyInfo p <span class="hljs-keyword">in</span> propertys)<br>    &#123;<br>        <span class="hljs-built_in">string</span> columnName = ((DBColumn)p.GetCustomAttributes(<span class="hljs-keyword">typeof</span>(DBColumn), <span class="hljs-literal">false</span>)[<span class="hljs-number">0</span>]).ColName;<br>        <span class="hljs-comment">// string columnName = p.Name;如果不用属性，数据库字段对应model属性,就用这个</span><br>        <span class="hljs-keyword">if</span> (Columns.Contains(columnName))<br>        &#123;<br>            <span class="hljs-comment">// 判断此属性是否有Setter或columnName值是否为空</span><br>            <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span> = dr[columnName];<br>            <span class="hljs-keyword">if</span> (!p.CanWrite || <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> DBNull || <span class="hljs-keyword">value</span> == DBNull.Value)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-meta">#<span class="hljs-keyword">region</span> SetValue</span><br>                    <span class="hljs-keyword">switch</span> (p.PropertyType.ToString())<br>                    &#123;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.String&quot;</span>:<br>                            p.SetValue(t, Convert.ToString(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int32&quot;</span>:<br>                            p.SetValue(t, Convert.ToInt32(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int64&quot;</span>:<br>                            p.SetValue(t, Convert.ToInt64(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.DateTime&quot;</span>:<br>                            p.SetValue(t, Convert.ToDateTime(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Boolean&quot;</span>:<br>                            p.SetValue(t, Convert.ToBoolean(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Double&quot;</span>:<br>                            p.SetValue(t, Convert.ToDouble(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Decimal&quot;</span>:<br>                            p.SetValue(t, Convert.ToDecimal(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-literal">default</span>:<br>                            p.SetValue(t, <span class="hljs-keyword">value</span>, <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception)<br>            &#123;<br><br>                <span class="hljs-keyword">continue</span>;<br>                <span class="hljs-comment">/*使用 default 关键字，此关键字对于引用类型会返回空，对于数值类型会返回零。对于结构，</span><br><span class="hljs-comment">                         * 此关键字将返回初始化为零或空的每个结构成员，具体取决于这些结构是值类型还是引用类型*/</span><br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> t;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库字段对应属性类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 说明：数据库字段对应属性类<span class="hljs-doctag">&lt;br/&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">AttributeUsage(AttributeTargets.Property | AttributeTargets.Method, AllowMultiple = true, Inherited = false)</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DBColumn</span> : <span class="hljs-title">Attribute</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _colName;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库字段</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ColName<br>    &#123;<br>        <span class="hljs-keyword">get</span> =&gt; _colName;<br>        <span class="hljs-keyword">set</span> =&gt; _colName = <span class="hljs-keyword">value</span>;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DataTable转List"><a href="#DataTable转List" class="headerlink" title="DataTable转List"></a>DataTable转List<T></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataTable转List<span class="hljs-doctag">&lt;T&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据项类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dt&quot;&gt;</span>DataTable<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>List数据集<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-title">DataTableToList</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">DataTable dt</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    List&lt;T&gt; tList = <span class="hljs-keyword">new</span> List&lt;T&gt;();<br>    <span class="hljs-keyword">if</span> (dt != <span class="hljs-literal">null</span> &amp;&amp; dt.Rows.Count &gt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (DataRow dr <span class="hljs-keyword">in</span> dt.Rows)<br>        &#123;<br>            T t = DataRowToModel&lt;T&gt;(dr);<br>            tList.Add(t);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> tList;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DataReader转实体"><a href="#DataReader转实体" class="headerlink" title="DataReader转实体"></a>DataReader转实体</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataReader转实体</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dr&quot;&gt;</span>DataReader<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>实体<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">DataReaderToModel</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IDataReader dr</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    T t = <span class="hljs-keyword">new</span> T();<br>    <span class="hljs-keyword">if</span> (dr == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">default</span>(T);<br>    &#125;<br><br>    <span class="hljs-keyword">using</span> (dr)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (dr.Read())<br>        &#123;<br>            <span class="hljs-comment">// 获得此模型的公共属性</span><br>            PropertyInfo[] propertys = t.GetType().GetProperties();<br>            List&lt;<span class="hljs-built_in">string</span>&gt; listFieldName = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;(dr.FieldCount);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dr.FieldCount; i++)<br>            &#123;<br>                listFieldName.Add(dr.GetName(i).ToLower());<br>            &#125;<br><br>            <span class="hljs-keyword">foreach</span> (PropertyInfo p <span class="hljs-keyword">in</span> propertys)<br>            &#123;<br>                <span class="hljs-built_in">string</span> columnName = p.Name;<br>                <span class="hljs-keyword">if</span> (listFieldName.Contains(columnName.ToLower()))<br>                &#123;<br>                    <span class="hljs-comment">// 判断此属性是否有Setter或columnName值是否为空</span><br>                    <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span> = dr[columnName];<br>                    <span class="hljs-keyword">if</span> (!p.CanWrite || <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> DBNull || <span class="hljs-keyword">value</span> == DBNull.Value)<br>                    &#123;<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">try</span><br>                    &#123;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">region</span> SetValue</span><br>                            <span class="hljs-keyword">switch</span> (p.PropertyType.ToString())<br>                            &#123;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.String&quot;</span>:<br>                                    p.SetValue(t, Convert.ToString(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int32&quot;</span>:<br>                                    p.SetValue(t, Convert.ToInt32(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.DateTime&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDateTime(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Boolean&quot;</span>:<br>                                    p.SetValue(t, Convert.ToBoolean(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Double&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDouble(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Decimal&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDecimal(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-literal">default</span>:<br>                                    p.SetValue(t, <span class="hljs-keyword">value</span>, <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                            &#125;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>                    &#125;<br>                    <span class="hljs-keyword">catch</span><br>                    &#123;<br>                        <span class="hljs-comment">//throw (new Exception(ex.Message));</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> t;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DataReader转List"><a href="#DataReader转List" class="headerlink" title="DataReader转List"></a>DataReader转List<T></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataReader转List<span class="hljs-doctag">&lt;T&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dr&quot;&gt;</span>DataReader<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>List数据集<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-title">DataReaderToList</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IDataReader dr</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    List&lt;T&gt; tList = <span class="hljs-keyword">new</span> List&lt;T&gt;();<br>    <span class="hljs-keyword">if</span> (dr == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> tList;<br>    &#125;<br><br>    T t1 = <span class="hljs-keyword">new</span> T();<br>    <span class="hljs-comment">// 获得此模型的公共属性</span><br>    PropertyInfo[] propertys = t1.GetType().GetProperties();<br>    <span class="hljs-keyword">using</span> (dr)<br>    &#123;<br>        List&lt;<span class="hljs-built_in">string</span>&gt; listFieldName = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;(dr.FieldCount);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dr.FieldCount; i++)<br>        &#123;<br>            listFieldName.Add(dr.GetName(i).ToLower());<br>        &#125;<br>        <span class="hljs-keyword">while</span> (dr.Read())<br>        &#123;<br>            T t = <span class="hljs-keyword">new</span> T();<br>            <span class="hljs-keyword">foreach</span> (PropertyInfo p <span class="hljs-keyword">in</span> propertys)<br>            &#123;<br>                <span class="hljs-built_in">string</span> columnName = p.Name;<br>                <span class="hljs-keyword">if</span> (listFieldName.Contains(columnName.ToLower()))<br>                &#123;<br>                    <span class="hljs-comment">// 判断此属性是否有Setter或columnName值是否为空</span><br>                    <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span> = dr[columnName];<br>                    <span class="hljs-keyword">if</span> (!p.CanWrite || <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> DBNull || <span class="hljs-keyword">value</span> == DBNull.Value)<br>                    &#123;<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">try</span><br>                    &#123;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">region</span> SetValue</span><br>                            <span class="hljs-keyword">switch</span> (p.PropertyType.ToString())<br>                            &#123;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.String&quot;</span>:<br>                                    p.SetValue(t, Convert.ToString(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int32&quot;</span>:<br>                                    p.SetValue(t, Convert.ToInt32(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.DateTime&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDateTime(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Boolean&quot;</span>:<br>                                    p.SetValue(t, Convert.ToBoolean(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Double&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDouble(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Decimal&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDecimal(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-literal">default</span>:<br>                                    p.SetValue(t, <span class="hljs-keyword">value</span>, <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                            &#125;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>                    &#125;<br>                    <span class="hljs-keyword">catch</span><br>                    &#123;<br>                        <span class="hljs-comment">//throw (new Exception(ex.Message));</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>            tList.Add(t);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> tList;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="泛型集合转DataTable"><a href="#泛型集合转DataTable" class="headerlink" title="泛型集合转DataTable"></a>泛型集合转DataTable</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 泛型集合转DataTable</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>集合类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;entityList&quot;&gt;</span>泛型集合<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>DataTable<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">ListToDataTable</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IList&lt;T&gt; entityList</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (entityList == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    DataTable dt = CreateTable&lt;T&gt;();<br>    Type entityType = <span class="hljs-keyword">typeof</span>(T);<br>    <span class="hljs-comment">//PropertyInfo[] properties = entityType.GetProperties();</span><br>    PropertyDescriptorCollection properties = TypeDescriptor.GetProperties(entityType);<br>    <span class="hljs-keyword">foreach</span> (T item <span class="hljs-keyword">in</span> entityList)<br>    &#123;<br>        DataRow row = dt.NewRow();<br>        <span class="hljs-keyword">foreach</span> (PropertyDescriptor property <span class="hljs-keyword">in</span> properties)<br>        &#123;<br>            row[property.Name] = property.GetValue(item);<br>        &#125;<br>        dt.Rows.Add(row);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> dt;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="创建DataTable的结构"><a href="#创建DataTable的结构" class="headerlink" title="创建DataTable的结构"></a>创建DataTable的结构</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">CreateTable</span>&lt;<span class="hljs-title">T</span>&gt;()</span><br>&#123;<br>    Type entityType = <span class="hljs-keyword">typeof</span>(T);<br>    <span class="hljs-comment">//PropertyInfo[] properties = entityType.GetProperties();</span><br>    PropertyDescriptorCollection properties = TypeDescriptor.GetProperties(entityType);<br>    <span class="hljs-comment">//生成DataTable的结构</span><br>    DataTable dt = <span class="hljs-keyword">new</span> DataTable();<br>    <span class="hljs-keyword">foreach</span> (PropertyDescriptor prop <span class="hljs-keyword">in</span> properties)<br>    &#123;<br>        dt.Columns.Add(prop.Name);<br>    &#125;<br>    <span class="hljs-keyword">return</span> dt;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">DataTable &amp; 泛型集合之间的转换帮助类</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
    <category term="Helper" scheme="http://example.com/tags/Helper/"/>
    
  </entry>
  
  <entry>
    <title>C# HttpHelper</title>
    <link href="http://example.com/2021/11/06/HttpHelper/"/>
    <id>http://example.com/2021/11/06/HttpHelper/</id>
    <published>2021-11-06T08:37:42.000Z</published>
    <updated>2022-05-19T07:34:29.074Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这段时间在做外部接口，踩了点坑，记录一下</p><p>​        除了前期对外部接口和现有程序逻辑结合过程中的思路梳理。其中，有个坑，在<code>net4.6</code> 上写的demo，接口跑的溜不行，结果把程序放在产品中，嘎，废了。原因是，<code>net 4</code>框架下不支持<code>TLS1.2</code>协议，也就是说，访问<code>http</code> 接口可以，访问<code>https</code>的接口不行，需要把下面<code>reg</code> 文件整理并且双击执行，让<code>net 4</code> 框架支持 <code>TLS1.2</code>协议。</p><h2 id="执行-net4下安装TLS1-2-reg"><a href="#执行-net4下安装TLS1-2-reg" class="headerlink" title="执行 net4下安装TLS1.2.reg"></a>执行 net4下安装TLS1.2.reg</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">Windows Registry Editor Version 5.00<br><br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\v4.0.30319]<br>&quot;SchUseStrongCrypto&quot;=dword:00000001<br><br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319]<br>&quot;SchUseStrongCrypto&quot;=dword:00000001<br></code></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HttpHelper</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Post</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;url&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;postData&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">PostUrl</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> postData</span>)</span><br>    &#123;<br>        HttpWebRequest request = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span> (url.StartsWith(<span class="hljs-string">&quot;https&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>        &#123;<br>            request = WebRequest.Create(url) <span class="hljs-keyword">as</span> HttpWebRequest;<br>            ServicePointManager.ServerCertificateValidationCallback = <span class="hljs-keyword">new</span> RemoteCertificateValidationCallback(CheckValidationResult);<br>            request.ProtocolVersion = HttpVersion.Version11;<br>            <span class="hljs-comment">// 这里设置了协议类型。</span><br>            ServicePointManager.SecurityProtocol = (SecurityProtocolType)<span class="hljs-number">3072</span>;<span class="hljs-comment">// SecurityProtocolType.Tls1.2; </span><br>            request.KeepAlive = <span class="hljs-literal">false</span>;<br>            ServicePointManager.CheckCertificateRevocationList = <span class="hljs-literal">true</span>;<br>            ServicePointManager.DefaultConnectionLimit = <span class="hljs-number">100</span>;<br>            ServicePointManager.Expect100Continue = <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            request = (HttpWebRequest)WebRequest.Create(url);<br>        &#125;<br><br>        request.Method = <span class="hljs-string">&quot;POST&quot;</span>;    <span class="hljs-comment">//使用get方式发送数据</span><br>        request.ContentType = <span class="hljs-string">&quot;text/plain&quot;</span>; <span class="hljs-comment">//&quot;application/x-www-form-urlencoded&quot;;</span><br>        <span class="hljs-comment">//request.Referer = null;</span><br>        <span class="hljs-comment">//request.AllowAutoRedirect = true;</span><br>        <span class="hljs-comment">//request.UserAgent = &quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;;</span><br>        request.Accept = <span class="hljs-string">&quot;*/*&quot;</span>;<br><br>        <span class="hljs-built_in">byte</span>[] data = Encoding.UTF8.GetBytes(postData);<br>        Stream newStream = request.GetRequestStream();<br>        newStream.Write(data, <span class="hljs-number">0</span>, data.Length);<br>        newStream.Close();<br><br>        <span class="hljs-comment">//获取网页响应结果</span><br>        HttpWebResponse response = (HttpWebResponse)request.GetResponse();<br>        Stream stream = response.GetResponseStream();<br>        <span class="hljs-comment">//client.Headers.Add(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</span><br>        <span class="hljs-built_in">string</span> result = <span class="hljs-built_in">string</span>.Empty;<br>        <span class="hljs-keyword">using</span> (StreamReader sr = <span class="hljs-keyword">new</span> StreamReader(stream))<br>        &#123;<br>            result = sr.ReadToEnd();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">CheckValidationResult</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">//总是接受  </span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这段时间在做外部接口，踩了点坑，记录一下.</summary>
    
    
    
    <category term="C#" scheme="http://example.com/categories/C/"/>
    
    
    <category term="Helper" scheme="http://example.com/tags/Helper/"/>
    
  </entry>
  
</feed>
