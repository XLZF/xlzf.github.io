<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>动态调用WebService</title>
    <link href="/2022/05/20/%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8WebService/"/>
    <url>/2022/05/20/%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8WebService/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="动态调用WebService"><a href="#动态调用WebService" class="headerlink" title="动态调用WebService"></a>动态调用WebService</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">btnSubmit_Click</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">string</span>.IsNullOrEmpty(txtUrl.Text.Trim()))<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口地址不能为空！&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (cbInterFace.EditValue==<span class="hljs-literal">null</span>)<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口名称不能为空！&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(txtParameter.Text.Trim()))<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口参数不能为空！&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 动态调用 webservices地址</span><br>        <span class="hljs-built_in">object</span>[] args = <span class="hljs-keyword">new</span> <span class="hljs-built_in">object</span>[<span class="hljs-number">1</span>];<br>        args[<span class="hljs-number">0</span>] = (txtParameter.Text.Trim());<br>        <span class="hljs-built_in">object</span> result = WebServiceHelper.InvokeWebService(txtUrl.Text, cbInterFace.Text.Trim(), args);<br>        <span class="hljs-built_in">string</span> message = result.ToString();<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>            <span class="hljs-comment">//格式化XMl</span><br>            txtXml.Text = formatXml(message);<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Exception ex)<br>    &#123;<br>        MessageBox.Show(<span class="hljs-string">&quot;接口调取出错：&quot;</span> + ex.ToString());<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>库</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WebServiceHelper</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 动态调用WebService动态调用地址</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; summary&gt;</span>           </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 动态调用web服务         </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; /summary&gt;</span>          </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; param name=&quot;url&quot;&gt;</span>WSDL服务地址<span class="hljs-doctag">&lt; /param&gt;</span> </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; param name=&quot;methodname&quot;&gt;</span>方法名<span class="hljs-doctag">&lt; /param&gt;</span>           </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; param name=&quot;args&quot;&gt;</span>参数<span class="hljs-doctag">&lt; /param&gt;</span>           </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt; returns&gt;</span><span class="hljs-doctag">&lt; /returns&gt;</span>          </span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> <span class="hljs-title">InvokeWebService</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> methodname, <span class="hljs-built_in">object</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> WebServiceHelper.InvokeWebService(url, <span class="hljs-literal">null</span>, methodname, args);<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 动态调用web服务</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;url&quot;&gt;</span>WSDL服务地址<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;classname&quot;&gt;</span>服务接口类名<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;methodname&quot;&gt;</span>方法名<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;args&quot;&gt;</span>参数值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> <span class="hljs-title">InvokeWebService</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> classname, <span class="hljs-built_in">string</span> methodname, <span class="hljs-built_in">object</span>[] args</span>)</span><br>    &#123;<br><br>        <span class="hljs-built_in">string</span> @namespace = <span class="hljs-string">&quot;EnterpriseServerBase.WebService.DynamicWebCalling&quot;</span>;<br>        <span class="hljs-keyword">if</span> ((classname == <span class="hljs-literal">null</span>) || (classname == <span class="hljs-string">&quot;&quot;</span>))<br>        &#123;<br>            classname = WebServiceHelper.GetWsClassName(url);<br>        &#125;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br><br>            <span class="hljs-comment">//获取WSDL   </span><br>            WebClient wc = <span class="hljs-keyword">new</span> WebClient();<br>            Stream stream = wc.OpenRead(url + <span class="hljs-string">&quot;?WSDL&quot;</span>);<br>            ServiceDescription sd = ServiceDescription.Read(stream);<br>            <span class="hljs-comment">//注意classname一定要赋值获取 </span><br>            classname = sd.Services[<span class="hljs-number">0</span>].Name;<br><br>            ServiceDescriptionImporter sdi = <span class="hljs-keyword">new</span> ServiceDescriptionImporter();<br>            sdi.AddServiceDescription(sd, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>            CodeNamespace cn = <span class="hljs-keyword">new</span> CodeNamespace(@namespace);<br><br>            <span class="hljs-comment">//生成客户端代理类代码          </span><br>            CodeCompileUnit ccu = <span class="hljs-keyword">new</span> CodeCompileUnit();<br>            ccu.Namespaces.Add(cn);<br>            sdi.Import(cn, ccu);<br>            CSharpCodeProvider icc = <span class="hljs-keyword">new</span> CSharpCodeProvider();<br><br><br>            <span class="hljs-comment">//设定编译参数                 </span><br>            CompilerParameters cplist = <span class="hljs-keyword">new</span> CompilerParameters();<br>            cplist.GenerateExecutable = <span class="hljs-literal">false</span>;<br>            cplist.GenerateInMemory = <span class="hljs-literal">true</span>;<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.dll&quot;</span>);<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.XML.dll&quot;</span>);<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.Web.Services.dll&quot;</span>);<br>            cplist.ReferencedAssemblies.Add(<span class="hljs-string">&quot;System.Data.dll&quot;</span>);<br>            <span class="hljs-comment">//编译代理类                 </span><br>            CompilerResults cr = icc.CompileAssemblyFromDom(cplist, ccu);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">true</span> == cr.Errors.HasErrors)<br>            &#123;<br>                System.Text.StringBuilder sb = <span class="hljs-keyword">new</span> System.Text.StringBuilder();<br>                <span class="hljs-keyword">foreach</span> (System.CodeDom.Compiler.CompilerError ce <span class="hljs-keyword">in</span> cr.Errors)<br>                &#123;<br>                    sb.Append(ce.ToString());<br>                    sb.Append(System.Environment.NewLine);<br>                &#125;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(sb.ToString());<br>            &#125;<br>            <span class="hljs-comment">//生成代理实例，并调用方法                 </span><br>            System.Reflection.Assembly assembly = cr.CompiledAssembly;<br>            Type t = assembly.GetType(@namespace + <span class="hljs-string">&quot;.&quot;</span> + classname, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>);<br>            <span class="hljs-built_in">object</span> obj = Activator.CreateInstance(t);<br>            System.Reflection.MethodInfo mi = t.GetMethod(methodname);<br>            <span class="hljs-keyword">return</span> mi.Invoke(obj, args);<br><br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(ex.InnerException.Message, <span class="hljs-keyword">new</span> Exception(ex.InnerException.StackTrace));<br>            <span class="hljs-comment">// return &quot;Error:WebService调用错误！&quot; + ex.Message;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetWsClassName</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> wsUrl</span>)</span><br>    &#123;<br>        <span class="hljs-built_in">string</span>[] parts = wsUrl.Split(<span class="hljs-string">&#x27;/&#x27;</span>);<br>        <span class="hljs-built_in">string</span>[] pps = parts[parts.Length - <span class="hljs-number">1</span>].Split(<span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-keyword">return</span> pps[<span class="hljs-number">0</span>];<br>    &#125;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Wireshark-三次握手四次挥手</title>
    <link href="/2022/05/09/wireshark-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/"/>
    <url>/2022/05/09/wireshark-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091634792.jpeg"></p><h3 id="Wireshark-安装"><a href="#Wireshark-安装" class="headerlink" title="Wireshark 安装"></a>Wireshark 安装</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091637432.png" alt="image-20220509162910659"></p><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091637794.png" alt="image-20220509162745845"></p><h3 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205091637925.png" alt="image-20220509162750770"></p>]]></content>
    
    
    
    <tags>
      
      <tag>抓包</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试题</title>
    <link href="/2022/05/07/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/2022/05/07/%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一题："><a href="#第一题：" class="headerlink" title="第一题："></a>第一题：</h2><p>输入一个数字n，求第一个大于该数字的回文数字</p><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>808</td><td>818</td></tr><tr><td>2133</td><td>2222</td></tr></tbody></table><h2 id="第二题："><a href="#第二题：" class="headerlink" title="第二题："></a>第二题：</h2><p>输入两个人的苹果个数的和与差，确定他们的苹果个数。 输入：苹果的数量和，苹果的数量差，输出： 两人各自苹果的个数。（请用计算机方法，而不是数学公式计算）</p><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>10，2</td><td>6，4</td></tr><tr><td>20，6</td><td>13，7</td></tr><tr><td>30，9</td><td>无</td></tr></tbody></table><h2 id="第三题："><a href="#第三题：" class="headerlink" title="第三题："></a>第三题：</h2><p>设有 n 个正整数<code>a1，a2，a3，a4……an</code> ，将它们联接成一排，相邻数字首尾相接，组成一个最大的整数。</p><p>输入格式</p><p>第一行有一个整数，表示数字个数 n。</p><p>第二行有 n个整数，表示给出的 n个整数值。</p><p>输出格式</p><p>一个正整数，表示最大的整数</p><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>3  13 312 343</td><td>34331213</td></tr><tr><td>4  7 13 4 246</td><td>7424613</td></tr></tbody></table><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">HuiwenNumber</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 控制台主方法</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;args&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;获取回数：1；获取和差值：2；获取正整数：3&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> result = Console.ReadLine();<br><br>            <span class="hljs-keyword">switch</span> (result)<br>            &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;1&quot;</span>:<br>                    Gethuishu();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;2&quot;</span>:<br>                    GetHeCha();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;3&quot;</span>:<br>                    GetInt();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-literal">default</span>:<br>                    Console.WriteLine(<span class="hljs-string">&quot;请输入提示的值！&quot;</span>);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取回数</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Gethuishu</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;请输入初始数字：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> num = Console.ReadLine();<br><br>            GetHuiShu.DiGui(num);<br><br>            Console.ReadLine();<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取和差数</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GetHeCha</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;请输入和：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> heNum = Console.ReadLine();<br><br>            Console.WriteLine(<span class="hljs-string">&quot;请输入差：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> chaNum = Console.ReadLine();<br><br>            <span class="hljs-built_in">int</span> heNum_ = Convert.ToInt32(heNum);<br><br>            <span class="hljs-built_in">int</span> chaNum_ = Convert.ToInt32(chaNum);<br><br>            <span class="hljs-built_in">int</span> MaxNum = (heNum_ + chaNum_) / <span class="hljs-number">2</span>;<br><br>            <span class="hljs-built_in">int</span> MinNum = (heNum_ - chaNum_) / <span class="hljs-number">2</span>;<br><br>            Console.WriteLine(<span class="hljs-string">&quot;A有苹果&quot;</span> + MaxNum + <span class="hljs-string">&quot;个,B有苹果&quot;</span> + MinNum + <span class="hljs-string">&quot;个&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取正整数,通过输入的整数，相连接组成最大的整数</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GetInt</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;请输入整数个数：&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> numlength = Console.ReadLine();<br><br>            List&lt;<span class="hljs-built_in">int</span>&gt; listYuan = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">int</span>&gt;();<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; Convert.ToInt32(numlength); i++)<br>            &#123;<br>                Console.WriteLine(<span class="hljs-string">&quot;请输入第&quot;</span> + i + <span class="hljs-string">&quot;个数字:&quot;</span>);<br><br>                <span class="hljs-built_in">string</span> numarr = Console.ReadLine();<br><br>                listYuan.Add(Convert.ToInt32(numarr));<br>            &#125;<br><br>            List&lt;IntList&gt; listEntity = <span class="hljs-keyword">new</span> List&lt;IntList&gt;();<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; listYuan.Count; i++)<br>            &#123;<br>                listEntity.Add(<span class="hljs-keyword">new</span> IntList &#123; <br>                    IntIndex = i, <br>                    IntYuan = listYuan[i], <br>                    IntSub = Convert.ToInt32(listYuan[i].ToString().Substring(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)) <br>                &#125;);<br>            &#125;<br><br>            maopao(listEntity);<br><br>            <span class="hljs-built_in">string</span> ZDZZS = <span class="hljs-string">&quot;&quot;</span>;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = listEntity.Count - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--)<br>            &#123;<br>                ZDZZS += listEntity[i].IntYuan;<br>            &#125;<br><br>            Console.WriteLine(<span class="hljs-string">&quot;最大正整数&quot;</span> + ZDZZS);<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 冒泡排序</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;intLists&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;IntList&gt; <span class="hljs-title">maopao</span>(<span class="hljs-params">List&lt;IntList&gt; intLists</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; intLists.Count - <span class="hljs-number">1</span>; i++)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; intLists.Count - <span class="hljs-number">1</span> - i; j++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> (intLists[j].IntSub &gt; intLists[j + <span class="hljs-number">1</span>].IntSub)<br>                    &#123;<br>                        IntList temp = intLists[j];<br>                        intLists[j] = intLists[j + <span class="hljs-number">1</span>];<br>                        intLists[j + <span class="hljs-number">1</span>] = temp;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> intLists;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">GetHuiShu</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 递归</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;number&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DiGui</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> number</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (IsHuiWenNum(number))<br>            &#123;<br>                Console.WriteLine(number + <span class="hljs-string">&quot;是回文数字！&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-built_in">int</span> newn = Convert.ToInt32(number);<br><br>                newn += <span class="hljs-number">1</span>;<br><br>                DiGui(newn.ToString());<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 判断是否为回文数字</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;Num&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsHuiWenNum</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> Num</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//先判断数字长度</span><br>            <span class="hljs-built_in">int</span> mo = Num.Length % <span class="hljs-number">2</span>;<br>            <span class="hljs-built_in">string</span> hou;<br>            <span class="hljs-built_in">string</span> qian;<br>            <span class="hljs-comment">//长度是奇数</span><br>            <span class="hljs-keyword">if</span> (mo &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-built_in">int</span> chang = (Num.Length - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br><br>                qian = Num.Substring(<span class="hljs-number">0</span>, chang);<br><br>                hou = Num.Substring((Num.Length - chang - <span class="hljs-number">1</span>), chang);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                qian = Num.Substring(<span class="hljs-number">0</span>, Num.Length / <span class="hljs-number">2</span>);<br><br>                hou = Num.Substring(Num.Length / <span class="hljs-number">2</span>, Num.Length / <span class="hljs-number">2</span>);<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (qian == ReverseStr(hou))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 字符串反转</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;original&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReverseStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> original</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">char</span>[] arr = original.ToCharArray();<br>            Array.Reverse(arr);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(arr);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IntList</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> IntYuan &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> IntIndex &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> IntSub &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="运行截图"><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h3><p>第一题</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205072210674.png" alt="image-20220507220813301"></p><p>第二题</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205072210233.png" alt="image-20220507220853011"></p><p>第三题</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205072211758.png" alt="image-20220507221036084"></p>]]></content>
    
    
    <categories>
      
      <category>面试题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSharp-关键字</title>
    <link href="/2022/05/06/CSharp-%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <url>/2022/05/06/CSharp-%E5%85%B3%E9%94%AE%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-关键字"><a href="#C-关键字" class="headerlink" title="C# 关键字"></a>C# 关键字</h1><h2 id="Abstract（抽象-）"><a href="#Abstract（抽象-）" class="headerlink" title="Abstract（抽象 ）"></a>Abstract（抽象 ）</h2><h2 id="Virtual（虚方法）"><a href="#Virtual（虚方法）" class="headerlink" title="Virtual（虚方法）"></a>Virtual（虚方法）</h2><h2 id="Abstract-和-Virtual-区别"><a href="#Abstract-和-Virtual-区别" class="headerlink" title="Abstract 和 Virtual 区别"></a>Abstract 和 Virtual 区别</h2><p>在C#中virtual和abstract两者是都为了让子类中心定义，来覆盖父类的定义。</p><ol><li><p>virtual（虚方法）或者（abstract）抽象方法是不能私有的，二者中private成员是不能被子类访问的。</p></li><li><p>virtual可以被子类重写，abstract必须被子类重写。</p></li><li><p>如果重写了virtual，子类方法中必须用override来实现方法的重写</p></li><li><p>如果类成员被abstract修饰，那么该类必须也添加abstract。抽象类才有抽象方法</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Base</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>设计模式</title>
    <link href="/2022/05/05/Csharp-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <url>/2022/05/05/Csharp-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="1-设计模式-代理模式"><a href="#1-设计模式-代理模式" class="headerlink" title="1. 设计模式-代理模式"></a>1. 设计模式-代理模式</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>代理模式（<code>Proxy Pattern</code>）。属于结构型模式。为其它对象提供一种代理以控制对该对象的访问。</p><p>代理的概念很简单，就是想调用A类方法时，不直接调用，而是通过调用代理B类的方法，由B类方法去调用A类的方法。</p><p>模式中的角色</p><ol><li><code>Subject</code>（抽象对象）：它声明了真实对象和代理对象的共同接口，这样一来在任何使用真实对象的地方都可以使用代理对象，客户端通常需要针对抽象对象角色进行编程。</li><li><code>Proxy</code>（代理对象）：代理对象与真实对象实现相同的接口，所以它能够在任何时刻都能够代理真实对象。代理对象内部包含有对真实对象的引用，所以她可以操作真实对象，同时也可以附加其他的操作，相当于对真实对象进行封装。</li><li><code>RealSubject</code>（真实对象）：它定义了所代表的真实对象，在真实对象角色中实现了真实的业务操作，客户端可以通过代理对象间接调用真实对象中定义的操作。</li></ol><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><p>一个害羞男孩追求一个叫如花的女孩，但是自己不敢送礼物，就找了一个朋友代理他给如花送礼物</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 送礼物的人 （抽象主题角色）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">GiveGiftPerson</span><br>&#123;<br>    <span class="hljs-comment">//送礼物功能</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GiveGift</span>()</span>;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 害羞男孩  （真实主题角色）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ShyBoy</span> : <span class="hljs-title">GiveGiftPerson</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GiveGift</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;害羞男孩送礼物给如花~~&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 害羞男孩的朋友（代理主题角色）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Friend</span> : <span class="hljs-title">GiveGiftPerson</span><br>&#123;<br>    <span class="hljs-comment">//引用真实主题实例</span><br>    ShyBoy shyboy = <span class="hljs-keyword">new</span> ShyBoy();<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GiveGift</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//朋友一顿分析后，觉得如花是个好人</span><br>        <span class="hljs-built_in">bool</span> IsRuhuaGood = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (IsRuhuaGood)<br>        &#123;<br>            <span class="hljs-comment">//调用真实主题的方法</span><br>            shyboy.GiveGift();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//因为不能直接访问到真实对象所以我们不能直接new ShyBoy()去送礼物。</span><br><br>        <span class="hljs-comment">//代码中使用的是代理对象</span><br>        Friend friend = <span class="hljs-keyword">new</span> Friend();<br>        friend.GiveGift();<br>        Console.ReadKey();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol><li>代理模式能够将调用用于真正被调用的对象隔离，在一定程度上降低了系统的耦合度。</li><li>客户端可以针对抽象主题角色进行编程，增加和更换代理类无须修改源代码，符合开闭原则，系统具有较好的灵活性和可扩展性。</li></ol><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ol><li>由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢，例如保护代理。</li><li>实现代理模式需要额外的工作，而且有些代理模式的实现过程较为复杂，例如远程代理。</li></ol><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ol><li>当客户端对象需要访问远程主机中的对象时可以使用远程代理</li><li>当需要用一个消耗资源较少的对象来代表一个消耗资源较多的对象，从而降低系统开销、缩短运行时间时可以使用虚拟代理，例如一个对象需要很长时间才能完成加载时。</li><li>当需要为某一个被频繁访问的操作结果提供一个临时存储空间，以供多个客户端共享访问这些结果时可以使用缓冲代理。通过使用缓冲代理，系统无须在客户端每一次访问时都重新执行操作，只需直接从临时缓冲区获取操作结果即可。</li><li>当需要控制对一个对象的访问，为不同用户提供不同级别的访问权限时可以使用保护代理。</li><li>当需要为一个对象的访问（引用）提供一些额外的操作时可以使用智能引用代理。</li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li>远程代理(Remote Proxy)：为一个位于不同的地址空间的对象提供一个本地的代理对象，这个不同的地址空间可以是在同一台主机中，也可是在另一台主机中，远程代理又称为大使(Ambassador)。</li><li>虚拟代理(Virtual Proxy)：如果需要创建一个资源消耗较大的对象，先创建一个消耗相对较小的对象来表示，真实对象只在需要时才会被真正创建。</li><li>保护代理(Protect Proxy)：控制对一个对象的访问，可以给不同的用户提供不同级别的使用权限。</li><li>缓冲代理(Cache Proxy)：为某一个目标操作的结果提供临时的存储空间，以便多个客户端可以共享这些结果。</li><li>智能引用代理(Smart Reference Proxy)：当一个对象被引用时，提供一些额外的操作，例如将对象被调用的次数记录下来等。</li></ol><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://zhuanlan.zhihu.com/p/346511886">C#设计模式笔记之代理模式 (Proxy Pattern) - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/yuyangbk/p/13958411.html">C#设计模式——代理模式 - 心中的天空之城 - 博客园 (cnblogs.com)</a></p><h2 id="2-设计模式-建造者模式"><a href="#2-设计模式-建造者模式" class="headerlink" title="2. 设计模式-建造者模式"></a>2. 设计模式-建造者模式</h2><h3 id="一句话"><a href="#一句话" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>将一个复杂对象的构建与他的表示分离出来，使得同样的构建过程构建不同的对象。</p></blockquote><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>拿组件电脑方案来举例</p><p>现在市面上组装机的各有不同，有不同的氪金方案。但是方案归方案，无外乎就是</p><h4 id="部件"><a href="#部件" class="headerlink" title="部件"></a>部件</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 电脑部件</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Product</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> CPU</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CPUNAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 风扇</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FANNAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 内存</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> MEMORY &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 硬盘</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> HARDDISK &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>那现在抽象这些个方法，意思就是如果要安装一部电脑，需要操作这些个步骤。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 构造者 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Builder</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装CPU</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_CPU</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装风扇</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_FAN</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装内存条</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_MEMORY</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 安装硬盘</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_DARDDISK</span>()</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 返回安装的电脑</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Product <span class="hljs-title">GetComputer</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面这个只是构建电脑的步骤，但是还具体不到实操，接着整</p><h4 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h4><p>现在准备两种构建电脑的方案</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 方案1：产品A</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ProductA</span> : <span class="hljs-title">Builder</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Product _computer = <span class="hljs-keyword">new</span> Product();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_CPU</span>()</span><br>    &#123;<br>        _computer.CPUNAME = <span class="hljs-string">&quot;I5&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_DARDDISK</span>()</span><br>    &#123;<br>        _computer.HARDDISK = <span class="hljs-string">&quot;金士顿&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_FAN</span>()</span><br>    &#123;<br>        _computer.FANNAME = <span class="hljs-string">&quot;九州风神&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_MEMORY</span>()</span><br>    &#123;<br>        _computer.MEMORY = <span class="hljs-string">&quot;海盗船&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> Product <span class="hljs-title">GetComputer</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> _computer;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 方案2产品B</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ProductB</span> : <span class="hljs-title">Builder</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Product _computer = <span class="hljs-keyword">new</span> Product();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_CPU</span>()</span><br>    &#123;<br>        _computer.CPUNAME = <span class="hljs-string">&quot;I7&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_DARDDISK</span>()</span><br>    &#123;<br>        _computer.HARDDISK = <span class="hljs-string">&quot;闪迪&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_FAN</span>()</span><br>    &#123;<br>        _computer.FANNAME = <span class="hljs-string">&quot;九州风神&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BUILD_MEMORY</span>()</span><br>    &#123;<br>        _computer.MEMORY = <span class="hljs-string">&quot;海盗船&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> Product <span class="hljs-title">GetComputer</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> _computer;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ToDo"><a href="#ToDo" class="headerlink" title="ToDo"></a>ToDo</h3><p>现在已知</p><ol><li>构建电脑的部件：CPU、内存、风扇、硬盘</li><li>构建电脑的步骤：CPU、内存、风扇、硬盘、出厂</li><li>构建电脑的方案：各个部件具体的品牌</li></ol><p>现在需要确定谁来干，那就老板来干吧，小本买卖，当然，如果人多，可以多整几个</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 老板来构建电脑</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Bosss</span><br>&#123;<br>    <span class="hljs-comment">//构建</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Construct</span>(<span class="hljs-params">Builder builder</span>)</span><br>    &#123;<br>        <span class="hljs-comment">// 安装CPU</span><br>        builder.BUILD_CPU();<br><br>        <span class="hljs-comment">//安装硬盘</span><br>        builder.BUILD_DARDDISK();<br><br>        <span class="hljs-comment">//安装风扇</span><br>        builder.BUILD_FAN();<br><br>        <span class="hljs-comment">//安装内存</span><br>        builder.BUILD_MEMORY();<br><br>        <span class="hljs-comment">//完事-出厂</span><br>        builder.GetComputer();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后，演示一下整体流程</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//小明进店，发现老板不在店，叫来老板(实例化)</span><br>        Bosss bosss = <span class="hljs-keyword">new</span> Bosss();<br><br>        <span class="hljs-comment">//老板介绍有产品A 和 产品B，分别对应不同的配置。问小明要哪个？</span><br><br>        <span class="hljs-comment">//小明说小孩子才做选择题，成年人选择都要，然后老板然后去组装（生产）</span><br>        bosss.Construct(<span class="hljs-keyword">new</span> ProductA());<br>        bosss.Construct(<span class="hljs-keyword">new</span> ProductB());<br><br>        <span class="hljs-comment">//独立性,扩展性,需要扩展了就直接添加一个品种就行</span><br>        Console.ReadLine();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-设计模式-桥接模式"><a href="#3-设计模式-桥接模式" class="headerlink" title="3. 设计模式-桥接模式"></a>3. 设计模式-桥接模式</h2><h3 id="一句话-1"><a href="#一句话-1" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>一个类可以通过多角度来分类，每一种分类都可能变化，那么就把多角度分离出来让各个角度都能独立变化，降低各个角度间的耦合。</p></blockquote><h3 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h3><blockquote><p>画图形，图形有图形种类和颜色两个指标组成，如果现在要画三种不同的图形并且会有三种不同的颜色，按照现有要求，会每个图形+颜色为一个类的话，会产生9个类或者方法来完成，如果要加图形或者颜色的话，类或者方法会增长的很快，所以需要桥接模式。</p></blockquote><h4 id="形状抽象"><a href="#形状抽象" class="headerlink" title="形状抽象"></a>形状抽象</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-comment">//形状内部包含了另一个维度：color</span><br>    <span class="hljs-keyword">protected</span> IColor color;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetColor</span>(<span class="hljs-params">IColor color</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.color = color;<br>    &#125;<br><br>    <span class="hljs-comment">//设置形状</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="颜色接口"><a href="#颜色接口" class="headerlink" title="颜色接口"></a>颜色接口</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 颜色接口</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 蓝色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Blue</span> : <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;蓝色的<span class="hljs-subst">&#123;shape&#125;</span>&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 黄色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Yellow</span> : <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;黄色的<span class="hljs-subst">&#123;shape&#125;</span>&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 红色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Red</span> : <span class="hljs-title">IColor</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Paint</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> shape</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;红色的<span class="hljs-subst">&#123;shape&#125;</span>&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="形状"><a href="#形状" class="headerlink" title="形状"></a>形状</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 圆形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Circle</span> : <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span><br>    &#123;<br>        color.Paint(<span class="hljs-string">&quot;圆形&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 长方形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Rectangle</span> : <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span><br>    &#123;<br>        color.Paint(<span class="hljs-string">&quot;长方形&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 三角形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Triangle</span> : <span class="hljs-title">Shape</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Draw</span>()</span><br>    &#123;<br>        color.Paint(<span class="hljs-string">&quot;三角形&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="创建形状"><a href="#创建形状" class="headerlink" title="创建形状"></a>创建形状</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Shape circle = <span class="hljs-keyword">new</span> Circle();<br>    IColor blue = <span class="hljs-keyword">new</span> Blue();<br>    circle.SetColor(blue);<span class="hljs-comment">//设置颜色</span><br>    circle.Draw();<span class="hljs-comment">//画图</span><br><br>    Shape triangle = <span class="hljs-keyword">new</span> Triangle();<br>    triangle.SetColor(blue);<br>    triangle.Draw();<br><br>    Console.ReadLine();<br>&#125;<br><br><span class="hljs-comment">//输出：</span><br><span class="hljs-comment">//蓝色圆形</span><br><span class="hljs-comment">//蓝色三角形</span><br></code></pre></td></tr></table></figure><h2 id="4-设计模式-适配器模式"><a href="#4-设计模式-适配器模式" class="headerlink" title="4. 设计模式-适配器模式"></a>4. 设计模式-适配器模式</h2><h3 id="一句话-2"><a href="#一句话-2" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>有对象适配、有类适配。类似于插座转化器，如下栗子。</p></blockquote><h3 id="类适配模式"><a href="#类适配模式" class="headerlink" title="类适配模式"></a>类适配模式</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 类适配模式</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ITwo</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ThreeAdaptee</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request2</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;我是三个孔的插头&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ThreeToTwoAdapter</span> : <span class="hljs-title">ThreeAdaptee</span>, <span class="hljs-title">ITwo</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Request2();<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><h3 id="类适配模式运行"><a href="#类适配模式运行" class="headerlink" title="类适配模式运行"></a>类适配模式运行</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">ITwo change = <span class="hljs-keyword">new</span> ThreeToTwoAdapter();<br><br>change.Request1();<br><br>Console.ReadLine();<br></code></pre></td></tr></table></figure><h3 id="对象适配器"><a href="#对象适配器" class="headerlink" title="对象适配器"></a>对象适配器</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 对象适配模式</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Two</span><span class="hljs-comment">//两口的插头</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;2个孔的插头可以使用&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Three</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request2</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;3个孔的插头可以使用&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TwoToThreeAdapter</span> : <span class="hljs-title">Two</span><br>&#123;<br>    Three three = <span class="hljs-keyword">new</span> Three();<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Request1</span>()</span><br>    &#123;<br>        three.Request2();<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><h3 id="对象适配器运行"><a href="#对象适配器运行" class="headerlink" title="对象适配器运行"></a>对象适配器运行</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">Two two = <span class="hljs-keyword">new</span> TwoToThreeAdapter();<br><br>two.Request1();<br><br>Console.ReadLine();<br></code></pre></td></tr></table></figure><h3 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h3><ol><li>单一职责原则（优点）</li><li>开闭原则（优点）</li><li>代码复杂度增加（缺点）</li></ol><h3 id="适应场景"><a href="#适应场景" class="headerlink" title="适应场景"></a>适应场景</h3><ol><li>如果第三方的接口或者代码于现有的接口、代码不兼容的时候，可以添加一个中间适配器层来解决这样的问题。</li></ol><h2 id="5-设计模式-外观模式"><a href="#5-设计模式-外观模式" class="headerlink" title="5. 设计模式-外观模式"></a>5. 设计模式-外观模式</h2><h3 id="一句话-3"><a href="#一句话-3" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>为子系统中的一组接口提供一个一致的界面，用来访问子系统中的一群接口</p></blockquote><h3 id="举个栗子-2"><a href="#举个栗子-2" class="headerlink" title="举个栗子"></a><a href="https://www.cnblogs.com/tianzhiliang/archive/2011/09/30/2196249.html">举个栗子</a></h3><p>在家里看个电影需要干些啥。把投影仪、功放、屏幕、<code>DVD</code>、灯光 这五个看做五个子系统。</p><ol><li>打开投影仪</li><li>打开功放</li><li>打开屏幕</li><li>打开<code>DVD</code></li><li>打开灯光</li></ol><p>看完了怎么关闭</p><ol><li>关闭投影仪</li><li>关闭功放</li><li>关闭屏幕</li><li>关闭<code>DVD</code></li><li>关闭灯光</li></ol><h3 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 投影仪 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Projector</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenProjector</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开投影仪&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseProjector</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭投影仪&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetWideScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;投影仪状态为宽屏模式&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetStandardScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;投影仪状态为标准模式&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 功放机 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Amplifier</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenAmplifier</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开功放机&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseAmplifier</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭功放机&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 屏幕 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Screen</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开屏幕&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseScreen</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭屏幕&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DVD播放器 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DVDPlayer</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenDVDPlayer</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开 DVD 播放器&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseDVDPlayer</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭 DVD 播放器&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 灯光 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Light</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenLight</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;打开灯光&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseLight</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;关闭灯光&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="定义一个外观"><a href="#定义一个外观" class="headerlink" title="定义一个外观"></a>定义一个外观</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 定义一个外观 </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MovieFacade</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 在外观类中必须保存有子系统中各个对象 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>    <span class="hljs-keyword">private</span> Projector projector;<br>    <span class="hljs-keyword">private</span> Amplifier amplifier;<br>    <span class="hljs-keyword">private</span> Screen screen;<br>    <span class="hljs-keyword">private</span> DVDPlayer dvdPlayer;<br>    <span class="hljs-keyword">private</span> Light light;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MovieFacade</span>()</span><br>    &#123;<br>        projector = <span class="hljs-keyword">new</span> Projector();<br>        amplifier = <span class="hljs-keyword">new</span> Amplifier();<br>        screen = <span class="hljs-keyword">new</span> Screen();<br>        dvdPlayer = <span class="hljs-keyword">new</span> DVDPlayer();<br>        light = <span class="hljs-keyword">new</span> Light();<br>    &#125;<br>    <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 打开电影 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OpenMovie</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//先打开投影仪 </span><br>        projector.OpenProjector();<br>        <span class="hljs-comment">//再打开功放 </span><br>        amplifier.OpenAmplifier();<br>        <span class="hljs-comment">//再打开屏幕 </span><br>        screen.OpenScreen();<br>        <span class="hljs-comment">//再打开 DVD </span><br>        dvdPlayer.OpenDVDPlayer();<br>        <span class="hljs-comment">//再打开灯光 </span><br>        light.OpenLight();<br>    &#125;<br>    <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 关闭电影 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CloseMovie</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//关闭投影仪 </span><br>        projector.CloseProjector();<br>        <span class="hljs-comment">//关闭功放 </span><br>        amplifier.CloseAmplifier();<br>        <span class="hljs-comment">//关闭屏幕 </span><br>        screen.CloseScreen();<br>        <span class="hljs-comment">//关闭 DVD </span><br>        dvdPlayer.CloseDVDPlayer();<br>        <span class="hljs-comment">//关闭灯光 </span><br>        light.CloseLight();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="看电影"><a href="#看电影" class="headerlink" title="看电影"></a>看电影</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    MovieFacade movie = <span class="hljs-keyword">new</span> MovieFacade();<br>    <span class="hljs-comment">//Projector projector = new Projector();</span><br><br>    <span class="hljs-comment">//首先是观看电影 </span><br>    movie.OpenMovie();<br>    Console.WriteLine();<br><br>    <span class="hljs-comment">//然后是将投影仪模式调到宽屏模式 </span><br>    <span class="hljs-comment">//projector.SetWideScreen();</span><br>    <span class="hljs-comment">//再将投影仪模式调回普通模式 </span><br>    <span class="hljs-comment">//projector.SetStandardScreen();</span><br>    <span class="hljs-comment">//Console.WriteLine();</span><br><br>    <span class="hljs-comment">//最后就是关闭电影了 </span><br>    movie.CloseMovie();<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="优缺点-2"><a href="#优缺点-2" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ol><li>外观模式对客户端屏蔽了子系统组件，从而简化了接口，减少了客户处理的对象数目并使得子系统的使用更加简单。</li><li>外观模式实现了客户端和子系统之间的松耦合关系，而子系统内部的组件是紧耦合的。松耦合使得子系统的组件变化不会影响到客户端。</li></ol><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ol><li>如果新增新的子系统可能需要修改外观类，这就不符合开闭原则，不过这也是没法避免的。</li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>外观模式也叫门面模式。属于<strong>结构型</strong>模式。</p><p>为子系统中的一系列接口提供一个一致的界面，该模式提供了一个高层接口，这个接口使得这一子系统更加容易使用。</p><p>外观模式是通过定义一个外观类将子类包装起来，来简化客户端所调用的方法.</p><h2 id="6-设计模式-享元模式"><a href="#6-设计模式-享元模式" class="headerlink" title="6. 设计模式-享元模式"></a>6. 设计模式-享元模式</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a><a href="https://www.cnblogs.com/wyy1234/p/10041658.html">概念</a></h3><p>​        <em><code>FlyweightPattern</code></em></p><p>​        在软件开发中我们经常遇到多次使用相似或者相同对象的情况，如果每次使用这个对象都去new一个新的实例会很浪费资源。这时候很多人会想到前边介绍过的一个设计模式：</p><p>​        原型模式，原型模式通过拷贝现有对象来生成一个新的实例，使用拷贝来替代new。原型模式可以很好的解决创建多个相同/相似实例的问题，为什么还要用享元模式呢？</p><p>​        这是因为这两种模式的使用场景是不同的，原型模式侧重于”创建“，我们通过拷贝确确实实的创建了新的实例，它属于创建型设计模式；而享元模式侧重于“重用”，即如果有现有的实例就不去创建了，直接拿来用就行了。</p><h3 id="举个栗子-3"><a href="#举个栗子-3" class="headerlink" title="举个栗子"></a>举个栗子</h3><h4 id="抽象车类"><a href="#抽象车类" class="headerlink" title="抽象车类"></a>抽象车类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Car</span><br>&#123;<br>    <span class="hljs-comment">//开车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Use</span>(<span class="hljs-params">Driver d</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="具体车类"><a href="#具体车类" class="headerlink" title="具体车类"></a>具体车类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">RealCar</span> : <span class="hljs-title">Car</span><br>&#123;<br>    <span class="hljs-comment">//颜色</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Color &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">RealCar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> color</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Color = color;<br>    &#125;<br>    <span class="hljs-comment">//开车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Use</span>(<span class="hljs-params">Driver d</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;d.Name&#125;</span>开<span class="hljs-subst">&#123;<span class="hljs-keyword">this</span>.Color&#125;</span>的车&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="车库"><a href="#车库" class="headerlink" title="车库"></a>车库</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 车库</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CarFactory</span><br>&#123;<br>    <span class="hljs-keyword">private</span> Dictionary&lt;<span class="hljs-built_in">string</span>, Car&gt; carPool = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, Car&gt;();<br>    <span class="hljs-comment">//初始的时候，只有红色和绿色两辆汽车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CarFactory</span>()</span><br>    &#123;<br>        carPool.Add(<span class="hljs-string">&quot;红色&quot;</span>, <span class="hljs-keyword">new</span> RealCar(<span class="hljs-string">&quot;红色&quot;</span>));<br>        carPool.Add(<span class="hljs-string">&quot;绿色&quot;</span>, <span class="hljs-keyword">new</span> RealCar(<span class="hljs-string">&quot;蓝色&quot;</span>));<br>    &#125;<br>    <span class="hljs-comment">//获取汽车</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Car <span class="hljs-title">GetCar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> key</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//如果车库有就用车库里的车，车库没有就买一个（new一个）</span><br>        <span class="hljs-keyword">if</span> (!carPool.ContainsKey(key))<br>        &#123;<br>            carPool.Add(key, <span class="hljs-keyword">new</span> RealCar(key));<br>            Console.WriteLine(<span class="hljs-string">&quot;没有&#123;0&#125;的车，就买一个&quot;</span>, key);<br>        &#125;<br>        <span class="hljs-keyword">return</span> carPool[key];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="司机类"><a href="#司机类" class="headerlink" title="司机类"></a>司机类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 司机类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Driver</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Driver</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Name = name;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    CarFactory carFactory = <span class="hljs-keyword">new</span> CarFactory();<br><br>    <span class="hljs-comment">//小头爸爸开蓝色的车</span><br>    Driver d1 = <span class="hljs-keyword">new</span> Driver(<span class="hljs-string">&quot;小头爸爸&quot;</span>);<br>    Car c1 = carFactory.GetCar(<span class="hljs-string">&quot;蓝色&quot;</span>);<br>    c1.Use(d1);<br><br>    <span class="hljs-comment">//扁头妈妈开蓝色的车</span><br>    Driver d2 = <span class="hljs-keyword">new</span> Driver(<span class="hljs-string">&quot;扁头妈妈&quot;</span>);<br>    Car c2 = carFactory.GetCar(<span class="hljs-string">&quot;蓝色&quot;</span>);<br>    c2.Use(d2);<br><br>    <span class="hljs-keyword">if</span> (c1.Equals(c2))<br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;小头爸爸和扁头妈妈开的是同一辆车&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">//车库没有白色的车，就new一辆白色的车</span><br>    Driver d3 = <span class="hljs-keyword">new</span> Driver(<span class="hljs-string">&quot;大头儿子&quot;</span>);<br>    Car c3 = carFactory.GetCar(<span class="hljs-string">&quot;白色&quot;</span>);<br>    c3.Use(d3);<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h3><p>​        当系统中大量使用某些相同或者相似的对象，这些对象要耗费大量的内存，并且这些对象剔除外部状态后可以通过一个对象来替代，这时可以考虑使用享元模式。在软件系统中享元模式大量用于各种池技术，如数据库连接对象池，字符串缓存池，<code>HttpApplication</code>池等。</p><h3 id="优缺点-3"><a href="#优缺点-3" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ol><li>降低了系统中对象的数量，从而降低了系统中细粒度对象给内存带来的压力。</li></ol><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ol><li>需要分离对象的外部状态和内部状态，使用不当会引起线程安全问题，提高了系统的复杂度。</li></ol><h2 id="7-设计模式-原型模式"><a href="#7-设计模式-原型模式" class="headerlink" title="7. 设计模式-原型模式"></a>7. 设计模式-原型模式</h2><h3 id="一句话-4"><a href="#一句话-4" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>用原型实例指定创建对象的种类，并且通过复制这些原型创建新的对象。</p></blockquote><h3 id="举个栗子-4"><a href="#举个栗子-4" class="headerlink" title="举个栗子"></a>举个栗子</h3><h4 id="以手机来做个原型"><a href="#以手机来做个原型" class="headerlink" title="以手机来做个原型"></a>以手机来做个原型</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 手机原型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MobilePhonePrototype</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _brand;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 品牌</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Brand<br>    &#123;<br>        <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> _brand; &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MobilePhonePrototype</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> brand</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>._brand = brand;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> MobilePhonePrototype <span class="hljs-title">Clone</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="小米原型"><a href="#小米原型" class="headerlink" title="小米原型"></a>小米原型</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 小米手机原型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">XiaoMiPrototype</span> : <span class="hljs-title">MobilePhonePrototype</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">XiaoMiPrototype</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> brand</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">brand</span>)</span><br>        &#123;<br>        &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> MobilePhonePrototype <span class="hljs-title">Clone</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> (MobilePhonePrototype)<span class="hljs-keyword">this</span>.MemberwiseClone();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="苹果手机原型"><a href="#苹果手机原型" class="headerlink" title="苹果手机原型"></a>苹果手机原型</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 苹果手机原型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ApplePrototype</span> : <span class="hljs-title">MobilePhonePrototype</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ApplePrototype</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> brand</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">brand</span>)</span><br>        &#123;<br>        &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> MobilePhonePrototype <span class="hljs-title">Clone</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> (MobilePhonePrototype)<span class="hljs-keyword">this</span>.MemberwiseClone();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="最后-1"><a href="#最后-1" class="headerlink" title="最后"></a>最后</h4><p>由于原型模式<code>Prototype</code>是一种创建型设计模式，它关注的是大量相同或者相似的对象创建问题。通过<code>new</code>一个对象后，然后通过<code>new</code>出来的对象进行复制，创建出相同的对象。也就是通过这种方式来创建对象。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp">XiaoMiPrototype xiaomi = <span class="hljs-keyword">new</span> XiaoMiPrototype(<span class="hljs-string">&quot;小米&quot;</span>);<br>XiaoMiPrototype xiaomi2 = (XiaoMiPrototype)xiaomi.Clone();<br>Console.WriteLine(xiaomi2.Brand);<br><br>ApplePrototype iphone = <span class="hljs-keyword">new</span> ApplePrototype(<span class="hljs-string">&quot;iPhone7 Plus&quot;</span>);<br>ApplePrototype iphone2 = (ApplePrototype)iphone.Clone();<br>Console.WriteLine(iphone2.Brand);<br></code></pre></td></tr></table></figure><h2 id="8-设计模式-装饰器模式"><a href="#8-设计模式-装饰器模式" class="headerlink" title="8. 设计模式-装饰器模式"></a>8. 设计模式-装饰器模式</h2><h3 id="一句话-5"><a href="#一句话-5" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>当我们需要动态添加类的功能同时不改变类的结构时可以使用装饰者模式，装饰类本质是一个现有类的包装。</p></blockquote><h3 id="举个栗子-5"><a href="#举个栗子-5" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>创建一个人，然后给他穿衣服。</p><h4 id="创建一个人"><a href="#创建一个人" class="headerlink" title="创建一个人"></a>创建一个人</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 人类  具体组件角色</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> : <span class="hljs-title">AbstractPerson</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment">//待添加功能的Show方法，具体组件中的Show方法只有原始功能</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        Console.Write(<span class="hljs-string">$&quot;打扮的人是<span class="hljs-subst">&#123;<span class="hljs-keyword">this</span>.Name&#125;</span>：&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="抽象这个人"><a href="#抽象这个人" class="headerlink" title="抽象这个人"></a>抽象这个人</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 抽象人类  </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AbstractPerson</span><br>&#123;<br>    <span class="hljs-comment">//展示装饰方法,我们使用装饰器模式的目的就是为了扩展这个接口的功能</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="抽象穿衣服方法"><a href="#抽象穿衣服方法" class="headerlink" title="抽象穿衣服方法"></a>抽象穿衣服方法</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//因为我们装饰后的person要直接替换装饰前的person，所以必须继承AbstractPerson</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Finery</span> : <span class="hljs-title">AbstractPerson</span><br>&#123;<br>    <span class="hljs-keyword">protected</span> AbstractPerson person;<br>    <span class="hljs-comment">//设置要打扮的人</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetPerson</span>(<span class="hljs-params">AbstractPerson p</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.person = p;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (person != <span class="hljs-literal">null</span>)<br>        &#123;<br>            person.Show();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="衣服库"><a href="#衣服库" class="headerlink" title="衣服库"></a>衣服库</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//t恤</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TShirt</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;大t恤  &quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//网鞋</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Sneaker</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;网鞋  &quot;</span>);<br>    &#125;<br><br>&#125;<br><span class="hljs-comment">//西装</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Suit</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;西装  &quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//领带</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Tie</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;领带  &quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//皮鞋</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Leather</span> : <span class="hljs-title">Finery</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.Show();<br>        Console.Write(<span class="hljs-string">&quot;皮鞋  &quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="穿衣服咯"><a href="#穿衣服咯" class="headerlink" title="穿衣服咯"></a>穿衣服咯</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-comment">//首先要有打扮的人</span><br>    AbstractPerson xc = <span class="hljs-keyword">new</span> Person() &#123; Name = <span class="hljs-string">&quot;小菜&quot;</span> &#125;;<br><br>    Console.WriteLine(<span class="hljs-string">&quot;第一种装饰-------------------&quot;</span>);<br>    Finery personWithsuit = <span class="hljs-keyword">new</span> Suit();<br>    Finery personWithtie = <span class="hljs-keyword">new</span> Tie();<br>    Finery personWithleather = <span class="hljs-keyword">new</span> Leather();<br>    <span class="hljs-comment">//装饰过程</span><br>    personWithsuit.SetPerson(xc);<span class="hljs-comment">//给小菜穿上西服</span><br>    personWithtie.SetPerson(personWithsuit);<span class="hljs-comment">//给穿上西服的小菜带上领带</span><br>    personWithleather.SetPerson(personWithtie);<span class="hljs-comment">//给穿上西服带上领带的小菜穿上皮鞋</span><br>    personWithleather.Show();<br><br>    Console.WriteLine();<br>    Console.WriteLine(<span class="hljs-string">&quot;第二种装饰-------------------&quot;</span>);<br>    Finery personWithTshirt = <span class="hljs-keyword">new</span> TShirt();<br>    Finery personWithSneaker = <span class="hljs-keyword">new</span> Sneaker();<br>    <span class="hljs-comment">//装饰过程</span><br>    personWithTshirt.SetPerson(xc);<span class="hljs-comment">//给小菜穿上t恤</span><br>    personWithSneaker.SetPerson(personWithTshirt);<span class="hljs-comment">//给穿上t恤的小菜穿上网球鞋</span><br>    personWithSneaker.Show();<br><br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp">第一种装饰-------------------<br>打扮的人是小菜：西装  领带  皮鞋<br>第二种装饰-------------------<br>打扮的人是小菜：大t恤  网鞋<br></code></pre></td></tr></table></figure><h3 id="优缺点-4"><a href="#优缺点-4" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><ol><li>一个类需要添加一些功能，而这些功能按数目、顺序组合形成的效果不一样，如果用继承会造成子类过多，装饰者模式可以很好地解决这个问题；</li><li>使用装饰者模式我们可以动态的添加/删除类的功能，灵活性好</li></ol><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><ol><li>多层装饰比较复杂，我们需要注意装饰顺序等因素。如先穿内裤再穿裤子，是正常人；而先穿裤子再穿内裤就是超人了。在开发中先过滤字符串再加密，和先加密字符串再过滤的效果是完全不同的。</li></ol><h2 id="9-设计模式-组合模式"><a href="#9-设计模式-组合模式" class="headerlink" title="9. 设计模式-组合模式"></a>9. 设计模式-组合模式</h2><h3 id="一句话-6"><a href="#一句话-6" class="headerlink" title="一句话"></a>一句话</h3><blockquote><p>在树形结构的处理中模糊了对象和对象组的概念，使用对象和对象组采用了统一的接口，让我们可以像处理简单对象一样处理对象组。</p></blockquote><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>首先得有个树结构，最先想到的就是<code>OA</code>系统里的组织结构。集团总公司、分公司、部门、岗位、人员等等，下面以员工和部门举栗子。</p><h4 id="先抽个象。"><a href="#先抽个象。" class="headerlink" title="先抽个象。"></a>先抽个象。</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 抽象部件 定义了树枝和树叶的公共属性和接口</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Component</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> name;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Component</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br>    <br>    <span class="hljs-comment">//添加子节点</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Add</span>(<span class="hljs-params">Component c</span>)</span>;<br>    <br>    <span class="hljs-comment">//删除子节点</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Remove</span>(<span class="hljs-params">Component c</span>)</span>;<br>    <br>    <span class="hljs-comment">//展示方法，dept为节点深度</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Display</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dept</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="树叶子：员工"><a href="#树叶子：员工" class="headerlink" title="树叶子：员工"></a>树叶子：员工</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//具体员工，树形结构的Leaf</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> : <span class="hljs-title">Component</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Employee</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br>    <span class="hljs-comment">//Leaf不能添加/删除子节点所以空实现</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Add</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Remove</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Display</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dept</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&#x27;-&#x27;</span>, dept) + name);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="树枝：部门"><a href="#树枝：部门" class="headerlink" title="树枝：部门"></a>树枝：部门</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 部门类，相当于树枝</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Depart</span> : <span class="hljs-title">Component</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Depart</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">name</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br>    <span class="hljs-comment">//添加子节点</span><br>    <span class="hljs-keyword">public</span> List&lt;Component&gt; children = <span class="hljs-keyword">new</span> List&lt;Component&gt;();<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Add</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br>        children.Add(c);<br>    &#125;<br>    <span class="hljs-comment">//删除子节点</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Remove</span>(<span class="hljs-params">Component c</span>)</span><br>    &#123;<br>        children.Remove(c);<br>    &#125;<br>    <span class="hljs-comment">//展示自己和和内部的所有子节点，这里是组合模式的核心</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Display</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dept</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&#x27;-&#x27;</span>, dept) + name);<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> children)<br>        &#123;<br>            <span class="hljs-comment">//这里用到了递归的思想</span><br>            item.Display(dept + <span class="hljs-number">4</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="最后：攒"><a href="#最后：攒" class="headerlink" title="最后：攒"></a>最后：攒</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Component DepartA = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;A总公司&quot;</span>);<br>    Component DepartAX = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AX部门&quot;</span>);<br>    Component DepartAY = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AY部门&quot;</span>);<br>    Component DepartAX1 = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AX1子部门&quot;</span>);<br>    Component DepartAX2 = <span class="hljs-keyword">new</span> Depart(<span class="hljs-string">&quot;AX2子部门&quot;</span>);<br>    Component Ae1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;公司直属员工1&quot;</span>);<br>    Component AXe1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AX部门员工1&quot;</span>);<br>    Component AX1e1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AX1部门员工1&quot;</span>);<br>    Component AX1e2 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AX1部门员工2&quot;</span>);<br>    Component AYe1 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AY部门员工1&quot;</span>);<br>    Component AYe2 = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;AY部门员工2&quot;</span>);<br>    DepartA.Add(Ae1);<br>    DepartA.Add(DepartAX);<br>    DepartA.Add(DepartAY);<br>    DepartAX.Add(AXe1);<br>    DepartAX.Add(DepartAX1);<br>    DepartAX.Add(DepartAX2);<br>    DepartAX1.Add(AX1e1);<br>    DepartAX1.Add(AX1e2);<br>    DepartAY.Add(AYe1);<br>    DepartAY.Add(AYe2);<br>    <span class="hljs-comment">//遍历总公司</span><br>    DepartA.Display(<span class="hljs-number">1</span>);<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205051432849.png" alt="image-20220505143244328"></p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>设计模式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ApiFox参数配置</title>
    <link href="/2022/04/28/APIFox-%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/04/28/APIFox-%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ApiFox-参数配置"><a href="#ApiFox-参数配置" class="headerlink" title="ApiFox 参数配置"></a>ApiFox 参数配置</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421221.png" alt="ApiFox"></p><h2 id="设置全局参数"><a href="#设置全局参数" class="headerlink" title="设置全局参数"></a>设置全局参数</h2><p>出于<code>JWT</code>权限验证，需要获取<code>token</code>才能访问。否则就是如下情况。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421319.png" alt="401 Unauthoized"></p><p>先设置全局参数 <code>Authorizatior</code> 默认值 <code>bearer &#123;&#123;token&#125;&#125;</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421550.png" alt="设置全局参数"></p><p>在获取<code>token</code>的接口处，常规添加<code>Params</code>，主要是看<strong>后置操作</strong></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421954.png" alt="后置操作"></p><p>以下是添加完的。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281421334.png" alt="添加公共脚本"></p><p>添加公共脚本</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281422732.png" alt="公共脚本"></p><p>输入公共脚本内容</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281422599.png" alt="公共脚本内容"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//核心</span><br>pm.<span class="hljs-title function_">test</span>(<span class="hljs-string">&quot;Status code is 200&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    pm.<span class="hljs-property">response</span>.<span class="hljs-property">to</span>.<span class="hljs-property">have</span>.<span class="hljs-title function_">status</span>(<span class="hljs-number">200</span>);<br>&#125;);<br><span class="hljs-comment">// 把responseBody转为json字符串</span><br><span class="hljs-keyword">var</span> data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(responseBody);<br><span class="hljs-comment">// 设置环境变量token，供后面的接口引用，位置就是上一步获取的位置</span><br>pm.<span class="hljs-property">globals</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;token&quot;</span>, data.<span class="hljs-property">result</span>.<span class="hljs-property">AccessToken</span>);<br></code></pre></td></tr></table></figure><p>以上，在执行完登录接口后，公共脚本会把<code>token</code>信息赋值给全局变量<code>Authorization</code>,其他接口就可以直接使用<code>token</code>了。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204281422625.png" alt="使用全局参数"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Api</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信公众号网站调试</title>
    <link href="/2022/04/01/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%BD%91%E7%AB%99%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/"/>
    <url>/2022/04/01/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%BD%91%E7%AB%99%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微信公众号网站调试"><a href="#微信公众号网站调试" class="headerlink" title="微信公众号网站调试"></a>微信公众号网站调试</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 <code>Microsoft Visual Studio 2019</code> 开发的<code>MVC</code> 作为微信公众号的后台，</p><p>由于微信公众号的限制，需要在后台设置业务域名进行安全验证。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915539.png" alt="image-20220328151830858"></p><p>还有就是  <code>Microsoft Visual Studio 2019</code> 在开发的同时，是启用<code>IIS Express</code>  或者 <code>本地IIS</code>。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915421.png" alt="image-20220328152024665"></p><p>综述上面两点，导致开发人员在项目调试的时候，没有以往那般丝滑。</p><h2 id="NATAPP"><a href="#NATAPP" class="headerlink" title="NATAPP"></a><code>NATAPP</code></h2><p>经朋友介绍，引入  <a href="https://natapp.cn/">NATAPP-内网穿透 基于ngrok的国内高速内网映射工具</a></p><p>大概分几步：</p><ol><li><p>注册，认证，这无需多言。</p></li><li><p>购买隧道，这里我买的是免费的，经费充裕尽量买收费的，这样域名不会变来变去。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915731.png" alt="image-20220328152411264"></p></li><li><p>下载客户端，我这是 <code>windows 64</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204011050571.png" alt="image-20220328152651312"></p></li><li><p>修改<code>config.ini</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">default</span>]<br>authtoken=***********<br>clienttoken=<br>log=none                        <br>loglevel=ERROR                  <br>http_proxy= <br></code></pre></td></tr></table></figure><p>这里的 <code>authtoken</code> 是购买的隧道中的信息</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915485.png" alt="image-20220328152850308"></p></li><li><p>双击<code>natapp.exe</code>,前提是本地的<code>IIS</code>或者别的宿主好使。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204011050248.png" alt="image-20220328153026831"></p></li></ol><p>至此，内外网穿透完事，得到外网域名和内网端口，但是还没有达到能通过VS可以调试的地步，接着整。</p><h2 id="本地发布"><a href="#本地发布" class="headerlink" title="本地发布"></a>本地发布</h2><p>接下来设置本地</p><ol><li><p>先在VS中把网站发布到本地的文件夹里，把上面这个<code>MP_verify_***********.TXT</code>，也放到这个地方，不放不行，不放上一步域名添加不了。</p></li><li><p>在<code>IIS</code>添加站点，我这本地是80端口，那就设置80端口的一个站点，站点的主机头就是：之前到手的那个域名，这个时候，基本上就能通过域名访问本地站点</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915419.png" alt="image-20220328154224740"></p></li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915010.png" alt="image-20220328154311358"></p><h2 id="公众号后台设置"><a href="#公众号后台设置" class="headerlink" title="公众号后台设置"></a>公众号后台设置</h2><p>设置微信公众号设置-功能设置，添加各种，由于之前有域名，那就添加刚到手的这个域名。添加的时候回提醒下载个<code>MP_verify_***********.TXT</code>文件放到本地，介时下载下来先备用。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915087.png" alt="image-20220328154628975"></p><h2 id="设置项目属性"><a href="#设置项目属性" class="headerlink" title="设置项目属性"></a>设置项目属性</h2><p>指向刚才发布的那个站点。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310915884.png" alt="image-20220328154940226"></p><p>这个时候，在调试的时候，就是以这个域名启动调试。</p><h2 id="微信开发者工具"><a href="#微信开发者工具" class="headerlink" title="微信开发者工具"></a>微信开发者工具</h2><p>最最最后，再来一个工具，微信开发者工具</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310916458.png" alt="image-20220328155132195"></p><p>是为了当验证用户的时候，不用弹出</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310916145.png" alt="image-20220328155311767"></p><p>至此，准备工作都完成了</p><h2 id="修改HOST"><a href="#修改HOST" class="headerlink" title="修改HOST"></a>修改HOST</h2><p><code>C:\Windows\System32\drivers\etc</code></p><p>最后添加 <code>127.0.0.1</code>  域名</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202203310916713.png" alt="image-20220328161612732"></p><h2 id="调试顺序"><a href="#调试顺序" class="headerlink" title="调试顺序"></a>调试顺序</h2><ol><li>VS 启动调试，断点啥的该打打上。</li><li>微信开发工具 地址栏填写您要请求的页面地址。</li><li>进断点，为所欲为。</li><li>开发者工具可以调试前端代码。</li></ol>]]></content>
    
    
    <categories>
      
      <category>微信公众号</category>
      
    </categories>
    
    
    <tags>
      
      <tag>公众号</tag>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Office Tools 安装部署Office</title>
    <link href="/2022/03/12/Office%20Tools%20%E5%AE%89%E8%A3%85%E8%80%81%E4%B8%89%E4%BB%B6%E5%92%8CVisio/"/>
    <url>/2022/03/12/Office%20Tools%20%E5%AE%89%E8%A3%85%E8%80%81%E4%B8%89%E4%BB%B6%E5%92%8CVisio/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/Snipaste_2022-03-18_21-16-56.png"></p><h1 id="Office-Tools"><a href="#Office-Tools" class="headerlink" title="Office Tools"></a>Office Tools</h1><p>官网</p><p><a href="https://otp.landian.vip/zh-cn/">Office Tool Plus 官方网站 - 一键部署 Office (landian.vip)</a></p><p>选择产品</p><p>我这是安装完的，之前的忘记截图了。我选择了Office 专业增强版 2019 和 Visio 专业版 2019</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220312000401414.png" alt="选择"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220311235809244.png" alt="安装中"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220311235930667.png" alt="关闭防护"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220312000022460.png" alt="激活"></p><p>最后记得MKS激活一发即可。</p>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Program</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker+GitLab+Jenkins</title>
    <link href="/2022/01/20/jenkins/"/>
    <url>/2022/01/20/jenkins/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大概意图：<code>Docker</code>+<code>GitLab</code>+<code>Jenkins</code> 自动部署 <code>Dot Net Core Web Application</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220120211456716.png" alt="大概意图"></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220120212431735.png" alt="主要容器"></p><h2 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/cd796745db80288a131fb24d57d12880.jpeg" alt="Gitlab"></p><h3 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><p>或者 导入本地镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker load &lt; /root/dockerimage/xxxx.tar<br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d  -p 443:443 -p 8888:80 -p 222:22 --name gitlab --restart always \<br>-v /root/gitlab/config:/etc/gitlab \<br>-v /root/gitlab/logs:/var/log/gitlab \<br>-v /root/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><h3 id="添加秘钥"><a href="#添加秘钥" class="headerlink" title="添加秘钥"></a>添加秘钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &#x27;xxx@xxx.com&#x27;<br></code></pre></td></tr></table></figure><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220120225149050.png" alt="Jenkins"></p><h3 id="Windows-安装"><a href="#Windows-安装" class="headerlink" title="Windows 安装"></a>Windows 安装</h3><h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>安装 JDK 1.8 <code>jdk-8u321-windows-x64.exe</code> </p><p>安装完成之后设置环境变量</p><h4 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125134818266.png" alt="image-20220125134818266"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125134838645.png" alt="image-20220125134838645"></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mel">JAVA_HOME<br>C:\Program Files\Java\jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0</span>_321<br><br>CLASSPATH<br>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;<br></code></pre></td></tr></table></figure><h4 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135007369.png" alt="image-20220125135007369"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135030637.png" alt="image-20220125135030637"></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haml">Path<br><span class="hljs-tag">%<span class="hljs-selector-tag">JAVA_HOME</span></span>%\bin\<br><span class="hljs-tag">%<span class="hljs-selector-tag">JAVA_HOME</span></span>%\jre\bin\<br></code></pre></td></tr></table></figure><h4 id="下载-war"><a href="#下载-war" class="headerlink" title="下载 war"></a>下载 war</h4><p><code>jenkins.war</code>:下载 <a href="https://mirrors.huaweicloud.com/jenkins/war/2.269/">https://mirrors.huaweicloud.com/jenkins/war/2.269/</a> </p><h4 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135345995.png" alt="image-20220125135345995"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> D:\jenkins<br>java -jar jenkins.war<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135452362.png" alt="image-20220125135452362"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135709149.png" alt="image-20220125135709149"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220125135728614.png" alt="image-20220125135728614"></p><h3 id="Linux-安装"><a href="#Linux-安装" class="headerlink" title="Linux 安装"></a>Linux 安装</h3><h4 id="镜像下载-1"><a href="#镜像下载-1" class="headerlink" title="镜像下载"></a>镜像下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull jenkins/jenkins<br></code></pre></td></tr></table></figure><h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -u root -d -p 8080:8080 -p 50000:50000 -v /root/jenkins_data/DockerData:/var/jenkins_home -v /root/jenkins_data/docker.sock:/var/run/docker.sock jenkins/jenkins --restart always<br></code></pre></td></tr></table></figure><h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><blockquote><p> Please wait while Jenkins is getting ready to work …</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">打开</span><br>hudson.model.UpdateCenter.xml   #这个就是挂载的root/jenkins_data/Dockerdata里<br><span class="hljs-meta prompt_"># </span><span class="language-bash">把</span><br>http://updates.jenkins-io/update-center.json<br><span class="hljs-meta prompt_"># </span><span class="language-bash">改成 清华大学镜像地址</span><br>http://mirror.xmission.com/jenkins/updates/update-center.json<br></code></pre></td></tr></table></figure><h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><blockquote><p>容器内执行<code>apt-get update</code> 总超时，需要添加源</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将容器内的配置文件导出来</span><br>docker cp elegant_neumann:&quot;/etc/apt/sources.list&quot; /root/jenkins_config/<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将修改好的配置文件覆盖到容器中</span><br>docker cp &quot;/root/jenkins_config/sources.list&quot; elegant_neumann:&quot;/etc/apt/sources.list&quot;<br></code></pre></td></tr></table></figure><h4 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h4><blockquote><p>更新源后会报错：<code>NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 40976EAF437D05B5 3B4FE6ACC0B21F32<br></code></pre></td></tr></table></figure><p>然后添加ping <code>apt install iputils-ping</code></p><h4 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h4><blockquote><p>因为要在<code>Jenkins</code>中运行 <code>DotNet 5.0 Web</code>，所以需要在<code>Jenkins</code>容器内有 <code>dotnet 5.0 SDK</code>,这个问题会体现在构建的时候。</p><p>这涉及到通过<code>Dockerfile</code> 创建镜像，这里需要创建一个携带<code>dotnet5.0 SDK</code>的<code>jenkins</code>镜像</p></blockquote><p>参考地址：<a href="https://blog.csdn.net/feng005211/article/details/114818504">.NET 5 + Docker Jenkins，做自动化部署，全Docker环境</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">封装Jenkins镜像（带有dotnet环境的） sdk=5.1</span><br>FROM jenkins/jenkins:lts<br>USER root<br>WORKDIR /dotnet<br>RUN wget -O dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/820db713-c9a5-466e-b72a-16f2f5ed00e2/628aa2a75f6aa270e77f4a83b3742fb8/dotnet-sdk-5.0.100-linux-x64.tar.gz<br>RUN tar zxf dotnet.tar.gz -C ./<br>RUN rm -rf dotnet.tar.gz<br>ENV PATH=&quot;$&#123;PATH&#125;:/dotnet:/var/jenkins_home/.dotnet/tools&quot;<br>ENV DOTNET_ROOT=&quot;/dotnet&quot;<br>RUN apt update -y<br>RUN apt install icu-devtools vim zip unzip -y<br>RUN usermod -a -G root jenkins<br>USER jenkins<br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs haskell">命令解释<br><span class="hljs-number">1</span>.这个<span class="hljs-type">Docker</span>镜像基于jenkins<br><span class="hljs-number">2</span>.设置当前用户为root，因为后面安装需要使用root<br><span class="hljs-number">3</span>.设置当前工作目录为<span class="hljs-keyword">dotnet</span><br><span class="hljs-number">4</span>.下载<span class="hljs-keyword">dotnet</span> <span class="hljs-type">SDK</span>包，保存为<span class="hljs-keyword">dotnet</span>.tar.gz。这里要注意下载正确版本的<span class="hljs-type">SDK</span>，可前往微软官方网站获取下载链接：https://<span class="hljs-keyword">dotnet</span>.microsoft.com/download<br><span class="hljs-number">5</span>.解压<span class="hljs-keyword">dotnet</span> <span class="hljs-type">SDK</span>到当前目录，即/<span class="hljs-keyword">dotnet</span>目录<br><span class="hljs-number">6</span>.删除<span class="hljs-keyword">dotnet</span> <span class="hljs-type">SDK</span>包<br><span class="hljs-number">7</span>.把<span class="hljs-keyword">dotnet</span>目录和<span class="hljs-keyword">dotnet</span> tools目录添加到环境变量<span class="hljs-type">PATH</span>，这样就可以使用<span class="hljs-keyword">dotnet</span>命令了<br><span class="hljs-number">8</span>.设置<span class="hljs-type">DOTNET_ROOT</span>变量<br><span class="hljs-number">9</span>.更新源<br><span class="hljs-number">10</span>.安装一些必需的，常用的工具包，其中icu-devtools是运行<span class="hljs-keyword">dotnet</span>需要的<br><span class="hljs-number">11</span>.修改jenkins用户到root附加组<br><span class="hljs-number">12</span>.设置当前用户为jenkins<br></code></pre></td></tr></table></figure><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haskell">构建镜像 name=jenkins:<span class="hljs-keyword">dotnet</span><br><span class="hljs-title">docker</span> build -t jenkins:<span class="hljs-keyword">dotnet</span> .<br>很简单的将包含<span class="hljs-keyword">dotnet</span>环境的jenkins安装好了<br></code></pre></td></tr></table></figure><h4 id="问题5"><a href="#问题5" class="headerlink" title="问题5"></a>问题5</h4><blockquote><p>容器内想安装别的就会用到 wget</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get update  <br>apt-get install wget  <br>wget --version  <br></code></pre></td></tr></table></figure><h4 id="问题6"><a href="#问题6" class="headerlink" title="问题6"></a>问题6</h4><blockquote><p>构建携带dotnet 5环境的Jenkins镜像</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">封装Jenkins镜像（带有dotnet环境的） sdk=5.1</span><br>FROM jenkins/jenkins:latest<br>USER root<br>WORKDIR /dotnet<br>RUN echo &quot;deb http://mirrors.aliyun.com/debian/ buster main non-free contrib\n\<br>deb http://mirrors.aliyun.com/debian-security buster/updates main\n\<br>deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib\n\<br>deb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib\n\<br>deb-src http://mirrors.aliyun.com/debian-security buster/updates main\n\<br>deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib\n\<br>deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib\n\<br>deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib&quot; &gt; /etc/apt/sources.list<br>RUN apt-get update --fix-missing &amp;&amp; apt-get install -y wget --fix-missing<br>RUN wget -O dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/820db713-c9a5-466e-b72a-16f2f5ed00e2/628aa2a75f6aa270e77f4a83b3742fb8/dotnet-sdk-5.0.100-linux-x64.tar.gz<br>RUN tar zxf dotnet.tar.gz -C ./<br>RUN rm -rf dotnet.tar.gz<br>ENV PATH=&quot;$&#123;PATH&#125;:/dotnet:/var/jenkins_home/.dotnet/tools&quot;<br>ENV DOTNET_ROOT=&quot;/dotnet&quot;<br>RUN apt update -y<br>RUN apt install icu-devtools vim zip unzip -y<br>RUN usermod -a -G root jenkins<br>USER jenkins<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name dotnetjenkins  --restart always -u root -d -p 8080:8080 -p 50000:50000 -v /root/jenkins_data/DockerData:/var/jenkins_home -v /root/jenkins_data/docker.sock:/var/run/docker.sock jenkins:dotnet<br></code></pre></td></tr></table></figure><h2 id="Registry"><a href="#Registry" class="headerlink" title="Registry"></a>Registry</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220127143255440.png" alt="image-20220127143255440"></p><p>私有仓库服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry:2.7.1<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d \<br>   -p 5001:5000 \<br>   --restart=always \<br>   --name registry \<br>   -v /root/data/docker-registry:/var/lib/registry \<br>   registry:2.7.1<br></code></pre></td></tr></table></figure><p>访问： <a href="http://192.168.137.5:5001/v2/">http://192.168.137.5:5001/v2/</a></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220126205651174.png" alt="image-20220126205651174"></p><h3 id="Push"><a href="#Push" class="headerlink" title="Push"></a>Push</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将hello-world 重新复制命名为 192.168.137.5:5001/hello-world</span><br>docker tag hello-world 192.168.137.5:5001/hello-world<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行 docker push 192.168.137.5:5001/hello-world 就会提交到私有仓库</span><br></code></pre></td></tr></table></figure><h3 id="问题1-1"><a href="#问题1-1" class="headerlink" title="问题1"></a>问题1</h3><blockquote><p><code>Get &quot;https://192.168.137.5:5001/v2/&quot;: http: server gave HTTP response to HTTPS client</code></p></blockquote><p>此问题的原因是由于 Docker自从<code>1.3.X</code>之后docker registry交互默认使用的是<code>HTTPS</code>，但是搭建私有镜像默认使用的是<code>HTTP</code>服务，所以与私有镜像交时出现以上错误。</p><p>想要解决此问题，执行了两个方案，执行到第二种方才好使</p><p>第一种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/docker/daemon.json<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加 <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;192.168.137.5:5001&quot;</span>]</span><br>&#123;<br>  &quot;insecure-registries&quot;: [&quot;192.168.137.5:5001&quot;],&quot;registry-mirrors&quot;: [&quot;https://i6*****.mirror.aliyuncs.com&quot;]<br>&#125;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启 daemom</span><br>systemctl daemon-reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启docker服务</span><br>systemctl restart docker<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启容器</span><br>docker start $(docker ps -aq)<br></code></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /usr/lib/systemd/system/docker.service<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220126214929695.png" alt="image-20220126214929695"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在ExecStart 这行后面添加 --insecure-registry 192.168.137.5:5001  也就是在Docker启动的时候添加参数</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启 daemom</span><br>systemctl daemon-reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启docker服务</span><br>systemctl restart docker<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启容器</span><br>docker start $(docker ps -aq)<br></code></pre></td></tr></table></figure><p>问题解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@microservicevm:~# curl -XGET http://192.168.137.5:5001/v2/_catalog<br>&#123;&quot;repositories&quot;:[]&#125;<br><br>root@microservicevm:/# docker push 192.168.137.5:5001/hello-world<br>Using default tag: latest<br>The push refers to repository [192.168.137.5:5001/hello-world]<br>e07ee1baac5f: Pushed <br>latest: digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4 size: 525<br><br>root@microservicevm:/# curl -XGET http://192.168.137.5:5001/v2/_catalog<br>&#123;&quot;repositories&quot;:[&quot;hello-world&quot;]&#125;<br></code></pre></td></tr></table></figure><h2 id="Harbor"><a href="#Harbor" class="headerlink" title="Harbor"></a>Harbor</h2><h2 id="Net-5-GitLab-Jenkins"><a href="#Net-5-GitLab-Jenkins" class="headerlink" title="Net 5 + GitLab + Jenkins"></a>Net 5 + GitLab + Jenkins</h2><h3 id="Net-5"><a href="#Net-5" class="headerlink" title="Net 5"></a>Net 5</h3><p>根据此处的<a href="#%E9%97%AE%E9%A2%986">Dockerfile</a>，创建携带.net 5.0 环境的<code>Jenkins</code>容器</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204439495.png" alt="创建"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204544944.png" alt="配置"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204632628.png" alt="net5.0"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204732348.png" alt="测试代码"></p><h3 id="Jenkins-1"><a href="#Jenkins-1" class="headerlink" title="Jenkins"></a>Jenkins</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203211820516.png" alt="系统管理-系统配置"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203211538155.png" alt="配置GitLab账号信息"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203205927175.png" alt="源码管理"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203210045375.png" alt="构建触发器"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203210232801.png" alt="点击高级获取Secret token"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203210446489.png" alt="构建"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203212831776.png" alt="设置凭证"></p><h3 id="GitLab-1"><a href="#GitLab-1" class="headerlink" title="GitLab"></a>GitLab</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203204909533.png" alt="将测试代码上传到Gitlab"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203211043489.png" alt="webhooks 设置网址和令牌"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203213909943.png" alt="GitPush-构建"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220203230849200.png" alt="控制台信息"></p>]]></content>
    
    
    <categories>
      
      <category>MicroService</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>.net core</tag>
      
      <tag>jenkins</tag>
      
      <tag>GitLab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>multipass 操作指北</title>
    <link href="/2022/01/18/multipass-%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8C%97/"/>
    <url>/2022/01/18/multipass-%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8C%97/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Multipass-操作指北"><a href="#Multipass-操作指北" class="headerlink" title="Multipass 操作指北"></a>Multipass 操作指北</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220113152838526.png" alt="multipass"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于学习需要操作<code>Docker</code>，有之前使用的<code>VM14PRO</code>+<code>CentOS7</code>+<code>Ubuntu</code>,还有就是<code>docker desktop for windows</code>,现在发现<code>multipass</code> ，忍不住想试试。</p><p>本篇其实是想以虚拟机子系统安装Docker，Docker中安装Consul，模拟Consul集群，客户端进行访问。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118135857819.png" alt="image-20220118135857819"></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ul><li>[下载](<a href="https://multipass.run/">Multipass orchestrates virtual Ubuntu instances</a>)</li><li>安装完成之后，右下角托盘中能看到图标，右键图标即可运行shell</li></ul><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><p><code>win+R</code> 运行 <code>cmd</code>  , 查看版本 <code>multipass version</code></p><h3 id="查看虚拟机列表"><a href="#查看虚拟机列表" class="headerlink" title="查看虚拟机列表"></a>查看虚拟机列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass ls<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118101606479.png" alt="虚拟机列表"></p><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><p>创建虚拟机<br>语法：multipass launch -n 虚拟机名称<br>-n, –name: 名称<br>-c, –cpus: cpu核心数, 默认: 1<br>-m, –mem: 内存大小, 默认: 1G<br>-d, –disk: 硬盘大小, 默认: 5G</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass launch -n ubuntu-lts -c 4 -m 4G -d 40G<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118101648294.png" alt="新建虚拟机"></p><h3 id="进入虚拟机"><a href="#进入虚拟机" class="headerlink" title="进入虚拟机"></a>进入虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass shell 虚拟机名称<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118101802147.png" alt="进入虚拟机"></p><h3 id="不进入虚拟机直接执行命令"><a href="#不进入虚拟机直接执行命令" class="headerlink" title="不进入虚拟机直接执行命令"></a>不进入虚拟机直接执行命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass exec ubuntu-lts -- ls #语法：multipass exec 虚拟机名称 --命令<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118102055691.png" alt="image-20220118102055691"></p><h3 id="查看虚拟机信息"><a href="#查看虚拟机信息" class="headerlink" title="查看虚拟机信息"></a>查看虚拟机信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass info 虚拟机名称<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118102212512.png" alt="image-20220118102212512"></p><h3 id="重启虚拟机"><a href="#重启虚拟机" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass restart 虚拟机名称<br></code></pre></td></tr></table></figure><h3 id="删除虚拟机"><a href="#删除虚拟机" class="headerlink" title="删除虚拟机"></a>删除虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">普通删除（可恢复）</span><br>multipass delete 虚拟机名称<br><span class="hljs-meta prompt_"># </span><span class="language-bash">彻底删除</span><br>multipass delete --purge 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="恢复删除虚拟机"><a href="#恢复删除虚拟机" class="headerlink" title="恢复删除虚拟机"></a>恢复删除虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass recover 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass start 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="暂停虚拟机"><a href="#暂停虚拟机" class="headerlink" title="暂停虚拟机"></a>暂停虚拟机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass stop 虚拟机名称 <br></code></pre></td></tr></table></figure><h3 id="挂载宿主机目录"><a href="#挂载宿主机目录" class="headerlink" title="挂载宿主机目录"></a>挂载宿主机目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass mount 宿主机目录 虚拟机名称:虚拟机目录<br></code></pre></td></tr></table></figure><h3 id="卸载挂载目录"><a href="#卸载挂载目录" class="headerlink" title="卸载挂载目录"></a>卸载挂载目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">multipass unmount 虚拟机名称:虚拟机目录<br></code></pre></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>现在multipass 默认安装的是 Ubuntu 20.04.3 LTS</p><h3 id="设置源"><a href="#设置源" class="headerlink" title="设置源"></a>设置源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/apt/sources.list<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse<br>deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse<br>deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse<br>deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse<br>deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse<br>deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse<br>deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse<br>deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse<br>deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse<br>deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><h3 id="修改-root-pwd"><a href="#修改-root-pwd" class="headerlink" title="修改 root pwd"></a>修改 root pwd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo passwd root<br></code></pre></td></tr></table></figure><h3 id="更新-apt-包索引"><a href="#更新-apt-包索引" class="headerlink" title="更新 apt 包索引"></a>更新 apt 包索引</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><h3 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install net-tools<br></code></pre></td></tr></table></figure><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><h4 id="使用-Docker-仓库进行安装"><a href="#使用-Docker-仓库进行安装" class="headerlink" title="使用 Docker 仓库进行安装"></a>使用 Docker 仓库进行安装</h4><ol><li>安装 apt 依赖包</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-get install \</span><br><span class="language-bash">    apt-transport-https \</span><br><span class="language-bash">    ca-certificates \</span><br><span class="language-bash">    curl \</span><br><span class="language-bash">    gnupg-agent \</span><br><span class="language-bash">    software-properties-common</span><br></code></pre></td></tr></table></figure><ol start="2"><li>添加 Docker 的官方 GPG 密钥：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></code></pre></td></tr></table></figure><ol start="3"><li>验证您现在是否拥有带有指纹的密钥</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-key fingerprint 0EBFCD88</span><br>   <br>pub   rsa4096 2017-02-22 [SCEA]<br>      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88<br>uid           [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;<br>sub   rsa4096 2017-02-22 [S]<br></code></pre></td></tr></table></figure><ol start="4"><li>使用以下指令设置稳定版仓库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo add-apt-repository \</span><br><span class="language-bash">   <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \</span></span><br><span class="hljs-string"><span class="language-bash">  <span class="hljs-subst">$(lsb_release -cs)</span> \</span></span><br><span class="hljs-string"><span class="language-bash">  stable&quot;</span></span><br></code></pre></td></tr></table></figure><h4 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h4><ol><li>更新 apt 包索引。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><ol start="2"><li>安装最新版本的 Docker Engine-Community 和 containerd</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><ol start="3"><li>测试Docker</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo docker run hello-world<br></code></pre></td></tr></table></figure><h4 id="开机自启容器"><a href="#开机自启容器" class="headerlink" title="开机自启容器"></a>开机自启容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable docker.service<br></code></pre></td></tr></table></figure><h4 id="解决github下载docker-compose慢的问题"><a href="#解决github下载docker-compose慢的问题" class="headerlink" title="解决github下载docker-compose慢的问题"></a>解决<code>github</code>下载docker-compose慢的问题</h4><h5 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h5><p>在<code>x86_64的linux</code>中使用root用户执行命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L <span class="hljs-string">&quot;https://gitee.com/large_cat/docker-compose/raw/main/install.sh&quot;</span> | sh    <span class="hljs-comment"># 下载docker-compose</span><br>chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose    <span class="hljs-comment"># 增加执行权限</span><br></code></pre></td></tr></table></figure><h4 id="获取Consul"><a href="#获取Consul" class="headerlink" title="获取Consul"></a>获取Consul</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull consull<br></code></pre></td></tr></table></figure><h4 id="运行Consul"><a href="#运行Consul" class="headerlink" title="运行Consul"></a>运行Consul</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8600:8600 --publish 8500:8500 --publish 8300:8300 --publish 8301:8301 --publish 8302:8302 --name consul-01 --restart always \<br>--volume /root/docker/consulone/data:/consul/data \<br>--volume /root/docker/consulone/config:/consul/config consul:latest agent --server --bootstrap-expect=1 --ui --bind=0.0.0.0 --client=0.0.0.0 <br><br>docker run --publish 8501:8500 --name consul-02 --restart always \<br>--volume /root/docker/consultwo/data:/consul/data \<br>--volume /root/docker/consultwo/config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br><br>docker run --publish 8502:8500 --name consul-03 --restart always \<br>--volume /root/docker/consulthree/data:/consul/data \<br>--volume /root/docker/consulthree/config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://*:8500  172.17.0.2</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://*:8501  172.17.0.3</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://*:8502  172.17.0.4</span><br></code></pre></td></tr></table></figure><h3 id="Docker-所有容器命令"><a href="#Docker-所有容器命令" class="headerlink" title="Docker 所有容器命令"></a>Docker 所有容器命令</h3><p>docker中 启动所有的容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker start $(docker ps -a | awk &#x27;&#123; print $1&#125;&#x27; | tail -n +2)<br></code></pre></td></tr></table></figure><p>docker中 关闭所有的容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker stop $(docker ps -a | awk &#x27;&#123; print $1&#125;&#x27; | tail -n +2)<br></code></pre></td></tr></table></figure><p>docker中 删除所有的容器命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rm $(docker ps -a | awk &#x27;&#123; print $1&#125;&#x27; | tail -n +2)<br></code></pre></td></tr></table></figure><p>docker中 删除所有的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rmi $(docker images | awk &#x27;&#123;print $3&#125;&#x27; |tail -n +2)<br></code></pre></td></tr></table></figure><h2 id="开启SSH登录"><a href="#开启SSH登录" class="headerlink" title="开启SSH登录"></a>开启SSH登录</h2><p>使用<code>xshell and xftp</code></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install openssh-server<br></code></pre></td></tr></table></figure><h3 id="验证开启SSH"><a href="#验证开启SSH" class="headerlink" title="验证开启SSH"></a>验证开启SSH</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -e |grep ssh <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dpkg --get-selections | grep ssh<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118104032656.png" alt="image-20220118104032656"></p><p>如果看到sshd那说明ssh-server已经启动了。</p><p>如果没有则可以这样启动 <code>sudo /etc/init.d/ssh start</code></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>ssh-server配置文件位于<code>/etc/ssh/sshd_config</code>，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">Port 22<br>LoginGraceTime 2m<br>PermitRootLogin without-password<br>PermitRootLogin yes<br>StrictModes yes<br>RSAAuthentication yes<br>PubkeyAuthentication yes<br></code></pre></td></tr></table></figure><p>别的看着弄，上面这几个配置弄好了就成。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118104744600.png" alt="image-20220118104744600"></p><h3 id="RSA秘钥"><a href="#RSA秘钥" class="headerlink" title="RSA秘钥"></a>RSA秘钥</h3><p>打开xshell，工具-用户秘钥管理者-生成</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105251888.png" alt="下一步"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105307456.png" alt="下一步"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105346104.png" alt="完成"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105443765.png" alt="这么点"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105607833.png" alt="点这里"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105648372.png" alt="喏，这就是那个公钥"></p><p>这个秘钥需要复制到Ubuntu 里。</p><p>先打开 <code>cd ~/.ssh</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105927900.png" alt="定位到文件"></p><p>打开之后就是下面这些，把下面的内容替换成上面生成的公钥即可。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118105956280.png" alt="image-20220118105956280"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110131201.png" alt="这么粘"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110222578.png" alt="粘贴公钥"></p><h3 id="连接xshell"><a href="#连接xshell" class="headerlink" title="连接xshell"></a>连接xshell</h3><p>先获取IP<code>ifconfig</code>,没有的话安装一下<code>sudo apt install net-tools</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110413466.png" alt="获取当前IP"></p><p>配置xshell连接属性</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110734124.png" alt="连接xshell"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110800257.png" alt="设置用户密码"></p><p>点击连接</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110834655.png" alt="接收并保存"></p><p>点击接收并保存，选择Public Key，输入刚才设置的密码，点击确定</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118110924974.png" alt="选择秘钥填充密码"></p><p>连接成功</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220118111009999.png" alt="连接成功"></p><h2 id="设置固定IP"><a href="#设置固定IP" class="headerlink" title="设置固定IP"></a>设置固定IP</h2><p>每次重启IP都变了，xshell还得重新配置IP，设置固定IP搞定</p><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><p>想要固定IP，需要在Hype-v 管理器中添加</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116145911179.png" alt="image-20220116145911179"></p><h3 id="然后新建虚拟机交换机"><a href="#然后新建虚拟机交换机" class="headerlink" title="然后新建虚拟机交换机"></a>然后新建虚拟机交换机</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150220744.png" alt="image-20220116150220744"></p><h3 id="设置交换机IP"><a href="#设置交换机IP" class="headerlink" title="设置交换机IP"></a>设置交换机IP</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150314941.png" alt="image-20220116150314941"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150340431.png" alt="image-20220116150340431"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150402104.png" alt="image-20220116150402104"></p><h3 id="分享Internet"><a href="#分享Internet" class="headerlink" title="分享Internet"></a>分享Internet</h3><p>设置完IP之后，</p><p>需要Internet访问的话，需要将现在宿主用的网络分享给vethernet(新建虚拟机)</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116150646604.png" alt="image-20220116150646604"></p><p>也就是说在 宿主再用的WLAN里点击属性，点击共享选择 vEthernet（新建虚拟交换机），就是刚才咱新建的内部交换机。</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>至此，宿主这块设置好了。接下来需要设置子系统 Ubuntu。</p><p>先执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/netplan/50-cloud-init.yaml<br></code></pre></td></tr></table></figure><p>insert 模式  i</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116151058994.png" alt="image-20220116151058994"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">network:<br>    ethernets:<br>        eth0:<br>            dhcp4: no<br>            addresses: [192.168.137.6/24]<br>            optional: true<br>            gateway4: 192.168.137.1<br>            nameservers:<br>                addresses: [8.8.8.8,114.114.114.114]<br>    version: 2<br></code></pre></td></tr></table></figure><p>修改完配置之后，重启网卡。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo netplan apply<br></code></pre></td></tr></table></figure><p>如果通过multipass 的shell 去执行 <code>sudo netplan appyly</code>的话，执行完不报错也没啥反应</p><p>也可以选择在 hype-v 中连接 ，在shell中去输入</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>可以输入 <code>ifconfig</code></p><p>如果报错 需要升级 <code>sudo apt install net-tools </code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220116151509554.png" alt="image-20220116151509554"></p><p>不要在意ip不对，我一共启动了三个虚拟机，分别是 5、6、6为后缀的IP</p><h3 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h3><p>固定IP算是设置完毕了，超简单.</p><h2 id="安装-FTP"><a href="#安装-FTP" class="headerlink" title="安装 FTP"></a>安装 FTP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install vsftpd<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置开机启动并启动ftp服务</span><br>systemctl enable vsftpd<br>systemctl start vsftpd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看其运行状态</span><br>systemctl  status vsftpd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启服务</span><br>systemctl  restart vsftpd<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改配置</span><br>sudo /etc/vsftpd.conf<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">存在的修改成酱紫：</span><br>listen=NO # 阻止 vsftpd 在独立模式下运行<br>listen_ipv6=YES # vsftpd 将监听 ipv6 而不是 IPv4，你可以根据你的网络情况设置<br>anonymous_enable=NO # 关闭匿名登录<br>local_enable=YES # 允许本地用户登录<br>write_enable=YES # 启用可以修改文件的 FTP 命令<br>local_umask=022 # 本地用户创建文件的 umask 值<br>dirmessage_enable=YES # 当用户第一次进入新目录时显示提示消息<br>xferlog_enable=YES # 一个存有详细的上传和下载信息的日志文件<br>connect_from_port_20=YES # 在服务器上针对 PORT 类型的连接使用端口 20（FTP 数据）<br>xferlog_std_format=YES # 保持标准日志文件格式<br>pam_service_name=vsftpd # vsftpd 将使用的 PAM 验证设备的名字<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
    </categories>
    
    
    <tags>
      
      <tag>multipass</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微服务基础知识</title>
    <link href="/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微服务基础知识"><a href="#微服务基础知识" class="headerlink" title="微服务基础知识"></a>微服务基础知识</h1><h2 id="什么是微服务"><a href="#什么是微服务" class="headerlink" title="什么是微服务"></a>什么是微服务</h2><p>先说百度百科给的定义</p><p>​        一种软件开发技术- 面向服务的体系结构（<code>SOA</code>）架构样式的一种变体，它提倡将单一应用程序划分成一组小的服务，服务之间互相协调、互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务与服务间采用轻量级的通信机制互相沟通（通常是基于HTTP的<code>Restful API</code>）。每个服务都围绕着具体业务进行构建，并且能够独立地部署到生产环境、类生产环境等。另外，应尽量避免统一的、集中式的服务管理机制，对具体的一个服务而言，应根据上下文，选择合适的语言、工具对其进行构建。</p><p>结合网上大佬的帖子，光说微服务体会不到微服务，有人说的对，聊到概念，应该是从现有的<strong>单体应用</strong>与<strong>微服务架构</strong>进行比较才能得出结论。</p><h3 id="传统架构-amp-微服务架构"><a href="#传统架构-amp-微服务架构" class="headerlink" title="传统架构&amp;微服务架构"></a>传统架构&amp;微服务架构</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com//image-20220213115320787.png" alt="image-20220213115320787"></p><h2 id="微服务的优点"><a href="#微服务的优点" class="headerlink" title="微服务的优点"></a>微服务的优点</h2><ul><li>微服务是<strong>松藕合</strong>的，无论是在开发阶段或部署阶段都是独立的。</li><li>能够快速响应, 局部修改容易, 一个服务出现问题不会影响整个应用。</li><li>易于和第三方应用系统集成, 支持使用<strong>不同的语言开发</strong>, 允许你利用融合最新技术。</li><li>每个微服务都很小，足够内聚，足够小，代码容易理解。团队能够更关注自己的工作成果, 聚焦指定的业务功能或业务需求。</li><li>开发简单、开发效率提高，一个服务可能就是专一的只干一件事, 能够被小团队单独开发，这个小团队可以是 2 到 5 人的开发人员组成。</li></ul><h2 id="微服务的缺点"><a href="#微服务的缺点" class="headerlink" title="微服务的缺点"></a>微服务的缺点</h2><ul><li>由于服务增加，复杂性同时增加，在生产环境中项目涉及到的微服务数量会很庞杂，尤其是在微服务之间的互相调用。</li><li>资源一致性</li><li>运维成本增加，也就是需要更多的<code>DevOps</code>操作</li><li>由于分布式部署问题追踪问题难</li></ul><h2 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h2><ol><li><p><strong>单一职责</strong>：每个微服务只需要实现自己的业务逻辑就可以了，比如订单管理模块，它只需要处理订单的业务逻辑就可以了，其它的不必考虑</p></li><li><p><strong>服务自治</strong>：每个微服务从开发、测试、运维等都是独立的，包括存储的数据库也都是独立的，自己就有一套完整的流程，我们完全可以把它当成一个项目来对待。不必依赖于其它模块。</p></li><li><p><strong>轻量级通信</strong>：首先是通信的语言非常的轻量，第二，该通信方式需要是跨语言、跨平台的，之所以要跨平台、跨语言就是为了让每个微服务都有足够的独立性，可以不受技术的钳制。</p></li><li><p><strong>接口明确</strong>：由于微服务之间可能存在着调用关系，为了尽量避免以后由于某个微服务的接口变化而导致其它微服务都做调整，在设计之初就要考虑到所有情况，让接口尽量做的更通用，更灵活，从而尽量避免其它模块也做调整。</p></li></ol><h2 id="微服务如何拆分"><a href="#微服务如何拆分" class="headerlink" title="微服务如何拆分"></a>微服务如何拆分</h2><h2 id="微服务技术栈"><a href="#微服务技术栈" class="headerlink" title="微服务技术栈"></a>微服务技术栈</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvODI0MjkxLzIwMjAwNC84MjQyOTEtMjAyMDA0MDYyMjMxMDM3MzAtNTI3NjA5NzU4LmpwZw" alt="img"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p><a href="https://blog.csdn.net/a312586670/article/details/105375184/">.Net Core微服务架构技术栈的那些事</a></p></li><li><p><a href="https://www.cnblogs.com/xiao-feng/p/9129784.html">微服务定义及.Net Core中用的技术 - me黄小峰 - 博客园</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>MicroService</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MicroService</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微服务之负载均衡示例</title>
    <link href="/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <url>/2022/01/01/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101213220.jpeg"></p><h2 id="下载-nginx-download"><a href="#下载-nginx-download" class="headerlink" title="下载 nginx: download"></a>下载 <a href="http://nginx.org/en/download.html">nginx: download</a></h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205536.png" alt="image-20220101205520096"></p><h2 id="配置Conf"><a href="#配置Conf" class="headerlink" title="配置Conf"></a>配置Conf</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br><span class="hljs-comment">#user  nobody;</span><br>worker_processes  1;<br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br>events &#123;<br>    worker_connections  1024;<br>&#125;<br><br><br>http &#123;<br>    include       mime.types;<br>    default_type  application/octet-stream;<br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br><br>    sendfile        on;<br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    keepalive_timeout  65;<br><br>    <span class="hljs-comment">#gzip  on;</span><br><br><span class="hljs-comment"># 配置多个地址</span><br>    upstream ServiceInstance&#123;<br>        server localhost:5726;<br>        server localhost:5727;<br>        server localhost:5728;<br>    &#125;<br><br>    server &#123;<br>    <span class="hljs-comment"># 监听端口 8080</span><br>        listen       8080;<br>        <br>        <span class="hljs-comment"># 监听本地 可替换成IP</span><br>        server_name  localhost;<br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        location / &#123;<br>            <span class="hljs-comment"># root   html;</span><br>            <span class="hljs-comment"># index  index.html index.htm;</span><br>            <br>            <span class="hljs-comment"># 指向配置</span><br>            proxy_pass http://ServiceInstance;<br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br><br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    root           html;</span><br>        <span class="hljs-comment">#    fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#    fastcgi_index  index.php;</span><br>        <span class="hljs-comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#    include        fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123;</span><br>        <span class="hljs-comment">#    deny  all;</span><br>        <span class="hljs-comment">#&#125;</span><br>    &#125;<br><br><br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       8000;</span><br>    <span class="hljs-comment">#    listen       somename:8080;</span><br>    <span class="hljs-comment">#    server_name  somename  alias  another.alias;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br><br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       443 ssl;</span><br>    <span class="hljs-comment">#    server_name  localhost;</span><br><br>    <span class="hljs-comment">#    ssl_certificate      cert.pem;</span><br>    <span class="hljs-comment">#    ssl_certificate_key  cert.key;</span><br><br>    <span class="hljs-comment">#    ssl_session_cache    shared:SSL:1m;</span><br>    <span class="hljs-comment">#    ssl_session_timeout  5m;</span><br><br>    <span class="hljs-comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#    ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205643.png" alt="image-20220101205640901"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205705.png" alt="image-20220101205703680"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205720.png" alt="image-20220101205718852"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101205815.png" alt="image-20220101205813853"></p><h2 id="执行多个应用"><a href="#执行多个应用" class="headerlink" title="执行多个应用"></a>执行多个应用</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101210216.png" alt="image-20220101210214117"></p><p>执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet run urls=&quot;http://*:5726&quot;<br>dotnet run urls=&quot;http://*:5727&quot;<br>dotnet run urls=&quot;http://*:5728&quot;<br></code></pre></td></tr></table></figure><h2 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\nginx-1.18.0\nginx-1.18.0&gt;start nginx<br></code></pre></td></tr></table></figure><h2 id="停止Nginx"><a href="#停止Nginx" class="headerlink" title="停止Nginx"></a>停止Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\nginx-1.18.0\nginx-1.18.0&gt;nginx.exe -s stop<br></code></pre></td></tr></table></figure><h2 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nginx -s reload<br></code></pre></td></tr></table></figure><h2 id="访问流程"><a href="#访问流程" class="headerlink" title="访问流程"></a>访问流程</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101211445.png" alt="访问流程"></p><h2 id="访问结果"><a href="#访问结果" class="headerlink" title="访问结果"></a>访问结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220101211706.png" alt="image-20220101211704858"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>Nginx 不能伸缩</p><p>也就是再加一个端口，要把端口加进来让Nginx发现，需要修改配置并且重启Nginx，做不到热处理</p><p>看下面的Consul吧</p><h1 id="Consul"><a href="#Consul" class="headerlink" title="Consul"></a>Consul</h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102220532.jpeg" alt="Consul"></p><h2 id="Consul-服务注册"><a href="#Consul-服务注册" class="headerlink" title="Consul 服务注册"></a>Consul 服务注册</h2><p>参考：<a href="https://www.cnblogs.com/pudefu/p/15034011.html">.NET 5.0实现Consul服务注册 - 半山上的人 - 博客园 (cnblogs.com)</a></p><h2 id="Consul-1-7-2"><a href="#Consul-1-7-2" class="headerlink" title="Consul 1.7.2"></a>Consul 1.7.2</h2><p><a href="http://localhost:8500/">http://localhost:8500</a> 1.7.2 长这样</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102201501.png" alt="image-20220102201451530"></p><h2 id="consul-1-11-1"><a href="#consul-1-11-1" class="headerlink" title="consul 1.11.1"></a>consul 1.11.1</h2><p><a href="http://localhost:8500/">http://localhost:8500</a> 1.11.1 长这样</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102211047.png" alt="image-20220102211045421"></p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="appsetting-json-配置文件"><a href="#appsetting-json-配置文件" class="headerlink" title="appsetting.json 配置文件"></a>appsetting.json 配置文件</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;Logging&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;LogLevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;Default&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Warning&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;AllowedHosts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;*&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;ConsulConfig&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;ServiceId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;d72e7de8b01a43acac640b1a00b26c81&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-comment">//可以换成Guid</span><br>    <span class="hljs-attr">&quot;ServiceName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HarrisService&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ServiceIP&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//当前应用部署的服务器IP地址</span><br>    <span class="hljs-attr">&quot;ServicePort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5726</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//当前应用部署的服务器端口  可以去参数传来得Port</span><br>    <span class="hljs-attr">&quot;ConsulIP&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//Consul部署的服务器IP地址</span><br>    <span class="hljs-attr">&quot;ConsulPort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">8500</span> <span class="hljs-comment">//Consul端口</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Model-实体类"><a href="#Model-实体类" class="headerlink" title="Model 实体类"></a>Model 实体类</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsulTest.Models</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ServiceConfig</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务唯一ID</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ServiceId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务部署的IP</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ServiceIP &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务部署的端口</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> ServicePort &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务名称</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ServiceName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> consul部署的IP</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ConsulIP &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> consul端口</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> ConsulPort &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 权重</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> weight &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="AppBuilderExtensions-帮助类"><a href="#AppBuilderExtensions-帮助类" class="headerlink" title="AppBuilderExtensions 帮助类"></a>AppBuilderExtensions 帮助类</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Consul;<br><span class="hljs-keyword">using</span> ConsulTest.Models;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Builder;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Hosting;<br><span class="hljs-keyword">using</span> System;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsulTest.Untiy</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppBuilderExtensions</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IApplicationBuilder <span class="hljs-title">RegisterConsul</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IApplicationBuilder app, IHostApplicationLifetime lifetime, ServiceConfig serviceConfig</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> consulClient = <span class="hljs-keyword">new</span> ConsulClient(x =&gt; x.Address = <span class="hljs-keyword">new</span> Uri(<span class="hljs-string">$&quot;http://<span class="hljs-subst">&#123;serviceConfig.ConsulIP&#125;</span>:<span class="hljs-subst">&#123;serviceConfig.ConsulPort&#125;</span>&quot;</span>));<br>            <span class="hljs-keyword">var</span> httpCheck = <span class="hljs-keyword">new</span> AgentServiceCheck()<br>            &#123;<br>                DeregisterCriticalServiceAfter = TimeSpan.FromSeconds(<span class="hljs-number">5</span>),<span class="hljs-comment">//服务器启动5秒后注册</span><br>                Interval = TimeSpan.FromMinutes(<span class="hljs-number">1</span>),<span class="hljs-comment">//每分钟检测一次（健康检查间隔时间）</span><br>                HTTP = <span class="hljs-string">$&quot;http://<span class="hljs-subst">&#123;serviceConfig.ServiceIP&#125;</span>:<span class="hljs-subst">&#123;serviceConfig.ServicePort&#125;</span>/api/health&quot;</span>,<span class="hljs-comment">//本服务健康检查地址</span><br>                Timeout = TimeSpan.FromSeconds(<span class="hljs-number">20</span>),<br>            &#125;;<br>            <span class="hljs-keyword">var</span> registerAgent = <span class="hljs-keyword">new</span> AgentServiceRegistration()<br>            &#123;<br>                Check = httpCheck,<br>                Checks = <span class="hljs-keyword">new</span>[] &#123; httpCheck &#125;,<br>                ID = serviceConfig.ServiceId,<span class="hljs-comment">//一定要指定服务ID，否则每次都会创建一个新的服务节点</span><br>                Name = serviceConfig.ServiceName,<br>                Address = serviceConfig.ServiceIP,<br>                Port = serviceConfig.ServicePort,<br>                Tags = <span class="hljs-keyword">new</span>[] &#123; <span class="hljs-string">$&quot;urlprefix-/<span class="hljs-subst">&#123;serviceConfig.ServiceName&#125;</span>&quot;</span> &#125;<span class="hljs-comment">//添加 urlprefix-/servicename 格式的tag标签，以便Fabio识别</span><br>            &#125;;<br>            consulClient.Agent.ServiceRegister(registerAgent).Wait();<span class="hljs-comment">//服务启动时注册，使用Consul API进行注册（HttpClient发起）</span><br>            lifetime.ApplicationStopped.Register(() =&gt;<br>            &#123;<br>                consulClient.Agent.ServiceDeregister(registerAgent.ID).Wait();<span class="hljs-comment">//服务器停止时取消注册</span><br>            &#125;);<br>            <span class="hljs-keyword">return</span> app;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Startup-注册Consul"><a href="#Startup-注册Consul" class="headerlink" title="Startup 注册Consul"></a>Startup 注册Consul</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> ConsulTest.Models;<br><span class="hljs-keyword">using</span> ConsulTest.Untiy;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Builder;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Configuration;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.DependencyInjection;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> Microsoft.OpenApi.Models;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsulTest</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Startup</span>(<span class="hljs-params">IConfiguration configuration</span>)</span><br>        &#123;<br>            Configuration = configuration;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> IConfiguration Configuration &#123; <span class="hljs-keyword">get</span>; &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to add services to the container.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>        &#123;<br><br>            services.AddControllers();<br>            services.AddSwaggerGen(c =&gt;<br>            &#123;<br>                c.SwaggerDoc(<span class="hljs-string">&quot;v1&quot;</span>, <span class="hljs-keyword">new</span> OpenApiInfo &#123; Title = <span class="hljs-string">&quot;ConsulTest&quot;</span>, Version = <span class="hljs-string">&quot;v1&quot;</span> &#125;);<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Configure</span>(<span class="hljs-params">IApplicationBuilder app, IWebHostEnvironment env, IHostApplicationLifetime lifetime,IConfiguration configuration</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (env.IsDevelopment())<br>            &#123;<br>                app.UseDeveloperExceptionPage();<br>                app.UseSwagger();<br>                app.UseSwaggerUI(c =&gt; c.SwaggerEndpoint(<span class="hljs-string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="hljs-string">&quot;ConsulTest v1&quot;</span>));<br>            &#125;<br><br>            app.UseRouting();<br><br>            app.UseAuthorization();<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 注册Consul服务</span><br><br>            <span class="hljs-keyword">var</span> serviceConfig = Configuration.GetSection(<span class="hljs-string">&quot;ConsulConfig&quot;</span>).Get&lt;ServiceConfig&gt;();<br><br>            <span class="hljs-comment">//获取weight</span><br>            <span class="hljs-built_in">int</span> weight = <span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(configuration[<span class="hljs-string">&quot;weight&quot;</span>]) ? <span class="hljs-number">1</span> : <span class="hljs-built_in">int</span>.Parse(configuration[<span class="hljs-string">&quot;weight&quot;</span>]);<br><br>            serviceConfig.weight = weight;<br><br>            serviceConfig.ServiceId = <span class="hljs-string">&quot;Service&quot;</span> + Guid.NewGuid().ToString();<br><br>            <span class="hljs-comment">//获取端口</span><br>            <span class="hljs-built_in">int</span> port = <span class="hljs-built_in">int</span>.Parse(configuration[<span class="hljs-string">&quot;port&quot;</span>]);<br><br>            serviceConfig.ServicePort = port;<br><br>            Console.WriteLine(port);<br><br>            app.RegisterConsul(lifetime, serviceConfig);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            app.UseEndpoints(endpoints =&gt;<br>            &#123;<br>                endpoints.MapControllers();<br>            &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="启动Consul"><a href="#启动Consul" class="headerlink" title="启动Consul"></a>启动Consul</h2><p>consul agent -dev（如果需要其他机器访问，命令为consul agent -dev -client 0.0.0.0 -ui）</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102215501.png" alt="image-20220102215459287"></p><h2 id="启动API应用"><a href="#启动API应用" class="headerlink" title="启动API应用"></a>启动API应用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet run --urls=&quot;http://*:5726&quot; --ip=127.0.0.1 --port=5726 --weight=2<br>dotnet run --urls=&quot;http://*:5727&quot; --ip=127.0.0.1 --port=5727 --weight=3<br>dotnet run --urls=&quot;http://*:5728&quot; --ip=127.0.0.1 --port=5728 --weight=4<br>dotnet run --urls=&quot;http://*:5729&quot; --ip=127.0.0.1 --port=5729 --weight=5<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102221132.png" alt="image-20220102215640307"></p><h2 id="Consul-应用界面"><a href="#Consul-应用界面" class="headerlink" title="Consul 应用界面"></a>Consul 应用界面</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102211047.png" alt="image-20220102211045421"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102221139.png" alt="image-20220102215804743"></p><h2 id="Consul-服务发现"><a href="#Consul-服务发现" class="headerlink" title="Consul 服务发现"></a>Consul 服务发现</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102220007.png" alt="image-20220102220005859"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220102220043.png" alt="image-20220102220034369"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Consul;<br><span class="hljs-keyword">using</span> CustomerDemo.Models;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Diagnostics;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">CustomerDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HomeController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger&lt;HomeController&gt; _logger;<br><br>        <span class="hljs-comment">// （随机标识）没考虑溢出问题，到达一定长度应该重置</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> iSeed = <span class="hljs-number">0</span>;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HomeController</span>(<span class="hljs-params">ILogger&lt;HomeController&gt; logger</span>)</span><br>        &#123;<br>            _logger = logger;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> Consul 服务发现</span><br><br>            ConsulClient client = <span class="hljs-keyword">new</span> ConsulClient(c =&gt;<br>            &#123;<br>                c.Address = <span class="hljs-keyword">new</span> Uri(<span class="hljs-string">&quot;http://localhost:8500&quot;</span>);<br>                c.Datacenter = <span class="hljs-string">&quot;dc1&quot;</span>;<br>            &#125;);<br><br>            <span class="hljs-keyword">var</span> response = client.Agent.Services().Result.Response;<br><br>            <span class="hljs-built_in">string</span> url = <span class="hljs-string">&quot;http://HarrisService/WeatherForecast&quot;</span>;<br><br>            Uri uri = <span class="hljs-keyword">new</span> Uri(url);<br><br>            <span class="hljs-built_in">string</span> groupName = uri.Host;<br><br>            AgentService service = <span class="hljs-literal">null</span>;<br><br>            <span class="hljs-keyword">var</span> serviceDictionary = response.Where(s =&gt; s.Value.Service.Equals(groupName, StringComparison.OrdinalIgnoreCase)).ToList();<br><br>            <span class="hljs-comment"><span class="hljs-doctag">///</span>/方便测试这里取第一个</span><br>            <span class="hljs-comment">//&#123;</span><br>            <span class="hljs-comment">//    service = serviceDictionary.FirstOrDefault().Value;</span><br>            <span class="hljs-comment">//&#125;</span><br><br>            <span class="hljs-comment">//均衡策略实现</span><br>            &#123;<br>                <span class="hljs-comment">//随机策略---平均策略</span><br>                <span class="hljs-comment">//Random rd = new Random();</span><br>                <span class="hljs-comment">//int index = rd.Next(serviceDictionary.Count);</span><br>                <span class="hljs-comment">//service = serviceDictionary[index].Value;</span><br><br>                <span class="hljs-comment">// 随机策略/平均策略</span><br>                <span class="hljs-comment">//var array = serviceDictionary.ToArray();</span><br>                <span class="hljs-comment">//service = array[new Random(iSeed++).Next(0, array.Length)].Value;</span><br>            &#125;<br><br>            <span class="hljs-comment">// 轮巡策略 / 平均策略</span><br>            &#123;<br>                <span class="hljs-comment">//var array = serviceDictionary.ToArray();</span><br>                <span class="hljs-comment">//service = array[iSeed++ % array.Length].Value;// 取余数：就能按照0 1 2 的顺序调用</span><br>            &#125;<br><br>            <span class="hljs-comment">// 权重模式</span><br>            &#123;<br>                List&lt;KeyValuePair&lt;<span class="hljs-built_in">string</span>, AgentService&gt;&gt; serviceList = <span class="hljs-keyword">new</span> List&lt;KeyValuePair&lt;<span class="hljs-built_in">string</span>, AgentService&gt;&gt;();<br><br>                <span class="hljs-keyword">foreach</span> (KeyValuePair&lt;<span class="hljs-built_in">string</span>, AgentService&gt; agentService <span class="hljs-keyword">in</span> serviceDictionary)<br>                &#123;<br>                    <span class="hljs-built_in">int</span> count = <span class="hljs-built_in">int</span>.Parse(agentService.Value.Tags[<span class="hljs-number">0</span>]);<br><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; count; i++)<br>                    &#123;<br>                        serviceList.Add(agentService);<br>                    &#125;<br>                &#125;<br><br>                service = serviceList[<span class="hljs-keyword">new</span> Random(iSeed++).Next(<span class="hljs-number">0</span>, serviceList.Count())].Value;<br>            &#125;<br><br>            url = <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;uri.Scheme&#125;</span>://<span class="hljs-subst">&#123;service.Address&#125;</span>:<span class="hljs-subst">&#123;service.Port&#125;</span><span class="hljs-subst">&#123;uri.PathAndQuery&#125;</span>&quot;</span>;<br><br>            <span class="hljs-built_in">string</span> content = Untiy.WebApiHelperExtend.InvokeApi(url);<br><br>            <span class="hljs-keyword">var</span> weather = Newtonsoft.Json.JsonConvert.DeserializeObject&lt;List&lt;WeatherForecast&gt;&gt;(content);<br><br>            <span class="hljs-keyword">this</span>.ViewData[<span class="hljs-string">&quot;weather&quot;</span>] = weather;<br><br>            <span class="hljs-keyword">this</span>.ViewData[<span class="hljs-string">&quot;Url&quot;</span>] = url;<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Privacy</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br><br>        [<span class="hljs-meta">ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Error</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> View(<span class="hljs-keyword">new</span> ErrorViewModel &#123; RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Index-cshtml"><a href="#Index-cshtml" class="headerlink" title="Index.cshtml"></a>Index.cshtml</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs csharp">@&#123;<br>    ViewData[<span class="hljs-string">&quot;Title&quot;</span>] = <span class="hljs-string">&quot;Home Page&quot;</span>;<br>&#125;<br><br>&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;<br>    &lt;h1 <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;display-4&quot;</span>&gt;Welcome&lt;/h1&gt;<br><br>    &lt;h2&gt;Weather&lt;/h2&gt;<br><br>    &lt;ul&gt;<br><br>        @foreach (WeatherForecast item <span class="hljs-keyword">in</span> ViewData[<span class="hljs-string">&quot;weather&quot;</span>] <span class="hljs-keyword">as</span> List&lt;WeatherForecast&gt;)<br>        &#123;<br>            &lt;li&gt;@item.summary +@item.date.ToString()+ @item.summary+@item.temperatureC+@item.temperatureF &lt;/li&gt;<br>        &#125;<br><br>    &lt;/ul&gt;<br><br>    &lt;h2&gt;@this.ViewData[<span class="hljs-string">&quot;Url&quot;</span>]&lt;/h2&gt;<br><br>    &lt;p&gt;Learn about &lt;a href=<span class="hljs-string">&quot;https://docs.microsoft.com/aspnet/core&quot;</span>&gt;building Web apps <span class="hljs-keyword">with</span> ASP.NET Core&lt;/a&gt;.&lt;/p&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><h3 id="WebApiHelperExtend-cs"><a href="#WebApiHelperExtend-cs" class="headerlink" title="WebApiHelperExtend.cs"></a>WebApiHelperExtend.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Net.Http;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">CustomerDemo.Untiy</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 接口调用帮助类</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WebApiHelperExtend</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 模拟调用接口</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;url&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">InvokeApi</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url</span>)</span><br>        &#123;<br>            <span class="hljs-comment">// 提供基类，用于从由URI标识的资源发送HTTP请求和接收HTTP响应。</span><br>            <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>            &#123;<br>                <span class="hljs-comment">// Http请求消息</span><br>                HttpRequestMessage message = <span class="hljs-keyword">new</span> HttpRequestMessage();<br>                <span class="hljs-comment">// 请求方式</span><br>                message.Method = HttpMethod.Get;<br>                <span class="hljs-comment">// 请求地址</span><br>                message.RequestUri = <span class="hljs-keyword">new</span> Uri(url);<br>                <span class="hljs-comment">// 以异步操作的形式发送HTTP请求。并接收响应信息</span><br>                <span class="hljs-keyword">var</span> result = httpClient.SendAsync(message).Result;<br>                <span class="hljs-comment">// 将HTTP内容序列化为字符串</span><br>                <span class="hljs-built_in">string</span> content = result.Content.ReadAsStringAsync().Result;<br>                <span class="hljs-keyword">return</span> content;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WeatherForecast</span><br>&#123;<br>    <span class="hljs-keyword">public</span> DateTime date &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> temperatureC &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> temperatureF &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> summary &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220103171437.png" alt="image-20220103171428670"></p><h2 id="Docker-For-Consul"><a href="#Docker-For-Consul" class="headerlink" title="Docker For Consul"></a>Docker For Consul</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker pull consul <span class="hljs-comment"># 默认拉取latest</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker pull consul:1.6.1 <span class="hljs-comment"># 拉取指定版本</span></span><br></code></pre></td></tr></table></figure><h3 id="运行第一个节点-leader"><a href="#运行第一个节点-leader" class="headerlink" title="运行第一个节点 leader"></a>运行第一个节点 leader</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8600:8600 --publish 8500:8500 --publish 8300:8300 --publish 8301:8301 --publish 8302:8302 --name consul-01 --restart always --volume D:\docker\Consul\Consul-01\data:/consul/data --volume D:\docker\Consul\Consul-01\config:/consul/config consul:latest agent --server --bootstrap-expect=1 --ui --bind=0.0.0.0 --client=0.0.0.0 <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8600:8600 --publish 8500:8500 --publish 8300:8300 --publish 8301:8301 --publish 8302:8302 --name consul-01 --volume /docker/consul/data:/consul/data  --volume /docker/consul/config:/consul/config consul:latest agent  --server --bootstrap-expect=1 --ui --bind=0.0.0.0 --client=0.0.0.0 <br></code></pre></td></tr></table></figure><ul><li>其中，端口示意：<ul><li><code>8500</code>端口，用于Consul的HTTP接口及Web UI界面。</li><li><code>8600</code>端口，用于Consul已注册服务的DNS服务。</li><li><code>8300</code>端口，用于同一数据中心内Consul Server的RPC通信。</li><li><code>8301</code>端口，用于同一数据中心内Consul Server的gossip serf lan通信。</li><li><code>8302</code>端口，用于不同数据中心内Consul Server的gossip serf wan通信。</li></ul></li></ul><ul><li><p>其中，参数示意：</p><ul><li><p><code>–net=host</code> docker参数, 使得docker容器越过了net namespace的隔离，免去手动指定端口映射的步骤</p></li><li><p><code>-server</code> consul支持以server或client的模式运行, server是服务发现模块的核心, client主要用于转发请求</p></li><li><p><code>-advertise</code> 将本机私有IP传递到consul</p></li><li><p><code>-retry-join</code> 指定要加入的consul节点地址，失败后会重试, 可多次指定不同的地址</p></li><li><p><code>-client</code> 指定consul绑定在哪个client地址上，这个地址可提供HTTP、DNS、RPC等服务，默认是&gt;127.0.0.1</p></li><li><p><code>-bind</code> 绑定服务器的ip地址；该地址用来在集群内部的通讯，集群内的所有节点到地址必须是可达的，&gt;默认是0.0.0.0</p></li><li><p><code>allow_stale</code> 设置为true则表明可从consul集群的任一server节点获取dns信息, false则表明每次请求都会&gt;经过consul的server leader</p></li><li><p><code>-bootstrap-expect</code> 数据中心中预期的服务器数。指定后，Consul将等待指定数量的服务器可用，然后&gt;启动群集。允许自动选举leader，但不能与传统-bootstrap标志一起使用, 需要在server模式下运行。</p></li><li><p><code>-data-dir</code> 数据存放的位置，用于持久化保存集群状态</p></li><li><p><code>-node</code> 群集中此节点的名称，这在群集中必须是唯一的，默认情况下是节点的主机名。</p></li><li><p><code>-config-dir</code> 指定配置文件，当这个目录下有 .json 结尾的文件就会被加载，详细可参考<a href="https://www.consul.io/docs/agent/options.html#configuration_files">https://www.consul.io/docs/agent/options.html#configuration_files</a></p></li><li><p><code>-enable-script-checks</code> 检查服务是否处于活动状态，类似开启心跳</p></li><li><p><code>-datacenter</code> 数据中心名称</p></li><li><p><code>-ui</code> 开启ui界面</p></li><li><p><code>-join</code> 指定ip, 加入到已有的集群中</p></li></ul></li></ul><h3 id="查看已存在节点的IP"><a href="#查看已存在节点的IP" class="headerlink" title="查看已存在节点的IP"></a>查看已存在节点的IP</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker inspect --format=&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27; consul-01<br></code></pre></td></tr></table></figure><h3 id="开启第二个节点"><a href="#开启第二个节点" class="headerlink" title="开启第二个节点"></a>开启第二个节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8501:8500 --name consul-02 --restart always --volume D:\docker\Consul\Consul-02\data:/consul/data --volume D:\docker\Consul\Consul-02\config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br></code></pre></td></tr></table></figure><h3 id="开启第三个节点"><a href="#开启第三个节点" class="headerlink" title="开启第三个节点"></a>开启第三个节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --publish 8502:8500 --name consul-03 --restart always --volume D:\docker\Consul\Consul-03\data:/consul/data --volume D:\docker\Consul\Consul-03\config:/consul/config consul:latest agent --server --ui --bind=0.0.0.0 --client=0.0.0.0 --join 172.17.0.2<br></code></pre></td></tr></table></figure><h3 id="查看Consul集群信息"><a href="#查看Consul集群信息" class="headerlink" title="查看Consul集群信息"></a>查看Consul集群信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shelll">docker exec -it consul-01 consul members<br></code></pre></td></tr></table></figure><h3 id="查看容器IP"><a href="#查看容器IP" class="headerlink" title="查看容器IP"></a>查看容器IP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shel">docker inspect NAMES<br># 查看容器所有状态信息；<br>docker inspect --format=&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27;<br># 查看 容器ip 地址<br>docker inspect --format &#x27;&#123;&#123;.Name&#125;&#125; &#123;&#123;.State.Running&#125;&#125;&#x27;<br># 容器运行状态<br></code></pre></td></tr></table></figure><h2 id="net-core-发布"><a href="#net-core-发布" class="headerlink" title="net core 发布"></a>net core 发布</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20220110225514.png" alt="img"></p><h3 id="新建Dockerfile"><a href="#新建Dockerfile" class="headerlink" title="新建Dockerfile"></a>新建Dockerfile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base<br>WORKDIR /app<br>EXPOSE 80<br><br>WORKDIR /app<br>COPY .  /app<br>ENTRYPOINT [&quot;dotnet&quot;, &quot;ConsulTest.dll&quot;]<br></code></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t consultest02:v2.0 .<br></code></pre></td></tr></table></figure><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name consultest02 -p 80:80 -d consultest02:v2.0<br></code></pre></td></tr></table></figure><h3 id="宿主访问容器"><a href="#宿主访问容器" class="headerlink" title="宿主访问容器"></a>宿主访问容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">添加路由<br>route -p add 172.17.0.0 MASK 255.255.255.0 192.168.65.2<br>删除路由<br>route delete 172.17.0.0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.net core</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker for Something</title>
    <link href="/2021/12/01/Docker-Something/"/>
    <url>/2021/12/01/Docker-Something/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Docker-for-Something"><a href="#Docker-for-Something" class="headerlink" title="Docker for Something"></a>Docker for Something</h1><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201225103.jpeg" alt="MongoDB" style="zoom:33%;" /><h3 id="安装镜像"><a href="#安装镜像" class="headerlink" title="安装镜像"></a>安装镜像</h3><p><code>docker pull mongo</code></p><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><p><code>docker run --name mongo -v /docker/mongodb/data:/data/db -d -p 27017:27017 mongo</code></p><h3 id="配置账号密码"><a href="#配置账号密码" class="headerlink" title="配置账号密码"></a>配置账号密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it mongo /bin/sh<br><span class="hljs-meta prompt_"># </span><span class="language-bash">mongo admin</span><br></code></pre></td></tr></table></figure><h3 id="创建Mongo账号"><a href="#创建Mongo账号" class="headerlink" title="创建Mongo账号"></a>创建Mongo账号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">//选择admin数据库<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">use admin</span> <br>//创建账号<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">db.createUser(&#123;user: <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-built_in">pwd</span>: <span class="hljs-string">&#x27;admin123456&#x27;</span>, roles: [&#123;role: <span class="hljs-string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="hljs-string">&quot;admin&quot;</span> &#125;]&#125;);</span> <br>//测试账号<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"> db.auth(<span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;admin123456&#x27;</span>)</span> <br></code></pre></td></tr></table></figure><h3 id="登录测试"><a href="#登录测试" class="headerlink" title="登录测试"></a>登录测试</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201223653.png" alt="MongoDB"></p><h2 id="SqlServer"><a href="#SqlServer" class="headerlink" title="SqlServer"></a>SqlServer</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201224941.jpeg" alt="MSSQL" style="zoom:50%;" /><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>需要大概2G的空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull mcr.microsoft.com/mssql/server:2017-latest<br></code></pre></td></tr></table></figure><p><em>或者阿里云的</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry.cn-hangzhou.aliyuncs.com/newbe36524/server:2019-latest<br></code></pre></td></tr></table></figure><h3 id="创建映射目录"><a href="#创建映射目录" class="headerlink" title="创建映射目录"></a>创建映射目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\docker\SqlServer\data<br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -e &quot;ACCEPT_EULA=Y&quot; -e &quot;SA_PASSWORD=MyMMSQL1433...&quot;  -p 1433:1433 -v D:\docker\SqlServer\data:/var/opt/mssql/data --name mssql -d mcr.microsoft.com/mssql/server:2017-latest<br></code></pre></td></tr></table></figure><p>注意：</p><p>参数中必须用双引号，否则:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">The SQL Server End-User License Agreement (EULA) must be accepted before SQL<br><br>Server can start. The license terms for this product can be downloaded from<br><br>...<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205003335.png" alt="映射完毕"></p><p>然后，连接成功</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128232443.png" alt="image-20211128232440826"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128231959.png" alt="image-20211128231956823"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128232047.png" alt="image-20211128232044403"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211128232509.png" alt="image-20211128232508455"></p><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/mysql.jpeg" style="zoom:50%;" /><h3 id="docker-pull-mysql"><a href="#docker-pull-mysql" class="headerlink" title="docker pull mysql"></a><code>docker pull mysql</code></h3><h3 id="先造一个容器"><a href="#先造一个容器" class="headerlink" title="先造一个容器"></a>先造一个容器</h3><p><code>docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest --default-authentication-plugin=mysql_native_password</code></p><h3 id="做映射"><a href="#做映射" class="headerlink" title="做映射"></a>做映射</h3><p>提前做好路径：<code>D:\docker\mysql\conf</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211114161203.png" alt="image-20211114161159024"></p><p><code>docker cp mysql:/etc/mysql/my.cnf D:/docker/mysql/conf/</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211114161307.png" alt="image-20211114161305796"></p><ol><li>停止 <code>docker stop mysql</code></li><li>删除 <code>docker rm mysql</code></li></ol><h3 id="再造容器"><a href="#再造容器" class="headerlink" title="再造容器"></a>再造容器</h3><p><code>docker run --name mysql -v d/docker/mysql/conf:/etc/mysql/conf.d -v d:/docker/mysql/data:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql</code></p><ol><li><p>进入<code>mysql</code></p><p><code>docker exec -it mysql mysql -uroot -p123456</code></p><p>报这个错的话，就稍等, 我就是等等就好了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mysql: [<span class="hljs-built_in">Warning</span>] World-writable<span class="hljs-built_in"> config </span>file <span class="hljs-string">&#x27;/etc/mysql/conf.d/my.cnf&#x27;</span> is ignored.<br>mysql: [<span class="hljs-built_in">Warning</span>] Using a password on the command line<span class="hljs-built_in"> interface </span>can be insecure.<br><span class="hljs-built_in">ERROR</span> 2002 (HY000): Can<span class="hljs-string">&#x27;t cdocker exec -it mysql mysql -uroot -p123456 &#x27;</span>/var/run/mysqld/mysqld.sock<span class="hljs-string">&#x27; (2)</span><br></code></pre></td></tr></table></figure></li><li><p>修改密码</p><p><code>alter user &#39;root&#39;@&#39;%&#39; identified with mysql_native_password by &#39;Aa111111&#39;;</code></p></li><li><p>本地DBeaver 连接</p><ol><li>服务器地址 127.0.0.1</li><li>端口 3306</li><li>数据库 空</li><li>用户名 root</li><li>密码 Aa111111</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211114162009.png" alt="image-20211114162007559"></p></li></ol><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/Oracle.jpeg" style="zoom: 33%;" /><h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g<br></code></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker tag &lt;imageid&gt; 重命名<br><br>docker rmi &lt;之前的名&gt;<br></code></pre></td></tr></table></figure><h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 1521:1521 -v /home/oracle/app/oracle/oradata:/usr/local/docker/oracle --name oracle11 aliyunoracle_11g<br></code></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it oracle11 bash<br></code></pre></td></tr></table></figure><h3 id="切换-Root"><a href="#切换-Root" class="headerlink" title="切换 Root"></a>切换 Root</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">su root <br><span class="hljs-meta prompt_">#</span><span class="language-bash">输入密码：helowin</span><br></code></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/profile <br><br>export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2<br>export ORACLE_SID=helowin<br>export PATH=$ORACLE_HOME/bin:$PATH<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使配置生效</span><br>source /etc/profile<br></code></pre></td></tr></table></figure><h3 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s $ORACLE_HOME/bin/sqlplus /usr/bin<br></code></pre></td></tr></table></figure><h3 id="切换Oracle登录SqlPlus"><a href="#切换Oracle登录SqlPlus" class="headerlink" title="切换Oracle登录SqlPlus"></a>切换Oracle登录SqlPlus</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">su - oracle<br><br>sqlplus /nolog<br><br>conn /as sysdba<br></code></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">system</span> identified <span class="hljs-keyword">by</span> <span class="hljs-keyword">system</span>;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> sys identified <span class="hljs-keyword">by</span> sys;<br></code></pre></td></tr></table></figure><h3 id="修改最大连接数"><a href="#修改最大连接数" class="headerlink" title="修改最大连接数"></a>修改最大连接数</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">alter<span class="hljs-built_in"> system </span><span class="hljs-built_in">set</span> <span class="hljs-attribute">processes</span>=1000 <span class="hljs-attribute">scope</span>=spfile;<br></code></pre></td></tr></table></figure><h3 id="修改密码规则策略为密码永不过期"><a href="#修改密码规则策略为密码永不过期" class="headerlink" title="修改密码规则策略为密码永不过期"></a>修改密码规则策略为密码永不过期</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> PROFILE <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">LIMIT</span> PASSWORD_LIFE_TIME UNLIMITED;<br></code></pre></td></tr></table></figure><h3 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span>SPACE TSP_JHEMR <br>  datafile <span class="hljs-string">&#x27;/home/oracle/app/oracle/oradata/jhemr/jhemr.dbf&#x27;</span> <br>  size <span class="hljs-number">20</span>M <br>  reuse<br>  autoextend <span class="hljs-keyword">on</span><br>  next <span class="hljs-number">5</span>M<br>  maxsize unlimited,<br>  <span class="hljs-string">&#x27;/home/oracle/app/oracle/oradata/jhemr/jhemr2.dbf&#x27;</span><br>  size <span class="hljs-number">20</span>M<br>  reuse<br>  autoextend <span class="hljs-keyword">on</span><br>  next <span class="hljs-number">5</span>M<br>  maxsize unlimited<br>LOGGING   <br>PERMANENT   <br>EXTENT MANAGEMENT <span class="hljs-keyword">LOCAL</span> AUTOALLOCATE   <br>BLOCKSIZE <span class="hljs-number">8</span>K   <br>SEGMENT SPACE MANAGEMENT MANUAL   <br>FLASHBACK <span class="hljs-keyword">ON</span>;<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span>SPACE TSP_JHDICT <br>DATAFILE <span class="hljs-string">&#x27;/home/oracle/app/oracle/oradata/jhemr/JHDICT.DBF&#x27;</span> <br>  size <span class="hljs-number">20</span>M<br>  reuse<br>  autoextend <span class="hljs-keyword">on</span><br>  next <span class="hljs-number">5</span>M<br>  maxsize unlimited<br>LOGGING   <br>PERMANENT   <br>EXTENT MANAGEMENT <span class="hljs-keyword">LOCAL</span> AUTOALLOCATE   <br>BLOCKSIZE <span class="hljs-number">8</span>K   <br>SEGMENT SPACE MANAGEMENT MANUAL   <br>FLASHBACK <span class="hljs-keyword">ON</span>;<br></code></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> jhemr identified <span class="hljs-keyword">by</span> &quot;jhemr&quot; <span class="hljs-keyword">default</span> tablespace TSP_JHEMR temporary tablespace temp;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">connect</span> <span class="hljs-keyword">to</span> jhemr;<br><span class="hljs-keyword">grant</span> resource <span class="hljs-keyword">to</span> jhemr;<br><span class="hljs-keyword">grant</span> dba <span class="hljs-keyword">to</span> jhemr;<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> JHDICT IDENTIFIED <span class="hljs-keyword">BY</span> JHDICT<br><span class="hljs-keyword">default</span> TABLESPACE TSP_JHDICT;<br><span class="hljs-keyword">GRANT</span> UNLIMITED TABLESPACE <span class="hljs-keyword">TO</span> JHDICT;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">TO</span> JHDICT;<br><span class="hljs-keyword">GRANT</span> RESOURCE <span class="hljs-keyword">TO</span> JHDICT;<br></code></pre></td></tr></table></figure><h3 id="导入DMP文件"><a href="#导入DMP文件" class="headerlink" title="导入DMP文件"></a>导入DMP文件</h3><p>先通过xftp 将文件放到linux中，然后再复制到容器内。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">docker <span class="hljs-built_in">cp</span> 本地文件 容器ID:容器目录 <span class="hljs-comment">#将文件传到容器</span></span><br>docker cp /usr/oracle/oracledata/TR_JHEMR_20211009.dmp 2b4a86f4331f:dmpfile<br>docker cp /usr/oracle/oracledata/TR_JHDICT_20211009.dmp 2b4a86f4331f:dmpfile<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">imp jhemr/jhemr@helowin <span class="hljs-attribute">file</span>=/dmpfile/TR_JHEMR_20211009.dmp <span class="hljs-attribute">full</span>=y<br>imp JHDICT/JHDICT@helowin <span class="hljs-attribute">file</span>=/dmpfile/TR_JHDICT_20211009.dmp <span class="hljs-attribute">full</span>=y<br></code></pre></td></tr></table></figure><p>如果遇到 <code>bash: imp: command not found</code> 应该是环境变量的配置没跟上，执行 <code>source /etc/profile</code>即可。</p><h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202204251340905.jpeg" alt="rabbitmqlogo" style="zoom: 50%;" /><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -dit --name Myrabbitmq -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 rabbitmq:management<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">-d                          #后台运行<br>-- homename fuyi-rabbit     #主机名<br>RABBITMQ_DEFAULT_USER=admin #可视化界面登录用户名<br>RABBITMQ_DEFAULT_PASS=admin #可视化界面登录密码<br>-p 15672:15672              #端口映射<br>c20                         #镜像ID<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Navicat Premium 15</title>
    <link href="/2021/11/30/Navicat-Premium15/"/>
    <url>/2021/11/30/Navicat-Premium15/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Navicat-Premium-15"><a href="#Navicat-Premium-15" class="headerlink" title="Navicat Premium 15"></a><code>Navicat Premium 15</code></h1><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201224654.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这几天一直想着把自己的电脑上Docker中把主流的数据库镜像都安装一遍，现在已经安装了</p><ol><li><code>Oracle-XE</code></li><li><code>MySql</code></li><li><code>Mssql</code></li><li><code>MongoDB</code></li></ol><p>以前一直用的是<code>PLSql</code>、<code>Dbeaver Community</code>, 考虑到<code>Dbeaver</code> 如果不用企业版也就是 <code>Dbeaver-ee</code> 连接<code>MongoDB</code>有点空难，所以考虑本篇说的软件<code>Navicat Premium 15</code>，主要记录怎么安装和<a href="http://www.downcc.com/soft/430673.html">科技</a>。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载完正常安装即可。关闭所有安全软件，包括<code>windows安全中心</code></p><p>重点</p><h3 id="打开注册机"><a href="#打开注册机" class="headerlink" title="打开注册机"></a>打开注册机</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130232749.png" alt="打开注册机"></p><h3 id="选择路径"><a href="#选择路径" class="headerlink" title="选择路径"></a>选择路径</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130232926.png" alt="选择路径"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233016.png" alt="稍等一下"></p><h3 id="核对信息"><a href="#核对信息" class="headerlink" title="核对信息"></a>核对信息</h3><p>​    然后回到注册机，确保以下几个选项是对应的</p><ul><li>License为Ent<a href="http://www.downcc.com/k/erpapp/">erp</a>rise</li><li>Products为Premium</li><li>Languages为Simplified Chinese（简体中文，其它语言版本请自选）</li><li>Resale Version为Site license</li><li>Your Name和Your Organization可以任意填写或者默认</li></ul><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233244.png" alt="核对信息"></p><h3 id="生产注册码"><a href="#生产注册码" class="headerlink" title="生产注册码"></a>生产注册码</h3><p>上面几项设置好后，点击“Generate”，会自动生成一个注册码，如下图</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233350.png" alt="点击“Generate”"></p><h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p>这个时候就可以打开<code>navicat premium15</code>，将上面生成的注册码复制到注册窗口中（注册窗在头部“帮助”选项下面），点击激活，</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233445.png"></p><p>会提示因为激活服务器暂时不可使用…..我们选择“手动激活”</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233524.png"></p><p>会生成一个请求码</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233829.png"></p><p>将请求码复制到注册机中的Request Code框中，然后点击Generate按钮</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233900.png"></p><p>将上面的激活码复制到手动激活窗口中，并点击“激活”</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233926.png"></p><p>这个时候就会弹出<code>Navicat</code> 现已激活</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130233955.png"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>扫描下述二维码，下载安装，仅供学习，资金充裕也希望充米买正版。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130231927.png" alt="扫描下载，仅供学习"></p><h2 id="避坑"><a href="#避坑" class="headerlink" title="避坑"></a>避坑</h2><p>连接<code>MSSQL</code>的时候需要执行安装目录的下的一个文件<code>msodbcsql_64.msi</code>,算是驱动。</p><h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130234625.png" alt="Oracle"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130234723.png" alt="Mysql"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211130234750.png" alt="MSSQL"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201223653.png" alt="MongoDB"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211201223758.png" alt="Mysql|Oracle|Mssql|MongoDB"></p>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Program</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>T4模板应用</title>
    <link href="/2021/11/26/T4%E6%A8%A1%E6%9D%BF%E5%BA%94%E7%94%A8/"/>
    <url>/2021/11/26/T4%E6%A8%A1%E6%9D%BF%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="T4模板应用（一）"><a href="#T4模板应用（一）" class="headerlink" title="T4模板应用（一）"></a><code>T4</code>模板应用（一）</h1><p>之前在搭建系统框架的过程中用到的功能点，功效就是模板的功能。</p><p>个人是用<code>T4</code>模板批量生产到系统中的<code>CRUD</code>中，现在记录一下，不记录具体基础语法，只记录大概过程。</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><h3 id="ModelAuto-ttinclude"><a href="#ModelAuto-ttinclude" class="headerlink" title="ModelAuto.ttinclude"></a><code>ModelAuto.ttinclude</code></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Core&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;EnvDTE&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.IO&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Text&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Microsoft.VisualStudio.TextTemplating&quot;#&gt;</span><br><br>&lt;<span class="hljs-meta">#+</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> Block &#123;<br>        <span class="hljs-keyword">public</span> String Name;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Start, Length;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;Block&gt; blocks = <span class="hljs-keyword">new</span> List&lt;Block&gt;();<br>    <span class="hljs-keyword">public</span> Block currentBlock;<br>    <span class="hljs-keyword">public</span> Block footerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> Block headerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> ITextTemplatingEngineHost host;<br>    <span class="hljs-keyword">public</span> ManagementStrategy strategy;<br>    <span class="hljs-keyword">public</span> StringBuilder template;<br>    <span class="hljs-keyword">public</span> String OutputPath &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Manager</span>(<span class="hljs-params">ITextTemplatingEngineHost host, StringBuilder template, <span class="hljs-built_in">bool</span> commonHeader</span>)</span> &#123;<br>        <span class="hljs-keyword">this</span>.host = host;<br>        <span class="hljs-keyword">this</span>.template = template;<br>        OutputPath = String.Empty;<br>        strategy = ManagementStrategy.Create(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartBlock</span>(<span class="hljs-params">String name</span>)</span> &#123;<br>        currentBlock = <span class="hljs-keyword">new</span> Block &#123; Name = name, Start = template.Length &#125;;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartFooter</span>()</span> &#123;<br>        footerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndFooter</span>()</span> &#123;<br>        footerBlock.Length = template.Length - footerBlock.Start;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartHeader</span>()</span> &#123;<br>        headerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndHeader</span>()</span> &#123;<br>        headerBlock.Length = template.Length - headerBlock.Start;<br>    &#125;    <br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndBlock</span>()</span> &#123;<br>        currentBlock.Length = template.Length - currentBlock.Start;<br>        blocks.Add(currentBlock);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Process</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> split</span>)</span> &#123;<br>        String header = template.ToString(headerBlock.Start, headerBlock.Length);<br>        String footer = template.ToString(footerBlock.Start, footerBlock.Length);<br>        blocks.Reverse();<br>        <span class="hljs-keyword">foreach</span>(Block block <span class="hljs-keyword">in</span> blocks) &#123;<br>            String fileName = Path.Combine(OutputPath, block.Name);<br>            <span class="hljs-keyword">if</span> (split) &#123;<br>                String content = header + template.ToString(block.Start, block.Length) + footer;<br>                strategy.CreateFile(fileName, content);<br>                template.Remove(block.Start, block.Length);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                strategy.DeleteFile(fileName);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> ManagementStrategy <span class="hljs-title">Create</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> (host <span class="hljs-keyword">is</span> IServiceProvider) ? <span class="hljs-keyword">new</span> VSManagementStrategy(host) : <span class="hljs-keyword">new</span> ManagementStrategy(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">ManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        File.WriteAllText(fileName, content);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>            File.Delete(fileName);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">VSManagementStrategy</span> : <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-keyword">private</span> EnvDTE.ProjectItem templateProjectItem;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">VSManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">host</span>)</span> &#123;<br>        IServiceProvider hostServiceProvider = (IServiceProvider)host;<br>        <span class="hljs-keyword">if</span> (hostServiceProvider == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain hostServiceProvider&quot;</span>);<br><br>        EnvDTE.DTE dte = (EnvDTE.DTE)hostServiceProvider.GetService(<span class="hljs-keyword">typeof</span>(EnvDTE.DTE));<br>        <span class="hljs-keyword">if</span> (dte == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain DTE from host&quot;</span>);<br><br>        templateProjectItem = dte.Solution.FindProjectItem(host.TemplateFile);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        <span class="hljs-keyword">base</span>.CreateFile(fileName, content);<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; templateProjectItem.ProjectItems.AddFromFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; FindAndDeleteFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">FindAndDeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">foreach</span>(EnvDTE.ProjectItem projectItem <span class="hljs-keyword">in</span> templateProjectItem.ProjectItems) &#123;<br>            <span class="hljs-keyword">if</span> (projectItem.get_FileNames(<span class="hljs-number">0</span>) == fileName) &#123;<br>                projectItem.Delete();<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h3 id="AllModelTemplate-tt"><a href="#AllModelTemplate-tt" class="headerlink" title="AllModelTemplate.tt"></a><code>AllModelTemplate.tt</code></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ template debug=&quot;true&quot; hostspecific=&quot;true&quot; language=&quot;C#&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ output extension=&quot;.cs&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;$(TargetDir)Oracle.ManagedDataAccess.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Oracle.ManagedDataAccess&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ include file=&quot;ModelAuto.ttinclude&quot;#&gt;</span><br>&lt;<span class="hljs-meta"># var manager2 = new Manager(Host, GenerationEnvironment, true) &#123; OutputPath = Path.GetDirectoryName(Host.TemplateFile)&#125;; #&gt;</span><br>&lt;<span class="hljs-meta"># </span><br>ModelManager manager = <span class="hljs-keyword">new</span> ModelManager();<br>List&lt;<span class="hljs-built_in">string</span>&gt; list=manager.GetTableList();<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> list)<br>    &#123;<br><span class="hljs-built_in">string</span> tableName=item;<br>        DataTable table= manager.GetTableSchema(tableName);<br> <span class="hljs-meta">#&gt;</span><br><br> &lt;<span class="hljs-meta"># </span><br>manager2.StartBlock(tableName+<span class="hljs-string">&quot;.cs&quot;</span>);<br> <span class="hljs-meta">#&gt;</span><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Model</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据表实体类：<span class="hljs-doctag">&lt;#= tableName #&gt;</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">Serializable()</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> &lt;#= <span class="hljs-title">tableName</span> #&gt;<br>&#123;<br>&lt;<span class="hljs-meta">#</span><br><span class="hljs-keyword">foreach</span>(DataRow row <span class="hljs-keyword">in</span> table.Rows)<br>&#123;<br><span class="hljs-meta">#&gt;</span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;#=row[&quot;备注&quot;]#&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span>     </span><br>   <span class="hljs-keyword">public</span> &lt;<span class="hljs-meta">#= manager.TransFromSqlType(row[&quot;数据类型&quot;].ToString())#&gt; &lt;#=row[&quot;字段名&quot;]#&gt;&#123; get; set; &#125;</span><br>&lt;<span class="hljs-meta">#&#125;</span><br><span class="hljs-meta">#&gt;</span><br>&#125;<br>&#125;<br><br>&lt;<span class="hljs-meta"># manager2.EndBlock(); #&gt;</span><br><br>&lt;<span class="hljs-meta">#</span><br>    &#125;  <br> <span class="hljs-meta">#&gt; </span><br>   <br>&lt;<span class="hljs-meta"># manager2.Process(true); #&gt;</span><br><br>&lt;<span class="hljs-meta">#+</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ModelManager</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库连接字符串</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> CONNECTION_STRING = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XE;&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 用户信息表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> PERSONINFO_TABLE_NAME = <span class="hljs-string">&quot;XLZF_USERS&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据表名查询表结构信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> SELECT_SCHEMA_BY_TABLE_NAME = <span class="hljs-string">@&quot;SELECT A.column_name    字段名,                                                                                     A.data_type      数据类型,</span><br><span class="hljs-string">                                                                    A.data_length    长度,</span><br><span class="hljs-string">                                                                    A.data_precision 整数位,</span><br><span class="hljs-string">                                                                    A.Data_Scale     小数位,</span><br><span class="hljs-string">                                                                    A.nullable       允许空值,</span><br><span class="hljs-string">                                                                    A.Data_default   缺省值,</span><br><span class="hljs-string">                                                                    B.comments       备注,</span><br><span class="hljs-string">                                                                    A.TABLE_NAME     表名</span><br><span class="hljs-string">                                                                    FROM user_tab_columns A,user_col_comments B  </span><br><span class="hljs-string">                                                                    WHERE a.COLUMN_NAME = b.column_name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = B.Table_Name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = &#x27;&#123;0&#125;&#x27;&quot;</span>;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获得数据连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-keyword">private</span> Oracle.ManagedDataAccess.Client.<span class="hljs-function">OracleConnection <span class="hljs-title">GetConnection</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(CONNECTION_STRING);<br>        &#125;<br><br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到当前用户的所有表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetTableList</span>()</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-string">&quot;SELECT * FROM USER_TABLES&quot;</span>;<br>            DataTable dt = OracleHelper.ExecuteDataTable(sql);<br>            List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>            <span class="hljs-keyword">if</span> (dt!=<span class="hljs-literal">null</span>&amp;&amp;dt.Rows.Count&gt;<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dt.Rows.Count; i++)<br>                &#123;<br>                    list.Add(dt.Rows[i][<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>                &#125; <br>            &#125;<br>            <span class="hljs-keyword">return</span> list;<br>         &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 释放连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;con&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ReleaseConnection</span>(<span class="hljs-params">Oracle.ManagedDataAccess.Client.OracleConnection con</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (con != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (con.State == ConnectionState.Open)<br>                &#123;<br>                    con.Close();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取表内字段及字段其他信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;tableName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> DataTable <span class="hljs-title">GetTableSchema</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> tableName</span>)</span><br>        &#123;<br>            DataTable dt;<br><br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection con = GetConnection())<br>            &#123;<br>                con.Open();<br><br>                Oracle.ManagedDataAccess.Client.OracleCommand cmd = con.CreateCommand();<br><br>                cmd.CommandText = <span class="hljs-built_in">string</span>.Format(SELECT_SCHEMA_BY_TABLE_NAME,tableName);<br><br>                cmd.CommandType = CommandType.Text;<br><br>                Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(cmd);<br><br>                DataSet ds = <span class="hljs-keyword">new</span> DataSet(); <br><br>                adapter.Fill(ds);<br><br>                dt = ds.Tables[<span class="hljs-number">0</span>];<br>            &#125;<br>            <span class="hljs-keyword">return</span> dt;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> SQL</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;type&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">TransFromSqlType</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> type</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(type))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;number&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;int&quot;</span>;<br>            &#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;date&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;DateTime&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;nvarchar2&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>        &#125; <br><br>    &#125;<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta">#+ </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OracleHelper</span><br>    &#123;<br><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> oracleConnectionStr = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XE;&quot;</span>;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">ExecuteDataTable</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123; <br>                conn.Open();<br><br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br><br>                    command.Parameters.AddRange(paramList);<br><br>                    DataTable dt = <span class="hljs-keyword">new</span> DataTable();<br><br>                    Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(command);<br><br>                    adapter.Fill(dt);<br><br>                    <span class="hljs-keyword">return</span> dt;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">ExecuteNonQuery</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteNonQuery();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> <span class="hljs-title">ExecuteScalar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteScalar();<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br> <span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>右键运行T4模板</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210438.png" alt="image-20211205210429402"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210454.png" alt="image-20211205210452146"></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210522.png" alt="image-20211205210516763"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205210544.png" alt="image-20211205210543104"></p><h1 id="T4模板应用（二）"><a href="#T4模板应用（二）" class="headerlink" title="T4模板应用（二）"></a><code>T4</code>模板应用（二）</h1><p>这次是通过 <code>MMSQL</code> 然后运行 <code>T4</code> 模板，生产数据库中所有表对应的实体类</p><h2 id="前提-1"><a href="#前提-1" class="headerlink" title="前提"></a>前提</h2><p><code>ModelAuto.ttinclude</code> 与前面的一致。</p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p><code>ModelTemplate.tt</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ template language=&quot;C#&quot; debug=&quot;True&quot; hostspecific=&quot;True&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ output extension=&quot;.cs&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;System.xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data.SqlClient&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ include file=&quot;ModelAuto.ttinclude&quot;#&gt;</span><br>&lt;<span class="hljs-meta"># var manager = new Manager(Host, GenerationEnvironment, true) &#123; OutputPath = Path.GetDirectoryName(Host.TemplateFile)&#125;; #&gt;</span><br>&lt;<span class="hljs-meta"># </span><br><span class="hljs-built_in">string</span> connectionString = <span class="hljs-string">&quot;Data Source=.;Initial Catalog=XLZF_TESTDB;User ID=sa;Password=MyMMSQL1433...;&quot;</span>; <br>    SqlConnection conn = <span class="hljs-keyword">new</span> SqlConnection(connectionString); <br>    conn.Open(); <br>    System.Data.DataTable schema = conn.GetSchema(<span class="hljs-string">&quot;TABLES&quot;</span>); <br>    <span class="hljs-built_in">string</span> selectQuery = <span class="hljs-string">&quot;select * from @tableName&quot;</span>; <br>    SqlCommand command = <span class="hljs-keyword">new</span> SqlCommand(selectQuery,conn); <br>    SqlDataAdapter ad = <span class="hljs-keyword">new</span> SqlDataAdapter(command); <br>    System.Data.DataSet ds = <span class="hljs-keyword">new</span> DataSet();<br> <br>    <span class="hljs-built_in">string</span> propQuery = <span class="hljs-string">&quot;SELECT 表名=sobj.name,字段名=scol.name,字段说明=sprop.[value] FROM syscolumns as scol inner join sys.sysobjects as sobj on scol.id=sobj.id and sobj.xtype=&#x27;U&#x27; and sobj.name&lt;&gt;&#x27;dtproperties&#x27; left join sys.extended_properties as sprop on scol.id=sprop.major_id and scol.colid=sprop.minor_id where sobj.name=&#x27;@tableName&#x27; and scol.name=&#x27;@columnName&#x27;&quot;</span>; <br>    SqlCommand command2 = <span class="hljs-keyword">new</span> SqlCommand(propQuery,conn); <br>    SqlDataAdapter ad2 = <span class="hljs-keyword">new</span> SqlDataAdapter(command2); <br>    System.Data.DataSet ds2 = <span class="hljs-keyword">new</span> DataSet();<br> <span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    <span class="hljs-keyword">foreach</span>(System.Data.DataRow row <span class="hljs-keyword">in</span> schema.Rows) <br>    &#123;  <span class="hljs-meta">#&gt;   </span><br><br>     &lt;<span class="hljs-meta"># </span><br>manager.StartBlock(row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>]+<span class="hljs-string">&quot;.cs&quot;</span>);<br> <span class="hljs-meta">#&gt;</span><br><span class="hljs-comment">//----------&lt;#=row[&quot;TABLE_NAME&quot;].ToString()#&gt;开始----------</span><br>    <br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">MyProject.Entities</span> <br>&#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据表实体类：<span class="hljs-doctag">&lt;#= row[&quot;TABLE_NAME&quot;].ToString() #&gt;</span> </span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        [<span class="hljs-meta">Serializable()</span>]<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> &lt;#= <span class="hljs-title">row</span>[&quot;<span class="hljs-title">TABLE_NAME</span>&quot;].<span class="hljs-title">ToString</span>() #&gt;<br>        &#123;    <br>    &lt;<span class="hljs-meta">#</span><br>            ds.Tables.Clear();<br>            command.CommandText = selectQuery.Replace(<span class="hljs-string">&quot;@tableName&quot;</span>,row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString()); <br>            ad.FillSchema(ds, SchemaType.Mapped, row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>            <span class="hljs-keyword">foreach</span> (DataColumn dc <span class="hljs-keyword">in</span> ds.Tables[<span class="hljs-number">0</span>].Columns)<br>            &#123; <br>            <span class="hljs-meta">#&gt;</span><br>            &lt;<span class="hljs-meta"># </span><br>             ds2.Tables.Clear();<br>             command2.CommandText = propQuery.Replace(<span class="hljs-string">&quot;@tableName&quot;</span>,row[<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString()); <br>             command2.CommandText = command2.CommandText.Replace(<span class="hljs-string">&quot;@columnName&quot;</span>,dc.ColumnName); <br>             ad2.Fill(ds2);<br>            <span class="hljs-meta">#&gt; </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;#= dc.DataType.Name #&gt;</span>:<span class="hljs-doctag">&lt;#=ds2.Tables[0].Rows[0].ItemArray[2]#&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span>                       </span><br><span class="hljs-keyword">public</span> &lt;<span class="hljs-meta">#= dc.DataType.Name #&gt; &lt;#= dc.ColumnName #&gt; &#123;get;set;&#125;   </span><br>            &lt;<span class="hljs-meta"># &#125;  #&gt;   </span><br>        &#125;    <br>     &#125;<br><br><span class="hljs-comment">//----------&lt;#=row[&quot;TABLE_NAME&quot;].ToString()#&gt;结束----------</span><br><br>&lt;<span class="hljs-meta"># manager.EndBlock(); #&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    &#125; <span class="hljs-meta">#&gt; </span><br><br>&lt;<span class="hljs-meta">#</span><br>    manager.Process(<span class="hljs-literal">true</span>);<br><span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h2><p>常规右键-运行自定义工具</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213046.png" alt="数据库表"></p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213126.png" alt="运行结果"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213259.png" alt="image-20211205213257560"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205213412.png" alt="image-20211205213411337"></p><h1 id="T4模板应用（三）"><a href="#T4模板应用（三）" class="headerlink" title="T4模板应用（三）"></a><code>T4</code>模板应用（三）</h1><p>本节主要描述给<code>T4</code>模板传参，应用<code>T4</code>模板生产指定的程序。</p><p>由于涉及到传参，先定义一个</p><h2 id="参数实体"><a href="#参数实体" class="headerlink" title="参数实体"></a>参数实体</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">Serializable</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ParameterEntity</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 命名空间</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> NameSpace &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 作者</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Auth &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 表名</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TableName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 连接字符串</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ConnectionString &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ModelAuto-ttinclude-1"><a href="#ModelAuto-ttinclude-1" class="headerlink" title="ModelAuto.ttinclude"></a><code>ModelAuto.ttinclude</code></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ assembly name=&quot;System.Core&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;D:\2-技术实战\01-C#\04-Winform\DemoCode\packages\EnvDTE.8.0.2\lib\net10\EnvDTE.dll&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.IO&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Text&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Microsoft.VisualStudio.TextTemplating&quot;#&gt;</span><br><br>&lt;<span class="hljs-meta">#+</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> Block &#123;<br>        <span class="hljs-keyword">public</span> String Name;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Start, Length;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;Block&gt; blocks = <span class="hljs-keyword">new</span> List&lt;Block&gt;();<br>    <span class="hljs-keyword">public</span> Block currentBlock;<br>    <span class="hljs-keyword">public</span> Block footerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> Block headerBlock = <span class="hljs-keyword">new</span> Block();<br>    <span class="hljs-keyword">public</span> ITextTemplatingEngineHost host;<br>    <span class="hljs-keyword">public</span> ManagementStrategy strategy;<br>    <span class="hljs-keyword">public</span> StringBuilder template;<br>    <span class="hljs-keyword">public</span> String OutputPath &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Manager</span>(<span class="hljs-params">ITextTemplatingEngineHost host, StringBuilder template, <span class="hljs-built_in">bool</span> commonHeader</span>)</span> &#123;<br>        <span class="hljs-keyword">this</span>.host = host;<br>        <span class="hljs-keyword">this</span>.template = template;<br>        OutputPath = String.Empty;<br>        strategy = ManagementStrategy.Create(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartBlock</span>(<span class="hljs-params">String name</span>)</span> &#123;<br>        currentBlock = <span class="hljs-keyword">new</span> Block &#123; Name = name, Start = template.Length &#125;;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartFooter</span>()</span> &#123;<br>        footerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndFooter</span>()</span> &#123;<br>        footerBlock.Length = template.Length - footerBlock.Start;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartHeader</span>()</span> &#123;<br>        headerBlock.Start = template.Length;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndHeader</span>()</span> &#123;<br>        headerBlock.Length = template.Length - headerBlock.Start;<br>    &#125;    <br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EndBlock</span>()</span> &#123;<br>        currentBlock.Length = template.Length - currentBlock.Start;<br>        blocks.Add(currentBlock);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Process</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> split</span>)</span> &#123;<br>        String header = template.ToString(headerBlock.Start, headerBlock.Length);<br>        String footer = template.ToString(footerBlock.Start, footerBlock.Length);<br>        blocks.Reverse();<br>        <span class="hljs-keyword">foreach</span>(Block block <span class="hljs-keyword">in</span> blocks) &#123;<br>            String fileName = Path.Combine(OutputPath, block.Name);<br>            <span class="hljs-keyword">if</span> (split) &#123;<br>                String content = header + template.ToString(block.Start, block.Length) + footer;<br>                strategy.CreateFile(fileName, content);<br>                template.Remove(block.Start, block.Length);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                strategy.DeleteFile(fileName);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> ManagementStrategy <span class="hljs-title">Create</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> (host <span class="hljs-keyword">is</span> IServiceProvider) ? <span class="hljs-keyword">new</span> VSManagementStrategy(host) : <span class="hljs-keyword">new</span> ManagementStrategy(host);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">ManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        File.WriteAllText(fileName, content);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>            File.Delete(fileName);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">VSManagementStrategy</span> : <span class="hljs-title">ManagementStrategy</span><br>&#123;<br>    <span class="hljs-keyword">private</span> EnvDTE.ProjectItem templateProjectItem;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">VSManagementStrategy</span>(<span class="hljs-params">ITextTemplatingEngineHost host</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">host</span>)</span> &#123;<br>        IServiceProvider hostServiceProvider = (IServiceProvider)host;<br>        <span class="hljs-keyword">if</span> (hostServiceProvider == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain hostServiceProvider&quot;</span>);<br><br>        EnvDTE.DTE dte = (EnvDTE.DTE)hostServiceProvider.GetService(<span class="hljs-keyword">typeof</span>(EnvDTE.DTE));<br>        <span class="hljs-keyword">if</span> (dte == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;Could not obtain DTE from host&quot;</span>);<br><br>        templateProjectItem = dte.Solution.FindProjectItem(host.TemplateFile);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateFile</span>(<span class="hljs-params">String fileName, String content</span>)</span> &#123;<br>        <span class="hljs-keyword">base</span>.CreateFile(fileName, content);<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; templateProjectItem.ProjectItems.AddFromFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        ((EventHandler)<span class="hljs-built_in">delegate</span> &#123; FindAndDeleteFile(fileName); &#125;).BeginInvoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">FindAndDeleteFile</span>(<span class="hljs-params">String fileName</span>)</span> &#123;<br>        <span class="hljs-keyword">foreach</span>(EnvDTE.ProjectItem projectItem <span class="hljs-keyword">in</span> templateProjectItem.ProjectItems) &#123;<br>            <span class="hljs-keyword">if</span> (projectItem.get_FileNames(<span class="hljs-number">0</span>) == fileName) &#123;<br>                projectItem.Delete();<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="启动方法"><a href="#启动方法" class="headerlink" title="启动方法"></a>启动方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Mian_Two</span>()</span><br>&#123;<br>    ParameterEntity parameterEntity = <span class="hljs-keyword">new</span> ParameterEntity();<br><br>    parameterEntity.Auth = <span class="hljs-string">&quot;MR.XLZF&quot;</span>;<br><br>    parameterEntity.ConnectionString = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XLZF;&quot;</span>;<br><br>    parameterEntity.NameSpace = <span class="hljs-string">&quot;T4ParameterSample&quot;</span>;<br><br>    parameterEntity.TableName = <span class="hljs-string">&quot;CONFIGTABLE&quot;</span>;<br><br>    <span class="hljs-built_in">string</span> T4File = <span class="hljs-string">&quot;AllModelTemplate_1.tt&quot;</span>;<br><br>    <span class="hljs-built_in">string</span> templateFileName = Path.GetFullPath(T4File);<br><br>    CustomTextTemplatingEngineHost host = <span class="hljs-keyword">new</span> CustomTextTemplatingEngineHost();<br><br>    Engine engine = <span class="hljs-keyword">new</span> Engine();<br><br>    host.TemplateFileValue = templateFileName;<br><br>    host.Session = <span class="hljs-keyword">new</span> TextTemplatingSession();<br><br>    host.Session.Add(<span class="hljs-string">&quot;parameter1&quot;</span>, parameterEntity);<br><br>    <span class="hljs-built_in">string</span> input = File.ReadAllText(templateFileName);<br><br>    <span class="hljs-built_in">string</span> output = engine.ProcessTemplate(input, host);<br><br>    Console.WriteLine(output);<br><br>    <span class="hljs-keyword">foreach</span> (CompilerError error <span class="hljs-keyword">in</span> host.Errors)<br>    &#123;<br>        Console.WriteLine(error.ToString());<br>    &#125;<br><br>    Console.ReadLine();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="CustomTextTemplatingEngineHost-cs"><a href="#CustomTextTemplatingEngineHost-cs" class="headerlink" title="CustomTextTemplatingEngineHost.cs"></a><code>CustomTextTemplatingEngineHost.cs</code></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.CodeDom.Compiler;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> Microsoft.VisualStudio.TextTemplating;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">T4ParameterSample</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomTextTemplatingEngineHost</span> : <span class="hljs-title">ITextTemplatingEngineHost</span>, <span class="hljs-title">ITextTemplatingSessionHost</span><br>    &#123;<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> ITextTemplatingEngineHost</span><br>        <span class="hljs-comment">//the path and file name of the text template that is being processed</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">internal</span> <span class="hljs-built_in">string</span> TemplateFileValue;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TemplateFile<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> TemplateFileValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//This will be the extension of the generated text output file.</span><br>        <span class="hljs-comment">//The host can provide a default by setting the value of the field here.</span><br>        <span class="hljs-comment">//The engine can change this value based on the optional output directive</span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> fileExtensionValue = <span class="hljs-string">&quot;.txt&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FileExtension<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> fileExtensionValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//This will be the encoding of the generated text output file.</span><br>        <span class="hljs-comment">//The host can provide a default by setting the value of the field here.</span><br>        <span class="hljs-comment">//The engine can change this value based on the optional output directive</span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">private</span> Encoding fileEncodingValue = Encoding.UTF8;<br>        <span class="hljs-keyword">public</span> Encoding FileEncoding<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> fileEncodingValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//These are the errors that occur when the engine processes a template.</span><br>        <span class="hljs-comment">//The engine passes the errors to the host when it is done processing,</span><br>        <span class="hljs-comment">//and the host can decide how to display them. For example, the host </span><br>        <span class="hljs-comment">//can display the errors in the UI or write them to a file.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-keyword">private</span> CompilerErrorCollection errorsValue;<br>        <span class="hljs-keyword">public</span> CompilerErrorCollection Errors<br>        &#123;<br>            <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> errorsValue; &#125;<br>        &#125;<br>        <span class="hljs-comment">//The host can provide standard assembly references.</span><br>        <span class="hljs-comment">//The engine will use these references when compiling and</span><br>        <span class="hljs-comment">//executing the generated transformation class.</span><br>        <span class="hljs-comment">//--------------------------------------------------------------</span><br>        <span class="hljs-keyword">public</span> IList&lt;<span class="hljs-built_in">string</span>&gt; StandardAssemblyReferences<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[]<br>                &#123;<br>                    <span class="hljs-comment">//If this host searches standard paths and the GAC,</span><br>                    <span class="hljs-comment">//we can specify the assembly name like this.</span><br>                    <span class="hljs-comment">//---------------------------------------------------------</span><br>                    <span class="hljs-comment">//&quot;System&quot;</span><br><br>                    <span class="hljs-comment">//Because this host only resolves assemblies from the </span><br>                    <span class="hljs-comment">//fully qualified path and name of the assembly,</span><br>                    <span class="hljs-comment">//this is a quick way to get the code to give us the</span><br>                    <span class="hljs-comment">//fully qualified path and name of the System assembly.</span><br>                    <span class="hljs-comment">//---------------------------------------------------------</span><br>                    <span class="hljs-keyword">typeof</span>(System.Uri).Assembly.Location,<br>                    <span class="hljs-keyword">typeof</span>(T4ParameterSample.Parameter).Assembly.Location<br>                &#125;;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//The host can provide standard imports or using statements.</span><br>        <span class="hljs-comment">//The engine will add these statements to the generated </span><br>        <span class="hljs-comment">//transformation class.</span><br>        <span class="hljs-comment">//--------------------------------------------------------------</span><br>        <span class="hljs-keyword">public</span> IList&lt;<span class="hljs-built_in">string</span>&gt; StandardImports<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[]<br>                &#123;<br>                    <span class="hljs-string">&quot;System&quot;</span>,<br>                    <span class="hljs-string">&quot;T4ParameterSample&quot;</span><br>                &#125;;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method based on the optional include directive</span><br>        <span class="hljs-comment">//if the user has specified it in the text template.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-comment">//The included text is returned in the context parameter.</span><br>        <span class="hljs-comment">//If the host searches the registry for the location of include files,</span><br>        <span class="hljs-comment">//or if the host searches multiple locations by default, the host can</span><br>        <span class="hljs-comment">//return the final path of the include file in the location parameter.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">LoadIncludeText</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> requestFileName, <span class="hljs-keyword">out</span> <span class="hljs-built_in">string</span> content, <span class="hljs-keyword">out</span> <span class="hljs-built_in">string</span> location</span>)</span><br>        &#123;<br>            content = System.String.Empty;<br>            location = System.String.Empty;<br><br>            <span class="hljs-comment">//If the argument is the fully qualified path of an existing file,</span><br>            <span class="hljs-comment">//then we are done.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (File.Exists(requestFileName))<br>            &#123;<br>                content = File.ReadAllText(requestFileName);<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-comment">//This can be customized to search specific paths for the file.</span><br>            <span class="hljs-comment">//This can be customized to accept paths to search as command line</span><br>            <span class="hljs-comment">//arguments.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//Called by the Engine to enquire about </span><br>        <span class="hljs-comment">//the processing options you require. </span><br>        <span class="hljs-comment">//If you recognize that option, return an </span><br>        <span class="hljs-comment">//appropriate value. </span><br>        <span class="hljs-comment">//Otherwise, pass back NULL.</span><br>        <span class="hljs-comment">//--------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">GetHostOption</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> optionName</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">object</span> returnObject;<br>            <span class="hljs-keyword">switch</span> (optionName)<br>            &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;CacheAssemblies&quot;</span>:<br>                    returnObject = <span class="hljs-literal">true</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-literal">default</span>:<br>                    returnObject = <span class="hljs-literal">null</span>;<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> returnObject;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method to resolve assembly references used in</span><br>        <span class="hljs-comment">//the generated transformation class project and for the optional </span><br>        <span class="hljs-comment">//assembly directive if the user has specified it in the text template.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ResolveAssemblyReference</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> assemblyReference</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//If the argument is the fully qualified path of an existing file,</span><br>            <span class="hljs-comment">//then we are done. (This does not do any work.)</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (File.Exists(assemblyReference))<br>            &#123;<br>                <span class="hljs-keyword">return</span> assemblyReference;<br>            &#125;<br>            <span class="hljs-comment">//Maybe the assembly is in the same folder as the text template that </span><br>            <span class="hljs-comment">//called the directive.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-built_in">string</span> candidate = Path.Combine(Path.GetDirectoryName(<span class="hljs-keyword">this</span>.TemplateFile), assemblyReference);<br>            <span class="hljs-keyword">if</span> (File.Exists(candidate))<br>            &#123;<br>                <span class="hljs-keyword">return</span> candidate;<br>            &#125;<br>            <span class="hljs-comment">//This can be customized to search specific paths for the file</span><br>            <span class="hljs-comment">//or to search the GAC.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-comment">//This can be customized to accept paths to search as command line</span><br>            <span class="hljs-comment">//arguments.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-comment">//If we cannot do better, return the original file name.</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method based on the directives the user has </span><br>        <span class="hljs-comment">//specified in the text template.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Type <span class="hljs-title">ResolveDirectiveProcessor</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> processorName</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//This host will not resolve any specific processors.</span><br>            <span class="hljs-comment">//Check the processor name, and if it is the name of a processor the </span><br>            <span class="hljs-comment">//host wants to support, return the type of the processor.</span><br>            <span class="hljs-comment">//---------------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Compare(processorName, <span class="hljs-string">&quot;XYZ&quot;</span>, StringComparison.OrdinalIgnoreCase) == <span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-comment">//return typeof();</span><br>            &#125;<br>            <span class="hljs-comment">//This can be customized to search specific paths for the file</span><br>            <span class="hljs-comment">//or to search the GAC</span><br>            <span class="hljs-comment">//If the directive processor cannot be found, throw an error.</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">&quot;Directive Processor not found&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">//A directive processor can call this method if a file name does not </span><br>        <span class="hljs-comment">//have a path.</span><br>        <span class="hljs-comment">//The host can attempt to provide path information by searching </span><br>        <span class="hljs-comment">//specific paths for the file and returning the file and path if found.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ResolvePath</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> fileName</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (fileName == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the file name cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-comment">//If the argument is the fully qualified path of an existing file,</span><br>            <span class="hljs-comment">//then we are done</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>            &#123;<br>                <span class="hljs-keyword">return</span> fileName;<br>            &#125;<br>            <span class="hljs-comment">//Maybe the file is in the same folder as the text template that </span><br>            <span class="hljs-comment">//called the directive.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-built_in">string</span> candidate = Path.Combine(Path.GetDirectoryName(<span class="hljs-keyword">this</span>.TemplateFile), fileName);<br>            <span class="hljs-keyword">if</span> (File.Exists(candidate))<br>            &#123;<br>                <span class="hljs-keyword">return</span> candidate;<br>            &#125;<br>            <span class="hljs-comment">//Look more places.</span><br>            <span class="hljs-comment">//----------------------------------------------------------------</span><br>            <span class="hljs-comment">//More code can go here...</span><br>            <span class="hljs-comment">//If we cannot do better, return the original file name.</span><br>            <span class="hljs-keyword">return</span> fileName;<br>        &#125;<br>        <span class="hljs-comment">//If a call to a directive in a text template does not provide a value</span><br>        <span class="hljs-comment">//for a required parameter, the directive processor can try to get it</span><br>        <span class="hljs-comment">//from the host by calling this method.</span><br>        <span class="hljs-comment">//This method can be called 0, 1, or more times.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ResolveParameterValue</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> directiveId, <span class="hljs-built_in">string</span> processorName, <span class="hljs-built_in">string</span> parameterName</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (directiveId == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the directiveId cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span> (processorName == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the processorName cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span> (parameterName == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;the parameterName cannot be null&quot;</span>);<br>            &#125;<br>            <span class="hljs-comment">//Code to provide &quot;hard-coded&quot; parameter values goes here.</span><br>            <span class="hljs-comment">//This code depends on the directive processors this host will interact with.</span><br>            <span class="hljs-comment">//If we cannot do better, return the empty string.</span><br>            <span class="hljs-keyword">return</span> String.Empty;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method to change the extension of the </span><br>        <span class="hljs-comment">//generated text output file based on the optional output directive </span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetFileExtension</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> extension</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//The parameter extension has a &#x27;.&#x27; in front of it already.</span><br>            <span class="hljs-comment">//--------------------------------------------------------</span><br>            fileExtensionValue = extension;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method to change the encoding of the </span><br>        <span class="hljs-comment">//generated text output file based on the optional output directive </span><br>        <span class="hljs-comment">//if the user specifies it in the text template.</span><br>        <span class="hljs-comment">//----------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetOutputEncoding</span>(<span class="hljs-params">System.Text.Encoding encoding, <span class="hljs-built_in">bool</span> fromOutputDirective</span>)</span><br>        &#123;<br>            fileEncodingValue = encoding;<br>        &#125;<br>        <span class="hljs-comment">//The engine calls this method when it is done processing a text</span><br>        <span class="hljs-comment">//template to pass any errors that occurred to the host.</span><br>        <span class="hljs-comment">//The host can decide how to display them.</span><br>        <span class="hljs-comment">//---------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">LogErrors</span>(<span class="hljs-params">CompilerErrorCollection errors</span>)</span><br>        &#123;<br>            errorsValue = errors;<br>        &#125;<br>        <span class="hljs-comment">//This is the application domain that is used to compile and run</span><br>        <span class="hljs-comment">//the generated transformation class to create the generated text output.</span><br>        <span class="hljs-comment">//----------------------------------------------------------------------</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> AppDomain <span class="hljs-title">ProvideTemplatingAppDomain</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> content</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//This host will provide a new application domain each time the </span><br>            <span class="hljs-comment">//engine processes a text template.</span><br>            <span class="hljs-comment">//-------------------------------------------------------------</span><br><br>            <span class="hljs-comment">//return AppDomain.CurrentDomain;</span><br>            <span class="hljs-keyword">return</span> AppDomain.CreateDomain(<span class="hljs-string">&quot;Generation App Domain&quot;</span>);<br>            <span class="hljs-comment">//This could be changed to return the current appdomain, but new </span><br>            <span class="hljs-comment">//assemblies are loaded into this AppDomain on a regular basis.</span><br>            <span class="hljs-comment">//If the AppDomain lasts too long, it will grow indefintely, </span><br>            <span class="hljs-comment">//which might be regarded as a leak.</span><br>            <span class="hljs-comment">//This could be customized to cache the application domain for </span><br>            <span class="hljs-comment">//a certain number of text template generations (for example, 10).</span><br>            <span class="hljs-comment">//This could be customized based on the contents of the text </span><br>            <span class="hljs-comment">//template, which are provided as a parameter for that purpose.</span><br>        &#125;<br><br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> ITextTemplatingSessionHost</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> ITextTemplatingSession <span class="hljs-title">CreateSession</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> Session;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> ITextTemplatingSession Session<br>        &#123;<br>            <span class="hljs-keyword">get</span>;<br>            <span class="hljs-keyword">set</span>;<br>        &#125;<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="AllModelTemplate-1-tt"><a href="#AllModelTemplate-1-tt" class="headerlink" title="AllModelTemplate_1.tt"></a><code>AllModelTemplate_1.tt</code></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&lt;<span class="hljs-meta">#@ template debug=&quot;true&quot; hostspecific=&quot;false&quot; language=&quot;C#&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ output extension=&quot;.txt&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\System.Data.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\System.Data.OracleClient.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\System.Xml.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ assembly name=&quot;E:\Code\DemoCode\T4ParameterSample\bin\Debug\Oracle.ManagedDataAccess.dll&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Xml&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Data&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;Oracle.ManagedDataAccess&quot; #&gt;</span><br>&lt;<span class="hljs-meta">#@ import namespace=&quot;System.Collections.Generic&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ include file=&quot;ModelAuto.ttinclude&quot;#&gt;</span><br>&lt;<span class="hljs-meta">#@ parameter name=&quot;parameter1&quot; type=&quot;T4ParameterSample.ParameterEntity&quot; #&gt;</span><br>&lt;<span class="hljs-meta"># </span><br>ModelManager manager = <span class="hljs-keyword">new</span> ModelManager();<br>manager.CONNECTION_STRING = parameter1.ConnectionString;<br>List&lt;<span class="hljs-built_in">string</span>&gt; list=manager.GetTableList(parameter1.TableName);<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta"># </span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> list)<br>    &#123;<br><span class="hljs-built_in">string</span> tableName=item;<br>        DataTable table= manager.GetTableSchema(tableName);<br> <span class="hljs-meta">#&gt;</span><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Data;<br><span class="hljs-keyword">using</span> System.Data.OracleClient;<br><span class="hljs-keyword">namespace</span> &lt;#= parameter1.NameSpace <span class="hljs-meta">#&gt;</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据表实体类：<span class="hljs-doctag">&lt;#= tableName #&gt;</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> By: <span class="hljs-doctag">&lt;#= parameter1.Auth #&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">Serializable()</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> &lt;#= <span class="hljs-title">tableName</span> #&gt;<br>&#123;<br>&lt;<span class="hljs-meta">#</span><br><span class="hljs-keyword">foreach</span>(DataRow row <span class="hljs-keyword">in</span> table.Rows)<br>&#123;<br><span class="hljs-meta">#&gt;</span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;#=row[&quot;备注&quot;]#&gt;</span></span><br>   <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span>     </span><br>   <span class="hljs-keyword">public</span> &lt;<span class="hljs-meta">#= manager.TransFromSqlType(row[&quot;数据类型&quot;].ToString())#&gt; &lt;#=row[&quot;字段名&quot;]#&gt;&#123; get; set; &#125;</span><br>&lt;<span class="hljs-meta">#&#125;</span><br><span class="hljs-meta">#&gt;</span><br>&#125;<br>&#125;<br><br>&lt;<span class="hljs-meta">#</span><br>    &#125;  <br> <span class="hljs-meta">#&gt; </span><br>   <br><br><br>&lt;<span class="hljs-meta">#+</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ModelManager</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库连接字符串</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span> </span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CONNECTION_STRING = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XE;&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 用户信息表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PERSONINFO_TABLE_NAME = <span class="hljs-string">&quot;XLZF_USERS&quot;</span>;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据表名查询表结构信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> SELECT_SCHEMA_BY_TABLE_NAME = <span class="hljs-string">@&quot;SELECT A.column_name    字段名,                                                                                     A.data_type      数据类型,</span><br><span class="hljs-string">                                                                    A.data_length    长度,</span><br><span class="hljs-string">                                                                    A.data_precision 整数位,</span><br><span class="hljs-string">                                                                    A.Data_Scale     小数位,</span><br><span class="hljs-string">                                                                    A.nullable       允许空值,</span><br><span class="hljs-string">                                                                    A.Data_default   缺省值,</span><br><span class="hljs-string">                                                                    B.comments       备注,</span><br><span class="hljs-string">                                                                    A.TABLE_NAME     表名</span><br><span class="hljs-string">                                                                    FROM user_tab_columns A,user_col_comments B  </span><br><span class="hljs-string">                                                                    WHERE a.COLUMN_NAME = b.column_name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = B.Table_Name</span><br><span class="hljs-string">                                                                    AND A.Table_Name = &#x27;&#123;0&#125;&#x27;&quot;</span>;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获得数据连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-keyword">public</span> Oracle.ManagedDataAccess.Client.<span class="hljs-function">OracleConnection <span class="hljs-title">GetConnection</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(CONNECTION_STRING);<br>        &#125;<br><br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到当前用户的所有表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetTableList</span>()</span><br>        &#123;<br>            OracleHelper helper = <span class="hljs-keyword">new</span> OracleHelper();<br>            <br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-string">&quot;SELECT * FROM USER_TABLES&quot;</span>;<br><br>            DataTable dt = helper.ExecuteDataTable(sql);<br><br>            List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br><br>            <span class="hljs-keyword">if</span> (dt!=<span class="hljs-literal">null</span>&amp;&amp;dt.Rows.Count&gt;<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dt.Rows.Count; i++)<br>                &#123;<br>                    list.Add(dt.Rows[i][<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>                &#125; <br>            &#125;<br><br>            <span class="hljs-keyword">return</span> list;<br>         &#125;<br><br> <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到当前用户的所有表名</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetTableList</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> tableName</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-string">&quot;SELECT * FROM USER_TABLES WHERE TABLE_NAME = &#x27;&quot;</span>+tableName+<span class="hljs-string">&quot;&#x27; &quot;</span>;<br><br>OracleHelper helper = <span class="hljs-keyword">new</span> OracleHelper();<br><br>helper.oracleConnectionStr = CONNECTION_STRING;<br><br>            DataTable dt = helper.ExecuteDataTable(sql);<br><br>            List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br><br>            <span class="hljs-keyword">if</span> (dt!=<span class="hljs-literal">null</span>&amp;&amp;dt.Rows.Count&gt;<span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dt.Rows.Count; i++)<br>                &#123;<br>                    list.Add(dt.Rows[i][<span class="hljs-string">&quot;TABLE_NAME&quot;</span>].ToString());<br>                &#125; <br>            &#125;<br><br>            <span class="hljs-keyword">return</span> list;<br>         &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 释放连接</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;con&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ReleaseConnection</span>(<span class="hljs-params">Oracle.ManagedDataAccess.Client.OracleConnection con</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (con != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (con.State == ConnectionState.Open)<br>                &#123;<br>                    con.Close();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取表内字段及字段其他信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;tableName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> DataTable <span class="hljs-title">GetTableSchema</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> tableName</span>)</span><br>        &#123;<br>            DataTable dt;<br><br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection con = GetConnection())<br>            &#123;<br>                con.Open();<br><br>                Oracle.ManagedDataAccess.Client.OracleCommand cmd = con.CreateCommand();<br><br>                cmd.CommandText = <span class="hljs-built_in">string</span>.Format(SELECT_SCHEMA_BY_TABLE_NAME,tableName);<br><br>                cmd.CommandType = CommandType.Text;<br><br>                Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(cmd);<br><br>                DataSet ds = <span class="hljs-keyword">new</span> DataSet(); <br><br>                adapter.Fill(ds);<br><br>                dt = ds.Tables[<span class="hljs-number">0</span>];<br>            &#125;<br>            <span class="hljs-keyword">return</span> dt;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> SQL</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;type&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">TransFromSqlType</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> type</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(type))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;number&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;int&quot;</span>;<br>            &#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;date&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;DateTime&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.Equals(type, <span class="hljs-string">&quot;nvarchar2&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span>;<br>        &#125; <br><br>    &#125;<br><span class="hljs-meta">#&gt;</span><br><br>&lt;<span class="hljs-meta">#+ </span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OracleHelper</span><br>    &#123;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> oracleConnectionStr = <span class="hljs-string">&quot;User ID=XLZF;Password=XLZF;Data Source=127.0.0.1/XLZF;&quot;</span>;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> DataTable <span class="hljs-title">ExecuteDataTable</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123; <br>                conn.Open();<br><br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br><br>                    command.Parameters.AddRange(paramList);<br><br>                    DataTable dt = <span class="hljs-keyword">new</span> DataTable();<br><br>                    Oracle.ManagedDataAccess.Client.OracleDataAdapter adapter = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleDataAdapter(command);<br><br>                    adapter.Fill(dt);<br><br>                    <span class="hljs-keyword">return</span> dt;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">ExecuteNonQuery</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteNonQuery();<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">ExecuteScalar</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sql, <span class="hljs-keyword">params</span> Oracle.ManagedDataAccess.Client.OracleParameter[] paramList</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleConnection conn = <span class="hljs-keyword">new</span> Oracle.ManagedDataAccess.Client.OracleConnection(oracleConnectionStr))<br>            &#123;<br>                conn.Open();<br>                <span class="hljs-keyword">using</span> (Oracle.ManagedDataAccess.Client.OracleCommand command = conn.CreateCommand())<br>                &#123;<br>                    command.CommandText = sql;<br>                    command.Parameters.AddRange(paramList);<br><br>                    <span class="hljs-keyword">return</span> command.ExecuteScalar();<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br> <span class="hljs-meta">#&gt;</span><br></code></pre></td></tr></table></figure><h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20211205223647.png" alt="image-20211205223643141"></p><p>结合传参功能的实现，在结合多种数据库，可以实现多种批量生产代码的功能，后续补充个人工具中的应用。</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>T4</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 常用命令及坑记录</title>
    <link href="/2021/11/19/Git_Cmd/"/>
    <url>/2021/11/19/Git_Cmd/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="配置用户名及邮箱"><a href="#配置用户名及邮箱" class="headerlink" title="配置用户名及邮箱"></a>配置用户名及邮箱</h2><p><code>git config</code>可以配置git的参数，可以使用<code>git config --list</code>查看已经配置的git参数。</p><p>其中有三个级别的保存位置，<code>--system</code>、<code>--global</code>、<code>--local</code>，分别</p><ul><li>表示所有用户（本系统）</li><li>当前用户（全局）</li><li>本地配置（当前目录）</li></ul><p>默认使用<code>--local</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;houshuai&quot; <br>git config --global user.email &quot;houshuai@bjgoodwill.com&quot;<br></code></pre></td></tr></table></figure><h2 id="获取远程仓库"><a href="#获取远程仓库" class="headerlink" title="获取远程仓库"></a>获取远程仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@git.com<br></code></pre></td></tr></table></figure><h2 id="生成SSH秘钥"><a href="#生成SSH秘钥" class="headerlink" title="生成SSH秘钥"></a>生成SSH秘钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;hou3125378@live.com&quot;<br></code></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="没有生成SSHkey或者找不到对应的-SSHkey"><a href="#没有生成SSHkey或者找不到对应的-SSHkey" class="headerlink" title="没有生成SSHkey或者找不到对应的 SSHkey"></a>没有生成<code>SSHkey</code>或者找不到对应的 <code>SSHkey</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">Permission denied(publickey).<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access right <br>and the repository exists<br></code></pre></td></tr></table></figure><p>解决：</p><ol><li><p>生成<code>SSHKey</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;XXX@qq.com&quot;<br></code></pre></td></tr></table></figure></li><li><p>debug</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -v git@github.com<br></code></pre></td></tr></table></figure></li><li><p>agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-agent -s<br></code></pre></td></tr></table></figure></li><li><p>将对应的<code>SSHKey</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure></li></ol><p>​        到这里如果遇到这个问题</p><p>​        <code>Could not open a connection to your authentication agent</code></p><ol start="5"><li><p>啥意思我也不知道</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">eval `ssh-agent -s`<br></code></pre></td></tr></table></figure></li><li><p>重新指向</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure></li></ol><p>​    自己遇到这个问题不是没生成<code>sshkey</code>,而是多个<code>sshkey</code> 没有对应好</p><p>​    参考地址:<a href="https://www.shangmayuan.com/a/39405a3fee8f4ce0aca1bc39.html">Git报错解决：git@gitee.com: Permission denied (publickey). - 尚码园 (shangmayuan.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo</title>
    <link href="/2021/11/19/Hexo/"/>
    <url>/2021/11/19/Hexo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><p><a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid 用户手册 (fluid-dev.com)</a></p><h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装<code>cnpm</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h2 id="安装-hexo-cli"><a href="#安装-hexo-cli" class="headerlink" title="安装 hexo-cli"></a>安装 <code>hexo-cli</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cnpm install -g hexo-cli<br><br>cnpm install hexo --save<br></code></pre></td></tr></table></figure><h2 id="查看hexo版本"><a href="#查看hexo版本" class="headerlink" title="查看hexo版本"></a>查看<code>hexo</code>版本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo -v<br></code></pre></td></tr></table></figure><h2 id="hexo初始化"><a href="#hexo初始化" class="headerlink" title="hexo初始化"></a><code>hexo</code>初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init<br></code></pre></td></tr></table></figure><h2 id="安装套件"><a href="#安装套件" class="headerlink" title="安装套件"></a>安装套件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cnpm install<br></code></pre></td></tr></table></figure><h2 id="hexo安装git组件"><a href="#hexo安装git组件" class="headerlink" title="hexo安装git组件"></a><code>hexo</code>安装<code>git</code>组件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><ol><li><pre><code class="shell">Please make sure you have the correct access rightsand the repository exists.FATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (E:\Hexo_New\node_modules\_hexo-util@2.6.0@hexo-util\lib\spawn.js:51:21)      at ChildProcess.emit (node:events:390:28)      at ChildProcess.cp.emit (E:\Hexo_New\node_modules\_cross-spawn@7.0.3@cross-spawn\lib\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (node:internal/child_process:290:12) &#123;    code: 128  &#125;&#125; Something&#39;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</code></pre><p>遇到上述问题，两个方面</p><ol><li>没有生产rsa秘钥，这种好整，生成即可</li><li>生产了，而且是多个秘钥，命令找了找没有找到要找得，需要先执行debug <code>ssh -v git@github.com</code>,这里如果是gitee或者别的平台，可以改成<code>ssh -v git@gitee.com</code>,我这里是把本地 ~/.ssh/下生成的秘钥改成debug里要看到的秘钥即可，当然也可以告诉git，要走ssh下的哪个rsa key.</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C# ListHelper</title>
    <link href="/2021/11/06/ListHelper/"/>
    <url>/2021/11/06/ListHelper/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DataTable-amp-泛型集合之间的转换帮助类"><a href="#DataTable-amp-泛型集合之间的转换帮助类" class="headerlink" title="DataTable&amp;泛型集合之间的转换帮助类"></a>DataTable&amp;泛型集合之间的转换帮助类</h1><h2 id="DataRow转实体"><a href="#DataRow转实体" class="headerlink" title="DataRow转实体"></a>DataRow转实体</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataRow转实体</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据型类<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dr&quot;&gt;</span>DataRow<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>模式<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">DataRowToModel</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">DataRow dr</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    <span class="hljs-comment">//T t = (T)Activator.CreateInstance(typeof(T));</span><br>    T t = <span class="hljs-keyword">new</span> T();<br>    <span class="hljs-keyword">if</span> (dr == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">default</span>(T);<br>    &#125;<br>    <span class="hljs-comment">// 获得此模型的公共属性</span><br>    PropertyInfo[] propertys = t.GetType().GetProperties();<br>    DataColumnCollection Columns = dr.Table.Columns;<br>    <span class="hljs-keyword">foreach</span> (PropertyInfo p <span class="hljs-keyword">in</span> propertys)<br>    &#123;<br>        <span class="hljs-built_in">string</span> columnName = ((DBColumn)p.GetCustomAttributes(<span class="hljs-keyword">typeof</span>(DBColumn), <span class="hljs-literal">false</span>)[<span class="hljs-number">0</span>]).ColName;<br>        <span class="hljs-comment">// string columnName = p.Name;如果不用属性，数据库字段对应model属性,就用这个</span><br>        <span class="hljs-keyword">if</span> (Columns.Contains(columnName))<br>        &#123;<br>            <span class="hljs-comment">// 判断此属性是否有Setter或columnName值是否为空</span><br>            <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span> = dr[columnName];<br>            <span class="hljs-keyword">if</span> (!p.CanWrite || <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> DBNull || <span class="hljs-keyword">value</span> == DBNull.Value)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-meta">#<span class="hljs-keyword">region</span> SetValue</span><br>                    <span class="hljs-keyword">switch</span> (p.PropertyType.ToString())<br>                    &#123;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.String&quot;</span>:<br>                            p.SetValue(t, Convert.ToString(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int32&quot;</span>:<br>                            p.SetValue(t, Convert.ToInt32(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int64&quot;</span>:<br>                            p.SetValue(t, Convert.ToInt64(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.DateTime&quot;</span>:<br>                            p.SetValue(t, Convert.ToDateTime(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Boolean&quot;</span>:<br>                            p.SetValue(t, Convert.ToBoolean(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Double&quot;</span>:<br>                            p.SetValue(t, Convert.ToDouble(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Decimal&quot;</span>:<br>                            p.SetValue(t, Convert.ToDecimal(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-literal">default</span>:<br>                            p.SetValue(t, <span class="hljs-keyword">value</span>, <span class="hljs-literal">null</span>);<br>                            <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception)<br>            &#123;<br><br>                <span class="hljs-keyword">continue</span>;<br>                <span class="hljs-comment">/*使用 default 关键字，此关键字对于引用类型会返回空，对于数值类型会返回零。对于结构，</span><br><span class="hljs-comment">                         * 此关键字将返回初始化为零或空的每个结构成员，具体取决于这些结构是值类型还是引用类型*/</span><br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> t;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库字段对应属性类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 说明：数据库字段对应属性类<span class="hljs-doctag">&lt;br/&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">AttributeUsage(AttributeTargets.Property | AttributeTargets.Method, AllowMultiple = true, Inherited = false)</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DBColumn</span> : <span class="hljs-title">Attribute</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _colName;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库字段</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ColName<br>    &#123;<br>        <span class="hljs-keyword">get</span> =&gt; _colName;<br>        <span class="hljs-keyword">set</span> =&gt; _colName = <span class="hljs-keyword">value</span>;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DataTable转List"><a href="#DataTable转List" class="headerlink" title="DataTable转List"></a>DataTable转List<T></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataTable转List<span class="hljs-doctag">&lt;T&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据项类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dt&quot;&gt;</span>DataTable<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>List数据集<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-title">DataTableToList</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">DataTable dt</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    List&lt;T&gt; tList = <span class="hljs-keyword">new</span> List&lt;T&gt;();<br>    <span class="hljs-keyword">if</span> (dt != <span class="hljs-literal">null</span> &amp;&amp; dt.Rows.Count &gt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (DataRow dr <span class="hljs-keyword">in</span> dt.Rows)<br>        &#123;<br>            T t = DataRowToModel&lt;T&gt;(dr);<br>            tList.Add(t);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> tList;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DataReader转实体"><a href="#DataReader转实体" class="headerlink" title="DataReader转实体"></a>DataReader转实体</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataReader转实体</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dr&quot;&gt;</span>DataReader<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>实体<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">DataReaderToModel</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IDataReader dr</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    T t = <span class="hljs-keyword">new</span> T();<br>    <span class="hljs-keyword">if</span> (dr == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">default</span>(T);<br>    &#125;<br><br>    <span class="hljs-keyword">using</span> (dr)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (dr.Read())<br>        &#123;<br>            <span class="hljs-comment">// 获得此模型的公共属性</span><br>            PropertyInfo[] propertys = t.GetType().GetProperties();<br>            List&lt;<span class="hljs-built_in">string</span>&gt; listFieldName = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;(dr.FieldCount);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dr.FieldCount; i++)<br>            &#123;<br>                listFieldName.Add(dr.GetName(i).ToLower());<br>            &#125;<br><br>            <span class="hljs-keyword">foreach</span> (PropertyInfo p <span class="hljs-keyword">in</span> propertys)<br>            &#123;<br>                <span class="hljs-built_in">string</span> columnName = p.Name;<br>                <span class="hljs-keyword">if</span> (listFieldName.Contains(columnName.ToLower()))<br>                &#123;<br>                    <span class="hljs-comment">// 判断此属性是否有Setter或columnName值是否为空</span><br>                    <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span> = dr[columnName];<br>                    <span class="hljs-keyword">if</span> (!p.CanWrite || <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> DBNull || <span class="hljs-keyword">value</span> == DBNull.Value)<br>                    &#123;<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">try</span><br>                    &#123;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">region</span> SetValue</span><br>                            <span class="hljs-keyword">switch</span> (p.PropertyType.ToString())<br>                            &#123;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.String&quot;</span>:<br>                                    p.SetValue(t, Convert.ToString(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int32&quot;</span>:<br>                                    p.SetValue(t, Convert.ToInt32(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.DateTime&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDateTime(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Boolean&quot;</span>:<br>                                    p.SetValue(t, Convert.ToBoolean(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Double&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDouble(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Decimal&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDecimal(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-literal">default</span>:<br>                                    p.SetValue(t, <span class="hljs-keyword">value</span>, <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                            &#125;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>                    &#125;<br>                    <span class="hljs-keyword">catch</span><br>                    &#123;<br>                        <span class="hljs-comment">//throw (new Exception(ex.Message));</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> t;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DataReader转List"><a href="#DataReader转List" class="headerlink" title="DataReader转List"></a>DataReader转List<T></h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DataReader转List<span class="hljs-doctag">&lt;T&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>数据类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dr&quot;&gt;</span>DataReader<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>List数据集<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-title">DataReaderToList</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IDataReader dr</span>) <span class="hljs-keyword">where</span> T : <span class="hljs-keyword">new</span>()</span><br>&#123;<br>    List&lt;T&gt; tList = <span class="hljs-keyword">new</span> List&lt;T&gt;();<br>    <span class="hljs-keyword">if</span> (dr == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> tList;<br>    &#125;<br><br>    T t1 = <span class="hljs-keyword">new</span> T();<br>    <span class="hljs-comment">// 获得此模型的公共属性</span><br>    PropertyInfo[] propertys = t1.GetType().GetProperties();<br>    <span class="hljs-keyword">using</span> (dr)<br>    &#123;<br>        List&lt;<span class="hljs-built_in">string</span>&gt; listFieldName = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;(dr.FieldCount);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; dr.FieldCount; i++)<br>        &#123;<br>            listFieldName.Add(dr.GetName(i).ToLower());<br>        &#125;<br>        <span class="hljs-keyword">while</span> (dr.Read())<br>        &#123;<br>            T t = <span class="hljs-keyword">new</span> T();<br>            <span class="hljs-keyword">foreach</span> (PropertyInfo p <span class="hljs-keyword">in</span> propertys)<br>            &#123;<br>                <span class="hljs-built_in">string</span> columnName = p.Name;<br>                <span class="hljs-keyword">if</span> (listFieldName.Contains(columnName.ToLower()))<br>                &#123;<br>                    <span class="hljs-comment">// 判断此属性是否有Setter或columnName值是否为空</span><br>                    <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span> = dr[columnName];<br>                    <span class="hljs-keyword">if</span> (!p.CanWrite || <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> DBNull || <span class="hljs-keyword">value</span> == DBNull.Value)<br>                    &#123;<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">try</span><br>                    &#123;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">region</span> SetValue</span><br>                            <span class="hljs-keyword">switch</span> (p.PropertyType.ToString())<br>                            &#123;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.String&quot;</span>:<br>                                    p.SetValue(t, Convert.ToString(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Int32&quot;</span>:<br>                                    p.SetValue(t, Convert.ToInt32(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.DateTime&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDateTime(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Boolean&quot;</span>:<br>                                    p.SetValue(t, Convert.ToBoolean(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Double&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDouble(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;System.Decimal&quot;</span>:<br>                                    p.SetValue(t, Convert.ToDecimal(<span class="hljs-keyword">value</span>), <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                                <span class="hljs-literal">default</span>:<br>                                    p.SetValue(t, <span class="hljs-keyword">value</span>, <span class="hljs-literal">null</span>);<br>                                    <span class="hljs-keyword">break</span>;<br>                            &#125;<br>                        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>                    &#125;<br>                    <span class="hljs-keyword">catch</span><br>                    &#123;<br>                        <span class="hljs-comment">//throw (new Exception(ex.Message));</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>            tList.Add(t);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> tList;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="泛型集合转DataTable"><a href="#泛型集合转DataTable" class="headerlink" title="泛型集合转DataTable"></a>泛型集合转DataTable</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 泛型集合转DataTable</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>集合类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;entityList&quot;&gt;</span>泛型集合<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>DataTable<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">ListToDataTable</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IList&lt;T&gt; entityList</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (entityList == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    DataTable dt = CreateTable&lt;T&gt;();<br>    Type entityType = <span class="hljs-keyword">typeof</span>(T);<br>    <span class="hljs-comment">//PropertyInfo[] properties = entityType.GetProperties();</span><br>    PropertyDescriptorCollection properties = TypeDescriptor.GetProperties(entityType);<br>    <span class="hljs-keyword">foreach</span> (T item <span class="hljs-keyword">in</span> entityList)<br>    &#123;<br>        DataRow row = dt.NewRow();<br>        <span class="hljs-keyword">foreach</span> (PropertyDescriptor property <span class="hljs-keyword">in</span> properties)<br>        &#123;<br>            row[property.Name] = property.GetValue(item);<br>        &#125;<br>        dt.Rows.Add(row);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> dt;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="创建DataTable的结构"><a href="#创建DataTable的结构" class="headerlink" title="创建DataTable的结构"></a>创建DataTable的结构</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">CreateTable</span>&lt;<span class="hljs-title">T</span>&gt;()</span><br>&#123;<br>    Type entityType = <span class="hljs-keyword">typeof</span>(T);<br>    <span class="hljs-comment">//PropertyInfo[] properties = entityType.GetProperties();</span><br>    PropertyDescriptorCollection properties = TypeDescriptor.GetProperties(entityType);<br>    <span class="hljs-comment">//生成DataTable的结构</span><br>    DataTable dt = <span class="hljs-keyword">new</span> DataTable();<br>    <span class="hljs-keyword">foreach</span> (PropertyDescriptor prop <span class="hljs-keyword">in</span> properties)<br>    &#123;<br>        dt.Columns.Add(prop.Name);<br>    &#125;<br>    <span class="hljs-keyword">return</span> dt;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Helper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C# HttpHelper</title>
    <link href="/2021/11/06/HttpHelper/"/>
    <url>/2021/11/06/HttpHelper/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这段时间在做外部接口，踩了点坑，记录一下</p><p>​        除了前期对外部接口和现有程序逻辑结合过程中的思路梳理。其中，有个坑，在<code>net4.6</code> 上写的demo，接口跑的溜不行，结果把程序放在产品中，嘎，废了。原因是，<code>net 4</code>框架下不支持<code>TLS1.2</code>协议，也就是说，访问<code>http</code> 接口可以，访问<code>https</code>的接口不行，需要把下面<code>reg</code> 文件整理并且双击执行，让<code>net 4</code> 框架支持 <code>TLS1.2</code>协议。</p><h2 id="执行-net4下安装TLS1-2-reg"><a href="#执行-net4下安装TLS1-2-reg" class="headerlink" title="执行 net4下安装TLS1.2.reg"></a>执行 net4下安装TLS1.2.reg</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">Windows Registry Editor Version 5.00<br><br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\v4.0.30319]<br>&quot;SchUseStrongCrypto&quot;=dword:00000001<br><br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319]<br>&quot;SchUseStrongCrypto&quot;=dword:00000001<br></code></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HttpHelper</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Post</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;url&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;postData&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">PostUrl</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">string</span> postData</span>)</span><br>    &#123;<br>        HttpWebRequest request = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span> (url.StartsWith(<span class="hljs-string">&quot;https&quot;</span>, StringComparison.OrdinalIgnoreCase))<br>        &#123;<br>            request = WebRequest.Create(url) <span class="hljs-keyword">as</span> HttpWebRequest;<br>            ServicePointManager.ServerCertificateValidationCallback = <span class="hljs-keyword">new</span> RemoteCertificateValidationCallback(CheckValidationResult);<br>            request.ProtocolVersion = HttpVersion.Version11;<br>            <span class="hljs-comment">// 这里设置了协议类型。</span><br>            ServicePointManager.SecurityProtocol = (SecurityProtocolType)<span class="hljs-number">3072</span>;<span class="hljs-comment">// SecurityProtocolType.Tls1.2; </span><br>            request.KeepAlive = <span class="hljs-literal">false</span>;<br>            ServicePointManager.CheckCertificateRevocationList = <span class="hljs-literal">true</span>;<br>            ServicePointManager.DefaultConnectionLimit = <span class="hljs-number">100</span>;<br>            ServicePointManager.Expect100Continue = <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            request = (HttpWebRequest)WebRequest.Create(url);<br>        &#125;<br><br>        request.Method = <span class="hljs-string">&quot;POST&quot;</span>;    <span class="hljs-comment">//使用get方式发送数据</span><br>        request.ContentType = <span class="hljs-string">&quot;text/plain&quot;</span>; <span class="hljs-comment">//&quot;application/x-www-form-urlencoded&quot;;</span><br>        <span class="hljs-comment">//request.Referer = null;</span><br>        <span class="hljs-comment">//request.AllowAutoRedirect = true;</span><br>        <span class="hljs-comment">//request.UserAgent = &quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;;</span><br>        request.Accept = <span class="hljs-string">&quot;*/*&quot;</span>;<br><br>        <span class="hljs-built_in">byte</span>[] data = Encoding.UTF8.GetBytes(postData);<br>        Stream newStream = request.GetRequestStream();<br>        newStream.Write(data, <span class="hljs-number">0</span>, data.Length);<br>        newStream.Close();<br><br>        <span class="hljs-comment">//获取网页响应结果</span><br>        HttpWebResponse response = (HttpWebResponse)request.GetResponse();<br>        Stream stream = response.GetResponseStream();<br>        <span class="hljs-comment">//client.Headers.Add(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</span><br>        <span class="hljs-built_in">string</span> result = <span class="hljs-built_in">string</span>.Empty;<br>        <span class="hljs-keyword">using</span> (StreamReader sr = <span class="hljs-keyword">new</span> StreamReader(stream))<br>        &#123;<br>            result = sr.ReadToEnd();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">CheckValidationResult</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">//总是接受  </span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Helper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C# 操作Oracle批量执行Insert Blob</title>
    <link href="/2021/11/04/CSharp-%E6%93%8D%E4%BD%9COracle%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8CInsertBlob/"/>
    <url>/2021/11/04/CSharp-%E6%93%8D%E4%BD%9COracle%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8CInsertBlob/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Oracle-批量-Insert-Blob-操作"><a href="#Oracle-批量-Insert-Blob-操作" class="headerlink" title="Oracle 批量 Insert Blob 操作"></a>Oracle 批量 Insert Blob 操作</h1><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> BLOGTEST<br>(<br>  id      NUMBER <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name    VARCHAR2(<span class="hljs-number">100</span>),<br>  picture <span class="hljs-type">BLOB</span><br>)<br></code></pre></td></tr></table></figure><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence SEQ_BlogTestID<br>minvalue <span class="hljs-number">1</span><br>maxvalue <span class="hljs-number">999999999999999999999999999</span><br><span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> <span class="hljs-number">1</span><br>increment <span class="hljs-keyword">by</span> <span class="hljs-number">1</span><br>cache <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZFENTITY</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AddImage</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] Image &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 增加一条数据</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">AddImage</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">byte</span>[] picture</span>)</span><br>&#123;<br>    StringBuilder strSql = <span class="hljs-keyword">new</span> StringBuilder();<br><br>    strSql.Append(<span class="hljs-string">&quot; INSERT INTO BLOGTEST( &quot;</span>);<br>    strSql.Append(<span class="hljs-string">&quot; ID,NAME,PICTURE)&quot;</span>);<br>    strSql.Append(<span class="hljs-string">&quot; VALUES (&quot;</span>);<br>    strSql.Append(<span class="hljs-string">&quot; SEQ_BlogTestID.Nextval,:Name,:Picture) &quot;</span>);<span class="hljs-comment">//SEQ_BlogTestID 是数据库中的序列</span><br><br>    <span class="hljs-built_in">int</span> returnrow = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">using</span> (OracleConnection conn = <span class="hljs-keyword">new</span> OracleConnection(connStr))<br>    &#123;<br>        conn.Open();<br><br>        <span class="hljs-keyword">using</span> (OracleCommand cmd = conn.CreateCommand())<br>        &#123;<br>            cmd.CommandText = strSql.ToString();<br><br>            cmd.Parameters.Add(<span class="hljs-keyword">new</span> OracleParameter(<span class="hljs-string">&quot;:Name&quot;</span>, OracleDbType.Varchar2)).Value = name;<br><br>            cmd.Parameters.Add(<span class="hljs-keyword">new</span> OracleParameter(<span class="hljs-string">&quot;:Picture&quot;</span>, OracleDbType.Blob)).Value = picture;<br><br>            returnrow = cmd.ExecuteNonQuery();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> returnrow;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 示例：批量添加图片</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;list&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">AddImages</span>(<span class="hljs-params">List&lt;AddImage&gt; list</span>)</span><br>&#123;<br>    StringBuilder strSql = <span class="hljs-keyword">new</span> StringBuilder();<br><br>    strSql.Append(<span class="hljs-string">&quot; INSERT INTO BLOGTEST( &quot;</span>);<br>    strSql.Append(<span class="hljs-string">&quot; ID,NAME,PICTURE)&quot;</span>);<br>    strSql.Append(<span class="hljs-string">&quot; VALUES (&quot;</span>);<br>    strSql.Append(<span class="hljs-string">&quot; SEQ_BlogTestID.Nextval,:Name,:Picture) &quot;</span>);<span class="hljs-comment">//SEQ_BlogTestID 是数据库中的序列</span><br><br>    <span class="hljs-built_in">int</span> returnrow = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-built_in">int</span> recordCount = list.Count;<br><br>    <span class="hljs-keyword">using</span> (OracleConnection conn = <span class="hljs-keyword">new</span> OracleConnection(connStr))<br>    &#123;<br>        conn.Open();<br><br>        <span class="hljs-keyword">using</span> (OracleCommand cmd = conn.CreateCommand())<br>        &#123;<br>            cmd.CommandText = strSql.ToString();<br><br>            cmd.ArrayBindCount = recordCount;  <span class="hljs-comment">//指定单次需要处理的条数</span><br>            <span class="hljs-comment">//注意，这里的值是数组</span><br>            cmd.Parameters.Add(<span class="hljs-keyword">new</span> OracleParameter(<span class="hljs-string">&quot;:Name&quot;</span>, OracleDbType.Varchar2, ParameterDirection.Input)).Value = list.Select(x =&gt; x.Name).ToArray(); <span class="hljs-comment">//  item.Name;</span><br><br>            cmd.Parameters.Add(<span class="hljs-keyword">new</span> OracleParameter(<span class="hljs-string">&quot;:Picture&quot;</span>, OracleDbType.Blob, ParameterDirection.Input)).Value = list.Select(x =&gt; x.Image).ToArray();<br><br>            returnrow = cmd.ExecuteNonQuery();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> returnrow;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Typora 自动添加序号</title>
    <link href="/2021/11/02/Typora%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7/"/>
    <url>/2021/11/02/Typora%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Typora-自动添加序号"><a href="#Typora-自动添加序号" class="headerlink" title="Typora 自动添加序号"></a>Typora 自动添加序号</h2><p>到 <code>typora</code> 偏好设置 <code>ctrl + .</code> 外观，打开主题文件夹</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20210607110848770-1526666350.webp"></p><p>新建 文件 <code>base.user.css</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20210607110853002-175857938.webp"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/** initialize css counter */</span><br><span class="hljs-selector-id">#write</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h1<br>&#125;<br><span class="hljs-selector-tag">h1</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h2<br>&#125;<br><span class="hljs-selector-tag">h2</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h3<br>&#125;<br><span class="hljs-selector-tag">h3</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h4<br>&#125;<br><span class="hljs-selector-tag">h4</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h5<br>&#125;<br><span class="hljs-selector-tag">h5</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h6<br>&#125;<br><span class="hljs-comment">/** put counter result into headings */</span><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h1;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h2;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> <span class="hljs-comment">/** override the default style for focused headings */</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h3;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h4;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h5;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;. &quot;</span>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h6;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h6) <span class="hljs-string">&quot;.</span><br><span class="hljs-string">&quot;</span>&#125;<br><span class="hljs-comment">/** override the default style for focused headings */</span><br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">color</span>: inherit;<br><span class="hljs-attribute">border</span>: inherit;<br><span class="hljs-attribute">border-radius</span>: inherit;<br><span class="hljs-attribute">position</span>: inherit;<br><span class="hljs-attribute">left</span>:initial;<br><span class="hljs-attribute">float</span>: none;<br><span class="hljs-attribute">top</span>:initial;<br><span class="hljs-attribute">font-size</span>: inherit;<br><span class="hljs-attribute">padding-left</span>: inherit;<br><span class="hljs-attribute">padding-right</span>: inherit;<br><span class="hljs-attribute">vertical-align</span>: inherit;<br><span class="hljs-attribute">font-weight</span>: inherit;<br><span class="hljs-attribute">line-height</span>: inherit;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>去除序号后面 . 号的版本：</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/** initialize css counter */</span><br><span class="hljs-selector-id">#write</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h1<br>&#125;<br><span class="hljs-selector-tag">h1</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h2<br>&#125;<br><span class="hljs-selector-tag">h2</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h3<br>&#125;<br><span class="hljs-selector-tag">h3</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h4<br>&#125;<br><span class="hljs-selector-tag">h4</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h5<br>&#125;<br><span class="hljs-selector-tag">h5</span> &#123;<br><span class="hljs-attribute">counter-reset</span>: h6<br>&#125;<br><span class="hljs-comment">/** put counter result into headings */</span><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h1;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot; &quot;</span><br>&#125;<span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h2;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot; &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> <span class="hljs-comment">/** override the default style for focused headings */</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h3;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot; &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h4;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot; &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h5;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot; &quot;</span><br>&#125;<br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">counter-increment</span>: h6;<br><span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h6) <span class="hljs-string">&quot; &quot;</span><br>&#125;<br><span class="hljs-comment">/** override the default style for focused headings */</span><br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">color</span>: inherit;<br><span class="hljs-attribute">border</span>: inherit;<br><span class="hljs-attribute">border-radius</span>: inherit;<br><span class="hljs-attribute">position</span>: inherit;<br><span class="hljs-attribute">left</span>:initial;<br><span class="hljs-attribute">float</span>: none;<br><span class="hljs-attribute">top</span>:initial;<br><span class="hljs-attribute">font-size</span>: inherit;<br><span class="hljs-attribute">padding-left</span>: inherit;<br><span class="hljs-attribute">padding-right</span>: inherit;<br><span class="hljs-attribute">vertical-align</span>: inherit;<br><span class="hljs-attribute">font-weight</span>: inherit;<br><span class="hljs-attribute">line-height</span>: inherit;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Program</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL Sugar</title>
    <link href="/2021/11/01/SQL-Sugar/"/>
    <url>/2021/11/01/SQL-Sugar/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="SqlSugar-学习"><a href="#SqlSugar-学习" class="headerlink" title="SqlSugar 学习"></a><a href="http://www.codeisbug.com/Doc/8/1166">SqlSugar 学习</a></h2><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><h3 id="1-多表查询"><a href="#1-多表查询" class="headerlink" title="1.  多表查询"></a>1.  多表查询</h3><p>三表查询</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span> total = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">var</span> list = db.Queryable&lt;SYS_User_UserGroup, SYS_User, SYS_UserGroup&gt;((a, b, c) =&gt; <span class="hljs-keyword">new</span> <span class="hljs-built_in">object</span>[]<br>&#123;<br>    JoinType.Left,a.User_ID == b.User_ID,<br>    JoinType.Left,c.UserGroup_ID == a.UserGroup_ID<br>&#125;)<br>.Select((a, b, c) =&gt; <span class="hljs-keyword">new</span> &#123; a.User_ID, b.User_Name, c.UserGroup_Name &#125;);<br></code></pre></td></tr></table></figure><h3 id="动态where"><a href="#动态where" class="headerlink" title="动态where"></a>动态where</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp">List&lt;IConditionalModel&gt; conModels = <span class="hljs-keyword">new</span> List&lt;IConditionalModel&gt;<br>&#123;<br>    <span class="hljs-keyword">new</span> ConditionalModel() &#123; FieldName = <span class="hljs-string">&quot;&quot;</span>, ConditionalType = ConditionalType.Like, FieldValue = <span class="hljs-string">&quot;&quot;</span> &#125;<br>&#125;;<br><br><span class="hljs-keyword">var</span> student = db.Queryable&lt;SYS_User&gt;().Where(conModels).ToList();<br></code></pre></td></tr></table></figure><h3 id="TOP"><a href="#TOP" class="headerlink" title="TOP"></a>TOP</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">var</span> top5 = db.Queryable&lt;SYS_User&gt;().Take(<span class="hljs-number">5</span>).ToList();<br></code></pre></td></tr></table></figure><h3 id="根据主键查询"><a href="#根据主键查询" class="headerlink" title="根据主键查询"></a>根据主键查询</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">var</span> getByPrimaryKey = db.Queryable&lt;SYS_User&gt;().InSingle(<span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><h3 id="查询单条没有数据返回NULL-Single超过1条会报错，First不会"><a href="#查询单条没有数据返回NULL-Single超过1条会报错，First不会" class="headerlink" title="查询单条没有数据返回NULL, Single超过1条会报错，First不会"></a>查询单条没有数据返回NULL, Single超过1条会报错，First不会</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> getSingleOrDefault = db.Queryable&lt;SYS_User&gt;().Single();<br><span class="hljs-keyword">var</span> getFirstOrDefault = db.Queryable&lt;SYS_User&gt;().First();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL: 参考Take函数</span><br><span class="hljs-comment">如果使用Single方法返回单条, 实际返回超过1条, 会引发异常, 使用First返回单条不会引发异常, 只返回第一条, 忽略其它的结果.</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="UNION-ALL"><a href="#UNION-ALL" class="headerlink" title="UNION ALL"></a>UNION ALL</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp">db.UnionAll&lt;SYS_User&gt;(db.Queryable&lt;SYS_User&gt;(),db.Queryable&lt;SYS_User&gt;()).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT * FROM  (SELECT [ID],[Name] FROM [Student] UNION ALL SELECT [ID],[Name] FROM [Student] ) unionTable  </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">MySQL:</span><br><span class="hljs-comment">SELECT * FROM  (SELECT `ID`,`Name` FROM `Student`  UNION ALL SELECT `ID`,`Name` FROM `Student`  ) unionTable   </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Oracle:</span><br><span class="hljs-comment">SELECT * FROM  (SELECT &quot;ID&quot;,&quot;NAME&quot; FROM &quot;STUDENT&quot; UNION ALL SELECT &quot;ID&quot;,&quot;NAME&quot; FROM &quot;STUDENT&quot; ) UNIONTABLE  </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Sqlite:</span><br><span class="hljs-comment">SELECT * FROM  (SELECT `ID`,`Name` FROM `Student`  UNION ALL SELECT `ID`,`Name` FROM `Student`  ) unionTable   </span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="IN查询"><a href="#IN查询" class="headerlink" title="IN查询"></a>IN查询</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//Id In (1,2,3), 指定列In查询</span><br><span class="hljs-keyword">var</span> in1 = db.Queryable&lt;SYS_User&gt;().In(it=&gt;it.ID,<span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> &#125;).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User]  WHERE [ID] IN (&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;)  </span><br><span class="hljs-comment">其它数据库类似, 就不一一举例了</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//主键 In (1,2,3)  不指定列, 默认根据主键In</span><br><span class="hljs-keyword">var</span> in2 = db.Queryable&lt;SYS_User&gt;().In(<span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> &#125;).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User]  WHERE [ID] IN (&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;)  </span><br><span class="hljs-comment">其它数据库类似, 就不一一举例了</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//Id In (1,2)  指定列的另外一种写法</span><br><span class="hljs-built_in">int</span>[] array = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span> &#125;;<br><span class="hljs-keyword">var</span> in3 = db.Queryable&lt;SYS_User&gt;().Where(it=&gt;array.Contains(it.ID)).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL和上面一样</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="NOT-IN查询"><a href="#NOT-IN查询" class="headerlink" title="NOT IN查询"></a>NOT IN查询</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> in3 = db.Queryable&lt;SYS_User&gt;().Where(it=&gt;!array.Contains(it.ID)).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User]  WHERE NOT ([ID] IN (&#x27;1&#x27;,&#x27;2&#x27;)) </span><br><span class="hljs-comment">其它数据库类似, 就不一一举例了</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> getByWhere = db.Queryable&lt;SYS_User&gt;().Where(it =&gt; it.Id == <span class="hljs-number">1</span> || it.Name == <span class="hljs-string">&quot;a&quot;</span>).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User]  WHERE (( [ID] = @ID0 ) OR ( [Name] = @Name1 ))</span><br><span class="hljs-comment">其中@ID0值为1, @Name1值为a</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">MySQL:</span><br><span class="hljs-comment">SELECT `ID`,`Name` FROM `SYS_User`  WHERE (( `ID` = @ID0 ) OR ( `Name` = @Name1 )) </span><br><span class="hljs-comment">其中@ID0值为1, @Name1值为a</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Oracle:</span><br><span class="hljs-comment">SELECT &quot;ID&quot;,&quot;NAME&quot; FROM &quot;SYS_User&quot;  WHERE (( &quot;ID&quot; = :ID0 ) OR ( &quot;NAME&quot; = :Name1 ))</span><br><span class="hljs-comment">其中:ID0值为1, :Name1值为a</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Sqlite:</span><br><span class="hljs-comment">SELECT `ID`,`Name` FROM `SYS_User`  WHERE (( `ID` = @ID0 ) OR ( `Name` = @Name1 )) </span><br><span class="hljs-comment">其中@ID0值为1, @Name1值为a</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="使用函数-SqlFunc类"><a href="#使用函数-SqlFunc类" class="headerlink" title="使用函数 SqlFunc类"></a>使用函数 SqlFunc类</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//查询Name列不为空的结果, SqlFunc提供的功能远不止这一个, 在查询函数里面有详解</span><br><span class="hljs-keyword">var</span> getByFuns = db.Queryable&lt;SYS_User&gt;().Where(it =&gt; SqlFunc.IsNullOrEmpty(it.Name)).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User]  WHERE ( [Name]=&#x27;&#x27; OR [Name] IS NULL )</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">MySQL:</span><br><span class="hljs-comment">SELECT `ID`,`Name` FROM `SYS_User`  WHERE ( `Name`=&#x27;&#x27; OR `Name` IS NULL ) </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Oracle:</span><br><span class="hljs-comment">SELECT &quot;ID&quot;,&quot;NAME&quot; FROM &quot;SYS_User&quot;  WHERE ( &quot;NAME&quot;=&#x27;&#x27; OR &quot;NAME&quot; IS NULL )</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Sqlite:</span><br><span class="hljs-comment">SELECT `ID`,`Name` FROM `SYS_User`  WHERE ( `Name`=&#x27;&#x27; OR `Name` IS NULL ) </span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="可以使用-SUM-MAX-MIN-AVG查询单个字段"><a href="#可以使用-SUM-MAX-MIN-AVG查询单个字段" class="headerlink" title="可以使用 SUM MAX MIN AVG查询单个字段"></a>可以使用 SUM MAX MIN AVG查询单个字段</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> sum = db.Queryable&lt;SYS_User&gt;().Sum(it =&gt; it.ID);<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT SUM([ID]) FROM [SYS_User]</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">其它数据库类型, 不一一列举</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="Between-1-and-20"><a href="#Between-1-and-20" class="headerlink" title="Between 1 and 20"></a>Between 1 and 20</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> between = db.Queryable&lt;SYS_User&gt;().Where(it =&gt; SqlFunc.Between(it.ID, <span class="hljs-number">1</span>, <span class="hljs-number">20</span>)).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User]  WHERE  ([ID] BETWEEN @MethodConst0 AND @MethodConst1) </span><br><span class="hljs-comment">其中@MethodConst0值为1, @MethodConst1值为20</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">MySQL:</span><br><span class="hljs-comment">SELECT `ID`,`Name` FROM `SYS_User`  WHERE  (`ID` BETWEEN @MethodConst0 AND @MethodConst1)  </span><br><span class="hljs-comment">其中@MethodConst0值为1, @MethodConst1值为20</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Oracle:</span><br><span class="hljs-comment">SELECT &quot;ID&quot;,&quot;NAME&quot; FROM &quot;SYS_User&quot;  WHERE  (&quot;ID&quot; BETWEEN :MethodConst0 AND :MethodConst1) </span><br><span class="hljs-comment">其中:MethodConst0值为1, :MethodConst1值为20</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Sqlite:</span><br><span class="hljs-comment">SELECT `ID`,`Name` FROM `SYS_User`  WHERE  (`ID` BETWEEN @MethodConst0 AND @MethodConst1)  </span><br><span class="hljs-comment">其中@MethodConst0值为1, @MethodConst1值为20</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="使用-AS-取新的表名"><a href="#使用-AS-取新的表名" class="headerlink" title="使用 AS 取新的表名"></a>使用 AS 取新的表名</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> getListByRename = db.Queryable&lt;School&gt;().AS(<span class="hljs-string">&quot;Student&quot;</span>).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [Student] </span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> getAllOrder = db.Queryable&lt;SYS_User&gt;().OrderBy(it =&gt; it.ID).ToList(); <span class="hljs-comment">//默认为ASC排序</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User] ORDER BY [ID] ASC</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">其它数据库类似</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">var</span> getAllOrder = db.Queryable&lt;SYS_User&gt;().OrderBy(it =&gt; it.ID, OrderByType.Desc).ToList(); <span class="hljs-comment">//收到设置为DESC排序</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User] ORDER BY [ID] DESC</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="多个字段排序"><a href="#多个字段排序" class="headerlink" title="多个字段排序"></a>多个字段排序</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> data = db.Queryable&lt;SYS_User&gt;()<br>    .OrderBy(it =&gt; it.ID, OrderByType.Desc)<br>    .OrderBy(it =&gt; it.Name, OrderByType.Asc)<br>    .ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name] FROM [SYS_User] ORDER BY [ID] DESC,[Name] ASC</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">其它数据库类似</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="是否存在这条记录"><a href="#是否存在这条记录" class="headerlink" title="是否存在这条记录"></a>是否存在这条记录</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> isAny = db.Queryable&lt;SYS_User&gt;().Where(it =&gt; it.Id == <span class="hljs-number">-1</span>).Any();<br><span class="hljs-keyword">var</span> isAny2 = db.Queryable&lt;SYS_User&gt;().Any(it =&gt; it.Id == <span class="hljs-number">-1</span>);<br></code></pre></td></tr></table></figure><h3 id="获取同一天的记录"><a href="#获取同一天的记录" class="headerlink" title="获取同一天的记录"></a>获取同一天的记录</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> getTodayList = db.Queryable&lt;SYS_User&gt;().Where(it =&gt; SqlFunc.DateIsSame(it.CreateTime, DateTime.Now)).ToList();<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">生成SQL:</span><br><span class="hljs-comment">SQL Server:</span><br><span class="hljs-comment">SELECT [ID],[Name],[CreateTime] FROM [Student]  WHERE  (DATEDIFF(day,[CreateTime],@MethodConst0)=0) </span><br><span class="hljs-comment">其中@MethodConst0值为当前时间</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">MySQL:</span><br><span class="hljs-comment">SELECT `ID`,`Name`,`CreateTime` FROM `Student`  WHERE  (TIMESTAMPDIFF(day,`CreateTime`,@MethodConst0)=0)  </span><br><span class="hljs-comment">其中@MethodConst0值为当前时间</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h3 id="whereType"><a href="#whereType" class="headerlink" title="whereType"></a>whereType</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// and id=100 and (id=1 or id=2 and id=1) </span><br>List&lt;IConditionalModel&gt; conModels = <span class="hljs-keyword">new</span> List&lt;IConditionalModel&gt;();<br>conModels.Add(<span class="hljs-keyword">new</span> ConditionalModel() &#123; FieldName = <span class="hljs-string">&quot;id&quot;</span>, ConditionalType = ConditionalType.Equal, FieldValue = <span class="hljs-string">&quot;100&quot;</span> &#125;);<br>conModels.Add(<span class="hljs-keyword">new</span> ConditionalCollections()<br>&#123;<br>    ConditionalList =<br>    <span class="hljs-keyword">new</span> List&lt;KeyValuePair&lt;WhereType, ConditionalModel&gt;&gt;()<br>    &#123;<br>        <span class="hljs-keyword">new</span>  KeyValuePair&lt;WhereType, ConditionalModel&gt;( WhereType.And ,<span class="hljs-keyword">new</span> ConditionalModel() &#123; FieldName = <span class="hljs-string">&quot;id&quot;</span>, ConditionalType = ConditionalType.Equal, FieldValue = <span class="hljs-string">&quot;1&quot;</span> &#125;),<br>        <span class="hljs-keyword">new</span>  KeyValuePair&lt;WhereType, ConditionalModel&gt;( WhereType.Or, <span class="hljs-keyword">new</span> ConditionalModel() &#123; FieldName = <span class="hljs-string">&quot;id&quot;</span>, ConditionalType = ConditionalType.Equal, FieldValue = <span class="hljs-string">&quot;2&quot;</span> &#125;),<br>        <span class="hljs-keyword">new</span>  KeyValuePair&lt;WhereType, ConditionalModel&gt;( WhereType.And,<span class="hljs-keyword">new</span> ConditionalModel() &#123; FieldName = <span class="hljs-string">&quot;id&quot;</span>, ConditionalType = ConditionalType.Equal, FieldValue = <span class="hljs-string">&quot;2&quot;</span> &#125;)<br>    &#125;<br>&#125;);<br><span class="hljs-keyword">var</span> student = Db.Queryable&lt;SYS_User&gt;().Where(conModels).ToList();<br></code></pre></td></tr></table></figure><h3 id="子查询加动态拼接"><a href="#子查询加动态拼接" class="headerlink" title="子查询加动态拼接"></a>子查询加动态拼接</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Student&gt; <span class="hljs-title">GetStudent</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> id, <span class="hljs-built_in">string</span> name</span>)</span><br>&#123;<br>    <span class="hljs-built_in">int</span> pageCount = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> db = SugarDao.GetInstance())<br>    &#123;<br>        <span class="hljs-comment">//Form(&quot;Student&quot;,&quot;s&quot;)语法优化成 Form&lt;Student&gt;(&quot;s&quot;)</span><br>        <span class="hljs-keyword">var</span> sable = db.Sqlable().Form&lt;Student&gt;(<span class="hljs-string">&quot;s&quot;</span>).Join&lt;School&gt;(<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;s.sch_id&quot;</span>, <span class="hljs-string">&quot;l.id&quot;</span>, JoinType.INNER);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">string</span>.IsNullOrEmpty(name))<br>        &#123;<br>            sable = sable.Where(<span class="hljs-string">&quot;s.name=@name&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">string</span>.IsNullOrEmpty(name))<br>        &#123;<br>            sable = sable.Where(<span class="hljs-string">&quot;s.id=@id or s.id=100&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (id &gt; <span class="hljs-number">0</span>) &#123;<br>            sable = sable.Where(<span class="hljs-string">&quot;l.id in (select top 10 id from school)&quot;</span>);<span class="hljs-comment">//where加子查询</span><br>        &#125;<br>        <span class="hljs-comment">//参数</span><br>        <span class="hljs-keyword">var</span> pars = <span class="hljs-keyword">new</span> &#123; id = id, name = name &#125;;<br>        pageCount = sable.Count(pars);<br>        <span class="hljs-keyword">return</span> sable.SelectToList&lt;Student&gt;(<span class="hljs-string">&quot;s.*&quot;</span>, pars);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linq Note</title>
    <link href="/2021/11/01/Linq-Note/"/>
    <url>/2021/11/01/Linq-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近自己写个小软件，琢磨着不用之前那种拼接SQL的三层方法，DAL层想用一下Linq。总结如下：</p><p>通常都是GET，POST：</p><p>先来一波简版的：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span>查</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;SYS_User&gt; <span class="hljs-title">GetALL</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> entity.SYS_Users.ToList();<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span>增</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Add</span>(<span class="hljs-params">SYS_User f</span>)</span><br>&#123;<br>    entity.SYS_Users.Add(f);<br><br>    <span class="hljs-keyword">return</span> entity.SaveChanges();<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span>改</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Edit</span>(<span class="hljs-params">SYS_User f</span>)</span><br>&#123;<br>    entity.Entry(f).State = EntityState.Modified;<br><br>    <span class="hljs-keyword">return</span> entity.SaveChanges();<br>&#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span>删</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Delete</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> id</span>)</span><br>&#123;<br>    SYS_User f = entity.SYS_Users.Find(id);<br><br>    entity.SYS_Users.Remove(f);<br><br>    <span class="hljs-keyword">return</span> entity.SaveChanges();<br>&#125;<br></code></pre></td></tr></table></figure><p>看到这些，会想到在实际应用中，不是这样的，光说<strong>查询</strong>，就会遇到很多花式的查询。</p><p>然后去百度，去看大神的帖子，可能是我百度的姿势不对，找到的资料自己总结了一下。</p><p>但是还是感觉不是很舒服，可能我对<code>Linq</code>的理解太浅薄了。下面记录一下：</p><h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 第一种linq封装方法查询</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;keywords&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;SYS_User&gt; <span class="hljs-title">Get</span>(<span class="hljs-params"><span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] keywords</span>)</span><br>&#123;<br>    <span class="hljs-keyword">var</span> predicate = PredicateBuilder.True&lt;SYS_User&gt;();<br> <br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> keyword <span class="hljs-keyword">in</span> keywords)<br>    &#123;<br>        <span class="hljs-built_in">string</span> temp = keyword;<br> <br>        predicate = predicate.And(s =&gt; s.User_Name.Contains(<span class="hljs-string">&quot;1&quot;</span>));<br>    &#125;<br> <br>    <span class="hljs-comment">//predicate = predicate.And(s =&gt; s.User_Name==&quot;1&quot;);</span><br>    <span class="hljs-comment">//predicate = predicate.Or(s =&gt; s.User_Name==&quot;2&quot;);</span><br> <br>    <span class="hljs-keyword">var</span> result = entity.SYS_Users.Where(predicate).ToList();<br> <br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>当然，对应类加个备份吧。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 动态查询</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 参考URL:https://blog.csdn.net/kongwei521/article/details/27197753</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PredicateBuilder</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">T</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">True</span>&lt;<span class="hljs-title">T</span>&gt;()</span> &#123; <span class="hljs-keyword">return</span> f =&gt; <span class="hljs-literal">true</span>; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">T</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">False</span>&lt;<span class="hljs-title">T</span>&gt;()</span> &#123; <span class="hljs-keyword">return</span> f =&gt; <span class="hljs-literal">false</span>; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-title">Compose</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> Expression&lt;T&gt; first, Expression&lt;T&gt; second, Func&lt;Expression, Expression, Expression&gt; merge</span>)</span><br>    &#123;<br>        <span class="hljs-comment">// build parameter map (from parameters of second to parameters of first)</span><br>        <span class="hljs-keyword">var</span> map = first.Parameters.Select((f, i) =&gt; <span class="hljs-keyword">new</span> &#123; f, s = second.Parameters[i] &#125;).ToDictionary(p =&gt; p.s, p =&gt; p.f);<br><br>        <span class="hljs-comment">// replace parameters in the second lambda expression with parameters from the first</span><br>        <span class="hljs-keyword">var</span> secondBody = ParameterRebinder.ReplaceParameters(map, second.Body);<br><br>        <span class="hljs-comment">// apply composition of lambda expression bodies to parameters from the first expression </span><br>        <span class="hljs-keyword">return</span> Expression.Lambda&lt;T&gt;(merge(first.Body, secondBody), first.Parameters);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">T</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">And</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> Expression&lt;Func&lt;T, <span class="hljs-built_in">bool</span>&gt;&gt; first, Expression&lt;Func&lt;T, <span class="hljs-built_in">bool</span>&gt;&gt; second</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> first.Compose(second, Expression.And);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">T</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">Or</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> Expression&lt;Func&lt;T, <span class="hljs-built_in">bool</span>&gt;&gt; first, Expression&lt;Func&lt;T, <span class="hljs-built_in">bool</span>&gt;&gt; second</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> first.Compose(second, Expression.Or);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ParameterRebinder</span> : <span class="hljs-title">ExpressionVisitor</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Dictionary&lt;ParameterExpression, ParameterExpression&gt; map;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ParameterRebinder</span>(<span class="hljs-params">Dictionary&lt;ParameterExpression, ParameterExpression&gt; map</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.map = map ?? <span class="hljs-keyword">new</span> Dictionary&lt;ParameterExpression, ParameterExpression&gt;();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Expression <span class="hljs-title">ReplaceParameters</span>(<span class="hljs-params">Dictionary&lt;ParameterExpression, ParameterExpression&gt; map, Expression exp</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ParameterRebinder(map).Visit(exp);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> Expression <span class="hljs-title">VisitParameter</span>(<span class="hljs-params">ParameterExpression p</span>)</span><br>    &#123;<br>        ParameterExpression replacement;<br>        <span class="hljs-keyword">if</span> (map.TryGetValue(p, <span class="hljs-keyword">out</span> replacement))<br>        &#123;<br>            p = replacement;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">base</span>.VisitParameter(p);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20181005160328572-1728196450.png" alt="img"></p><h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 第二种linq封装方法动态查询</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GetDong</span>()</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 试水</span><br><br>    <span class="hljs-keyword">var</span> query = SpecificationBuilder.Create&lt;SYS_User&gt;();<br><br>    query = query.Equals(d =&gt; d.User_Name, <span class="hljs-string">&quot;1&quot;</span>);<br><br>    query = query.Equals(d =&gt; d.Phone, <span class="hljs-string">&quot;1&quot;</span>);<br><br>    <span class="hljs-keyword">var</span> result = entity.SYS_Users.Where(query.Predicate).ToList();<br><br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>   <span class="hljs-meta">#<span class="hljs-keyword">region</span> 执行Json动态查询</span><br>    <span class="hljs-comment">//&#123;a =&gt; (((a.User_Name == &quot;1&quot;) And (a.Phone == &quot;1&quot;)) Or (a.Phone == &quot;ccccc&quot;))&#125;</span><br>    <span class="hljs-built_in">string</span> queryJson = <span class="hljs-string">&quot;&#123;\&quot;[EQUAL][And]User_Name\&quot;:\&quot;1\&quot;,\&quot;[EQUAL][And]Phone\&quot;:\&quot;1,ccccc\&quot;&#125;&quot;</span>;<br><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">string</span>.IsNullOrEmpty(queryJson))<br>    &#123;<br>        <span class="hljs-keyword">var</span> predicate = Utils.GetSerchExtensions&lt;SYS_User&gt;(queryJson);<br><br>        <span class="hljs-keyword">var</span> result1 = entity.SYS_Users.Where(predicate).ToList();<br><br>        <span class="hljs-comment">//query.Predicate = query.Predicate.And(predicate);</span><br>    &#125;<br><br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 组合单个查询条件</span><br><br>    QueryEntity queryEntity = <span class="hljs-keyword">new</span> QueryEntity()<br>    &#123;<br>        LogicOperation = LogicOperation.EQUAL,<br>        PredicateType = PredicateType.AND,<br>        Column = <span class="hljs-string">&quot;User_Name&quot;</span>,<br>        Value = <span class="hljs-string">&quot;1&quot;</span><br>    &#125;;<br><br>    <span class="hljs-keyword">var</span> qqqqq = Utils.GetSerchExtensions&lt;SYS_User&gt;(<span class="hljs-keyword">new</span> List&lt;QueryEntity&gt;() &#123; queryEntity &#125;);<br><br>    <span class="hljs-keyword">var</span> a = entity.SYS_Users.Where(qqqqq).ToList();<br><br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 组合多个查询条件</span><br><br>    List&lt;QueryEntity&gt; queryEntities = <span class="hljs-keyword">new</span> List&lt;QueryEntity&gt;();<br><br>    queryEntities.Add(<span class="hljs-keyword">new</span> QueryEntity<br>                      &#123;<br>                          LogicOperation = LogicOperation.EQUAL,<br>                          PredicateType = PredicateType.AND,<br>                          Column = <span class="hljs-string">&quot;User_Name&quot;</span>,<br>                          Value = <span class="hljs-string">&quot;1&quot;</span><br>                      &#125;);<br><br>    queryEntities.Add(<span class="hljs-keyword">new</span> QueryEntity<br>                      &#123;<br>                          LogicOperation = LogicOperation.EQUAL,<br>                          PredicateType = PredicateType.AND,<br>                          Column = <span class="hljs-string">&quot;Phone&quot;</span>,<br>                          Value = <span class="hljs-string">&quot;1&quot;</span><br>                      &#125;);<br><br>    qqqqq = Utils.GetSerchExtensions&lt;SYS_User&gt;(queryEntities);<br><br>    a = entity.SYS_Users.Where(qqqqq).ToList();<br><br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>&#125;<br></code></pre></td></tr></table></figure><p> 缺的方法在这：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 手动去拼接动态表达式</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ExpressionHandle</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-keyword">where</span> <span class="hljs-title">T</span> : <span class="hljs-keyword">class</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Expression <span class="hljs-title">PrepareConditionLambda</span>(<span class="hljs-params">IList&lt;ParamObject&gt; paramList, ParameterExpression paramExp</span>)</span><br>    &#123;<br>        List&lt;Expression&gt; expList;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == paramList)<br>        &#123;<br>            expList = <span class="hljs-keyword">new</span> List&lt;Expression&gt;(<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">var</span> valueEqual = Expression.Constant(<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">var</span> expEqual = Expression.Equal(valueEqual, valueEqual);<br>            expList.Add(expEqual);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            expList = <span class="hljs-keyword">new</span> List&lt;Expression&gt;(paramList.Count);<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 筛选条件</span><br><br>                <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> p <span class="hljs-keyword">in</span> paramList)<br>                &#123;<br>                    <span class="hljs-keyword">var</span> exp = Expression.Property(paramExp, p.Name);<br>                    <span class="hljs-keyword">var</span> propertyType = <span class="hljs-keyword">typeof</span>(T).GetProperty(p.Name).PropertyType; <span class="hljs-comment">//得到此字段的数据类型</span><br>                    <span class="hljs-keyword">var</span> <span class="hljs-keyword">value</span> = propertyType == <span class="hljs-keyword">typeof</span>(Guid?) ? <span class="hljs-keyword">new</span> Guid(p.Value.ToString()) : Convert.ChangeType(p.Value, TypeHelper.GetUnNullableType(propertyType));<br>                    <span class="hljs-keyword">switch</span> (p.Operation)<br>                    &#123;<br>                        <span class="hljs-keyword">case</span> LogicOperation.LIKE:<br>                            <span class="hljs-keyword">var</span> containsMethod = <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">string</span>).GetMethod(<span class="hljs-string">&quot;Contains&quot;</span>);<br>                            <span class="hljs-keyword">var</span> valueLike = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType);<br>                            <span class="hljs-keyword">var</span> expLike = Expression.Call(exp, containsMethod, valueLike);<br>                            expList.Add(expLike);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> LogicOperation.EQUAL:<br>                            <span class="hljs-keyword">var</span> valueEqual = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType); <span class="hljs-comment">//值</span><br>                            <span class="hljs-keyword">var</span> expEqual = Expression.Equal(exp, valueEqual); <span class="hljs-comment">//拼接成 t=&gt;t.name=valueEqual</span><br>                            expList.Add(expEqual);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> LogicOperation.LT:<br>                            <span class="hljs-keyword">var</span> valueLT = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType); <span class="hljs-comment">//值</span><br>                            <span class="hljs-keyword">var</span> expLT = Expression.LessThan(exp, valueLT); <span class="hljs-comment">//拼接成 t=&gt;t.name&lt;valueEqual</span><br>                            expList.Add(expLT);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> LogicOperation.GT:<br>                            <span class="hljs-keyword">var</span> valueGT = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType);<br>                            <span class="hljs-keyword">var</span> expGT = Expression.GreaterThan(exp, valueGT);<br>                            expList.Add(expGT);<br>                            <span class="hljs-keyword">break</span>;<br>                        <span class="hljs-keyword">case</span> LogicOperation.NOTEQUAL:<br>                            <span class="hljs-keyword">var</span> valuent = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType);<br>                            <span class="hljs-keyword">var</span> expnt = Expression.NotEqual(exp, valuent);<br>                            expList.Add(expnt);<br>                            <span class="hljs-keyword">break</span>;<br>                            <span class="hljs-comment">//case LogicOperation.CONTAINS:</span><br>                            <span class="hljs-comment">//     //var valueCT = Expression.Constant(value, propertyType);</span><br>                            <span class="hljs-comment">//    var type = typeof(string);</span><br>                            <span class="hljs-comment">//    var expCT = Expression.Constant(exp, type);</span><br>                            <span class="hljs-comment">//     expList.Add(expCT);</span><br>                            <span class="hljs-comment">//    break;</span><br>                    &#125;<br>                &#125;<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>        &#125;<br><br>        <span class="hljs-keyword">return</span> expList.Aggregate&lt;Expression, Expression&gt;(<span class="hljs-literal">null</span>, (current, item) =&gt; current == <span class="hljs-literal">null</span> ? item : Expression.And(current, item));<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">QueryModel</span><br>&#123;<br>    IList&lt;ParamObject&gt; _items = <span class="hljs-keyword">new</span> List&lt;ParamObject&gt;();<br>    <span class="hljs-keyword">public</span> IList&lt;ParamObject&gt; Items<br>    &#123;<br>        <span class="hljs-keyword">get</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> _items;<br>        &#125;<br>        <span class="hljs-keyword">set</span><br>        &#123;<br>            _items = <span class="hljs-keyword">value</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 参数</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ParamObject</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> LogicOperation Operation &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> Value &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 排序</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SortObject</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> OrderBy &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> SortOperation Sort &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 排序方式</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">enum</span> SortOperation<br>&#123;<br>    ASC,<br>    DESC<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 查询方式</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">enum</span> LogicOperation<br>&#123;<br>    LIKE,    <span class="hljs-comment">//包含,模糊查询</span><br>    EQUAL,   <span class="hljs-comment">//等于</span><br>    LT,      <span class="hljs-comment">//小于</span><br>    GT,       <span class="hljs-comment">//大于</span><br>    CONTAINS,       <span class="hljs-comment">//包含，In查询 </span><br>    NOTEQUAL       <span class="hljs-comment">//不等于 </span><br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TypeHelper</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Type <span class="hljs-title">GetUnNullableType</span>(<span class="hljs-params">Type conversionType</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (conversionType.IsGenericType &amp;&amp; conversionType.GetGenericTypeDefinition() == <span class="hljs-keyword">typeof</span>(Nullable&lt;&gt;))<br>        &#123;<br>            <span class="hljs-comment">//如果是泛型方法，且泛型类型为Nullable&lt;&gt;则视为可空类型</span><br>            <span class="hljs-comment">//并使用NullableConverter转换器进行转换</span><br>            <span class="hljs-keyword">var</span> nullableConverter = <span class="hljs-keyword">new</span> System.ComponentModel.NullableConverter(conversionType);<br>            conversionType = nullableConverter.UnderlyingType;<br>        &#125;<br>        <span class="hljs-keyword">return</span> conversionType;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 连接方式</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">enum</span> PredicateType<br>&#123;<br>    AND, OR<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 查询方式</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-built_in">enum</span> SearchType<br>&#123;<br>    Between, Like, Equals<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 查询实体</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">QueryEntity</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 查询方式</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> LogicOperation LogicOperation &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 连接方式</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> PredicateType PredicateType &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 列名</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Column &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 列值</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> Value &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Utils</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 把查询条件拼接为Extensions</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 把查询条件拼接为Extensions</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TEntity&quot;&gt;</span>查询实体<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;searchJson&quot;&gt;</span>查询条件，例如：[like][or]name:123<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">TEntity</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">GetSerchExtensions</span>&lt;<span class="hljs-title">TEntity</span>&gt;(<span class="hljs-params">String searchJson</span>) <span class="hljs-keyword">where</span> TEntity : <span class="hljs-keyword">class</span>, <span class="hljs-keyword">new</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> ja = (JArray)JsonConvert.DeserializeObject(<span class="hljs-string">&quot;[&quot;</span> + searchJson + <span class="hljs-string">&quot;]&quot;</span>);                     <span class="hljs-comment">//把查询条件转换为Json格式</span><br>            <span class="hljs-keyword">var</span> enumerableQuery = <span class="hljs-keyword">new</span> EnumerableQuery&lt;KeyValuePair&lt;<span class="hljs-built_in">string</span>, JToken&gt;&gt;(ja[<span class="hljs-number">0</span>] <span class="hljs-keyword">as</span> JObject);<br>            <span class="hljs-keyword">return</span> GetSerchExtensions&lt;TEntity&gt;(enumerableQuery);    <span class="hljs-comment">//把查询条件拼接为Extensions</span><br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception)<br>        &#123;<br>            <span class="hljs-keyword">throw</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 把查询条件拼接为Extensions</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TEntity&quot;&gt;</span>查询实体<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;enumerableQuery&quot;&gt;</span>查询条件<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">TEntity</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">GetSerchExtensions</span>&lt;<span class="hljs-title">TEntity</span>&gt;(<span class="hljs-params">EnumerableQuery&lt;KeyValuePair&lt;<span class="hljs-built_in">string</span>, JToken&gt;&gt; enumerableQuery</span>) <span class="hljs-keyword">where</span> TEntity : <span class="hljs-keyword">class</span>, <span class="hljs-keyword">new</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> paramExp = Expression.Parameter(<span class="hljs-keyword">typeof</span>(TEntity), <span class="hljs-string">&quot;a&quot;</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == enumerableQuery || !enumerableQuery.Any())<br>        &#123;<br>            <span class="hljs-keyword">var</span> valueEqual = Expression.Constant(<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">var</span> expEqual = Expression.Equal(valueEqual, valueEqual);<br>            <span class="hljs-keyword">return</span> Expression.Lambda&lt;Func&lt;TEntity, <span class="hljs-built_in">bool</span>&gt;&gt;(expEqual, paramExp);  <span class="hljs-comment">//如果参数为空，返回一个a=&gt;1=1 的值</span><br><br>        &#125;<br>        <span class="hljs-keyword">var</span> modeltypt = <span class="hljs-keyword">typeof</span>(TEntity);  <span class="hljs-comment">//实体类型</span><br>        <span class="hljs-keyword">var</span> keyList = enumerableQuery.Select(e =&gt; e.Key).ToList();      <span class="hljs-comment">//取出Json 的每个字符串</span><br><br>        Expression whereExp = <span class="hljs-literal">null</span>;<br>        keyList.ForEach(s =&gt;<br>                        &#123;<br>                            <span class="hljs-keyword">var</span> searchTypeStr = s.Substring(<span class="hljs-number">1</span>, s.LastIndexOf(<span class="hljs-string">&quot;][&quot;</span>, StringComparison.Ordinal) - <span class="hljs-number">1</span>);   <span class="hljs-comment">//查询方式   Like</span><br>                            <span class="hljs-keyword">var</span> ab = s.Substring(s.LastIndexOf(<span class="hljs-string">&quot;][&quot;</span>, StringComparison.Ordinal) + <span class="hljs-number">2</span>);<br>                            <span class="hljs-keyword">var</span> joinTypeStr = ab.Remove(ab.LastIndexOf(<span class="hljs-string">&quot;]&quot;</span>, StringComparison.Ordinal));              <span class="hljs-comment">//连接方式   or</span><br>                            <span class="hljs-keyword">var</span> searchField = s.Substring(s.LastIndexOf(<span class="hljs-string">&quot;]&quot;</span>, StringComparison.Ordinal) + <span class="hljs-number">1</span>);         <span class="hljs-comment">//查询的列名 name </span><br>                            <span class="hljs-keyword">var</span> <span class="hljs-keyword">value</span> = enumerableQuery.FirstOrDefault(v =&gt; v.Key == s).Value.ToString();            <span class="hljs-comment">//值         123</span><br><br>                            LogicOperation searchType;       <span class="hljs-comment">//查询方式</span><br>                            PredicateType joinType;           <span class="hljs-comment">//连接方式</span><br><br>                            <span class="hljs-keyword">if</span> (Enum.TryParse(searchTypeStr.ToUpper(), <span class="hljs-keyword">out</span> searchType) &amp;&amp; Enum.TryParse(joinTypeStr.ToUpper(), <span class="hljs-keyword">out</span> joinType) &amp;&amp; modeltypt.GetProperties().Any(p =&gt; String.Equals(p.Name, searchField, StringComparison.CurrentCultureIgnoreCase)))  <span class="hljs-comment">//这个实体有这个列名</span><br>                            &#123;<br>                                <span class="hljs-keyword">var</span> firstOrDefault = modeltypt.GetProperties().FirstOrDefault(p =&gt; String.Equals(p.Name, searchField, StringComparison.CurrentCultureIgnoreCase));<br>                                <span class="hljs-keyword">if</span> (firstOrDefault == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span>;<br>                                <span class="hljs-keyword">var</span> selCol = firstOrDefault.Name;  <span class="hljs-comment">//查询的列名</span><br>                                <span class="hljs-keyword">var</span> splitList = <span class="hljs-keyword">value</span>.Split(<span class="hljs-string">&#x27;,&#x27;</span>).ToList();   <span class="hljs-comment">//这个位置是的处理是默认认为当查询值中包含,的视为或者的查询：例如 A=&#x27;abc,def&#x27; 处理成 (A=&#x27;def&#x27; OR  A=&#x27;abc&#x27;),但是时间上这块无法满足就要查询包含,的数据的求</span><br>                                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; splitList.Count; i++)<br>                                &#123;<br>                                    <span class="hljs-keyword">var</span> val = splitList[i];<br><br>                                    <span class="hljs-keyword">if</span> (val == <span class="hljs-literal">null</span> || <span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(val)) <span class="hljs-keyword">continue</span>;<br>                                    <span class="hljs-keyword">var</span> expressionFuncEquals = PrepareConditionLambda&lt;TEntity&gt;(selCol, val, paramExp, searchType); <span class="hljs-comment">//得到这个查询的表达式</span><br>                                    whereExp = i != <span class="hljs-number">0</span> ? (whereExp == <span class="hljs-literal">null</span> ? expressionFuncEquals : Expression.Or(whereExp, expressionFuncEquals)) : (joinType == PredicateType.OR ? (whereExp == <span class="hljs-literal">null</span> ? expressionFuncEquals : Expression.Or(whereExp, expressionFuncEquals))<br>                                                                                                                                                     : (whereExp == <span class="hljs-literal">null</span> ? expressionFuncEquals : Expression.And(whereExp, expressionFuncEquals)));<br>                                &#125;<br>                            &#125;<br>                        &#125;);<br>        <span class="hljs-keyword">return</span> Expression.Lambda&lt;Func&lt;TEntity, <span class="hljs-built_in">bool</span>&gt;&gt;(whereExp, paramExp); ;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 把查询条件拼接为Extensions</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TEntity&quot;&gt;</span>实体类<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;queryEntitys&quot;&gt;</span>查询实体<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Expression</span>&lt;<span class="hljs-title">Func</span>&lt;<span class="hljs-title">TEntity</span>, <span class="hljs-title">bool</span>&gt;&gt; <span class="hljs-title">GetSerchExtensions</span>&lt;<span class="hljs-title">TEntity</span>&gt;(<span class="hljs-params">List&lt;QueryEntity&gt; queryEntitys</span>) <span class="hljs-keyword">where</span> TEntity : <span class="hljs-keyword">class</span>, <span class="hljs-keyword">new</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> paramExp = Expression.Parameter(<span class="hljs-keyword">typeof</span>(TEntity), <span class="hljs-string">&quot;a&quot;</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == queryEntitys || !queryEntitys.Any())<br>        &#123;<br>            <span class="hljs-keyword">var</span> valueEqual = Expression.Constant(<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">var</span> expEqual = Expression.Equal(valueEqual, valueEqual);<br>            <span class="hljs-keyword">return</span> Expression.Lambda&lt;Func&lt;TEntity, <span class="hljs-built_in">bool</span>&gt;&gt;(expEqual, paramExp);  <span class="hljs-comment">//如果参数为空，返回一个a=&gt;1=1 的值</span><br><br>        &#125;<br>        <span class="hljs-keyword">var</span> modeltypt = <span class="hljs-keyword">typeof</span>(TEntity);  <span class="hljs-comment">//实体类型</span><br>        Expression whereExp = <span class="hljs-literal">null</span>;<br><br>        queryEntitys.ForEach(q =&gt;<br>                             &#123;<br>                                 LogicOperation searchType = q.LogicOperation;       <span class="hljs-comment">//查询方式</span><br>                                 PredicateType joinType = q.PredicateType;           <span class="hljs-comment">//连接方式</span><br>                                 <span class="hljs-keyword">var</span> searchField = q.Column;         <span class="hljs-comment">//查询的列名 name </span><br>                                 <span class="hljs-keyword">var</span> <span class="hljs-keyword">value</span> = q.Value;            <span class="hljs-comment">//值         123</span><br>                                 <span class="hljs-keyword">if</span> (modeltypt.GetProperties().Any(p =&gt; String.Equals(p.Name, searchField, StringComparison.CurrentCultureIgnoreCase)))  <span class="hljs-comment">//这个实体有这个列名</span><br>                                 &#123;<br>                                     <span class="hljs-keyword">var</span> firstOrDefault = modeltypt.GetProperties().FirstOrDefault(p =&gt; String.Equals(p.Name, searchField, StringComparison.CurrentCultureIgnoreCase));<br>                                     <span class="hljs-keyword">if</span> (firstOrDefault == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span>;<br>                                     <span class="hljs-keyword">var</span> selCol = firstOrDefault.Name;  <span class="hljs-comment">//查询的列名</span><br>                                     <span class="hljs-keyword">var</span> splitList = <span class="hljs-keyword">value</span>.ToString().Split(<span class="hljs-string">&#x27;,&#x27;</span>).ToList();   <span class="hljs-comment">//这个位置是的处理是默认认为当查询值中包含,的视为或者的查询：例如 A=&#x27;abc,def&#x27; 处理成 (A=&#x27;def&#x27; OR  A=&#x27;abc&#x27;),但是时间上这块无法满足就要查询包含,的数据的求</span><br>                                     <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; splitList.Count; i++)<br>                                     &#123;<br>                                         <span class="hljs-keyword">if</span> (splitList[i] == <span class="hljs-literal">null</span> || <span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(splitList[i])) <span class="hljs-keyword">continue</span>;<br>                                         <span class="hljs-keyword">var</span> expressionFuncEquals = PrepareConditionLambda&lt;TEntity&gt;(selCol, splitList[i], paramExp, searchType); <span class="hljs-comment">//得到这个查询的表达式</span><br>                                         whereExp = i != <span class="hljs-number">0</span><br>                                             ? (whereExp == <span class="hljs-literal">null</span> ? expressionFuncEquals : Expression.Or(whereExp, expressionFuncEquals))<br>                                             : (joinType == PredicateType.OR ? (whereExp == <span class="hljs-literal">null</span> ? expressionFuncEquals : Expression.Or(whereExp, expressionFuncEquals))<br>                                                : (whereExp == <span class="hljs-literal">null</span> ? expressionFuncEquals : Expression.And(whereExp, expressionFuncEquals)));<br>                                     &#125;<br>                                 &#125;<br>                             &#125;);<br>        <span class="hljs-keyword">return</span> Expression.Lambda&lt;Func&lt;TEntity, <span class="hljs-built_in">bool</span>&gt;&gt;(whereExp, paramExp); <br>    &#125;<br><br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 得到字段查询的表达式</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TEntity&quot;&gt;</span>实体<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;name&quot;&gt;</span>查询列名<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dateValue&quot;&gt;</span>数据值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;paramExp&quot;&gt;</span>参数<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;searchType&quot;&gt;</span>查询方式(默认是等于查询)<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Expression <span class="hljs-title">PrepareConditionLambda</span>&lt;<span class="hljs-title">TEntity</span>&gt;(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">object</span> dateValue, ParameterExpression paramExp, LogicOperation searchType = LogicOperation.EQUAL</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (dateValue == <span class="hljs-literal">null</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;dateValue&quot;</span>);<br>        <span class="hljs-keyword">if</span> (paramExp == <span class="hljs-literal">null</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-string">&quot;paramExp&quot;</span>);<br>        <span class="hljs-keyword">var</span> exp = Expression.Property(paramExp, name);<br>        <span class="hljs-keyword">var</span> propertyType = <span class="hljs-keyword">typeof</span>(TEntity).GetProperty(name).PropertyType; <span class="hljs-comment">//得到此字段的数据类型</span><br>        <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span>; <span class="hljs-comment">//propertyType == typeof(Guid?) ? new Guid(dateValue.ToString()) : Convert.ChangeType(dateValue, TypeHelper.GetUnNullableType(propertyType));</span><br>        <span class="hljs-keyword">if</span> (propertyType == <span class="hljs-keyword">typeof</span>(Guid?) || propertyType == <span class="hljs-keyword">typeof</span>(Guid))<br>        &#123;<br>            <span class="hljs-keyword">value</span> = <span class="hljs-keyword">new</span> Guid(dateValue.ToString());<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">value</span> = Convert.ChangeType(dateValue, TypeHelper.GetUnNullableType(propertyType));<br>        &#125;<br>        Expression expEqual = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (searchType)<br>        &#123;<br>            <span class="hljs-keyword">case</span> LogicOperation.EQUAL:   <span class="hljs-comment">//等于查询</span><br>                <span class="hljs-keyword">var</span> valueEqual = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType); <span class="hljs-comment">//值</span><br>                expEqual = Expression.Equal(exp, valueEqual); <span class="hljs-comment">//拼接成 t=&gt;t.name=valueEqual</span><br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> LogicOperation.LIKE:   <span class="hljs-comment">//模糊查询</span><br>                <span class="hljs-keyword">var</span> containsMethod = <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">string</span>).GetMethod(<span class="hljs-string">&quot;Contains&quot;</span>);<br>                <span class="hljs-keyword">var</span> valueLike = Expression.Constant(<span class="hljs-keyword">value</span>, propertyType);<br>                expEqual = Expression.Call(exp, containsMethod, valueLike);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> expEqual;<br>    &#125;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20181005154806206-690330382.png" alt="img"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20181005154841037-1651076712.png" alt="img"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20181006205821996-188650883.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oralce Note</title>
    <link href="/2021/11/01/Oralce-Note/"/>
    <url>/2021/11/01/Oralce-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Oralce-锁表"><a href="#Oralce-锁表" class="headerlink" title="Oralce 锁表"></a>Oralce 锁表</h2><ol><li><p>查询Oracle锁表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sess.sid,<br>       sess.serial#,<br>       lo.oracle_username,<br>       lo.os_user_name,<br>       ao.object_name,<br>       lo.locked_mode<br>  <span class="hljs-keyword">from</span> v$locked_object lo, dba_objects ao, v$session sess<br> <span class="hljs-keyword">where</span> ao.object_id <span class="hljs-operator">=</span> lo.object_id<br>   <span class="hljs-keyword">and</span> lo.session_id <span class="hljs-operator">=</span> sess.sid;<br></code></pre></td></tr></table></figure></li><li><p>杀掉锁表进程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">system</span> kill session <span class="hljs-string">&#x27;68,51&#x27;</span>;<span class="hljs-comment">--分别为SID和SERIAL#号</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="Oracle-DBlink"><a href="#Oracle-DBlink" class="headerlink" title="Oracle DBlink"></a>Oracle DBlink</h2><ol><li><p>新建OracleDBlink 脚本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> PUBLIC DATABASE LINK XX_DBLINK <span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">TO</span> 用户名（小写） IDENTIFIED <span class="hljs-keyword">BY</span> 密码（小写） <span class="hljs-keyword">USING</span> <span class="hljs-string">&#x27;(DESCRIPTION =</span><br><span class="hljs-string">(ADDRESS_LIST =</span><br><span class="hljs-string">(ADDRESS = (PROTOCOL = TCP)(HOST = 目标数据库IP)(PORT = 目标数据库端口))</span><br><span class="hljs-string">)</span><br><span class="hljs-string">(CONNECT_DATA =</span><br><span class="hljs-string">(SERVICE_NAME = 目标数据库服务名)</span><br><span class="hljs-string">)</span><br><span class="hljs-string">)&#x27;</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="Oracle-SEQUENCE"><a href="#Oracle-SEQUENCE" class="headerlink" title="Oracle SEQUENCE"></a>Oracle SEQUENCE</h2><p>​        序列(SEQUENCE)是序列号生成器，可以为表中的行自动生成序列号，产生一组等间隔的数值(类型为数字)。不占用磁盘空间，占用内存。</p><p>其主要用途是生成表的主键值，可以在插入语句中引用，也可以通过查询检查当前值，或使序列增至下一个值。</p><p>之前用的自增序列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence SEQ_BlogTestID<br>minvalue <span class="hljs-number">1</span><br>maxvalue <span class="hljs-number">999999999999999999999999999</span><br><span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> <span class="hljs-number">1</span><br>increment <span class="hljs-keyword">by</span> <span class="hljs-number">1</span><br>cache <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><p>基本语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> SEQUENCE 序列名<br><br>　　[INCREMENT <span class="hljs-keyword">BY</span> n]<br><br>　　[<span class="hljs-keyword">START</span> <span class="hljs-keyword">WITH</span> n]<br><br>　　[&#123;MAXVALUE<span class="hljs-operator">/</span> MINVALUE n<span class="hljs-operator">|</span> NOMAXVALUE&#125;]<br><br>　　[&#123;<span class="hljs-keyword">CYCLE</span><span class="hljs-operator">|</span>NOCYCLE&#125;]<br><br>　　[&#123;CACHE n<span class="hljs-operator">|</span> NOCACHE&#125;];<br></code></pre></td></tr></table></figure><ol><li><p> INCREMENT BY用于定义序列的步长，如果省略，则默认为1，如果出现负值，则代表Oracle序列的值是按照此步长递减的。</p></li><li><p> START WITH 定义序列的初始值(即产生的第一个值)，默认为1。</p></li><li><p> MAXVALUE 定义序列生成器能产生的最大值。选项NOMAXVALUE是默认选项，代表没有最大值定义，这时对于递增Oracle序列，系统能够产生的最大值是10的27次方;对于递减序列，最大值是-1。</p></li><li><p> MINVALUE定义序列生成器能产生的最小值。选项NOMAXVALUE是默认选项，代表没有最小值定义，这时对于递减序列，系统能够产生的最小值是?10的26次方;对于递增序列，最小值是1。</p></li><li><p>CYCLE和NOCYCLE 表示当序列生成器的值达到限制值后是否循环。CYCLE代表循环，NOCYCLE代表不循环。如果循环，则当递增序列达到最大值时，循环到最小值;对于递减序列达到最小值时，循环到最大值。如果不循环，达到限制值后，继续产生新值就会发生错误。</p></li><li><p>CACHE(缓冲)定义存放序列的内存块的大小，默认为20。NOCACHE表示不对序列进行内存缓冲。对序列进行内存缓冲，可以改善序列的性能。</p><p>大量语句发生请求，申请序列时，为了避免序列在运用层实现序列而引起的性能瓶颈。Oracle序列允许将序列提前生成 cache x个先存入内存，在发生大量申请序列语句时，可直接到运行最快的内存中去得到序列。但cache个数也不能设置太大，因为在数据库重启时，会清空内存信息，预存在内存中的序列会丢失，当数据库再次启动后，序列从上次内存中最大的序列号+1 开始存入cache x个。这种情况也能会在数据库关闭时也会导致序号不连续。</p></li><li><p>NEXTVAL 返回序列中下一个有效的值，任何用户都可以引用。</p></li><li><p>CURRVAL 中存放序列的当前值,NEXTVAL 应在 CURRVAL 之前指定 ，二者应同时有效。</p></li></ol><h2 id="TableSpace"><a href="#TableSpace" class="headerlink" title="TableSpace"></a>TableSpace</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> a.tablespace_name tablespace_name<br>,nvl(<span class="hljs-built_in">ceil</span>((<span class="hljs-number">1</span> <span class="hljs-operator">-</span> b.free <span class="hljs-operator">/</span> a.total) <span class="hljs-operator">*</span> <span class="hljs-number">100</span>), <span class="hljs-number">100</span>) &quot;usage_of_tablespace%&quot;<br>,nvl(b.free, <span class="hljs-number">0</span>) &quot;left_space(M)&quot;<br>,c.extent_management &quot;Extent_management&quot;<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> tablespace_name, <span class="hljs-built_in">sum</span>(nvl(bytes, <span class="hljs-number">0</span>)) <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> total<br><span class="hljs-keyword">from</span> dba_data_files<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> tablespace_name) a<br>,(<span class="hljs-keyword">select</span> tablespace_name, <span class="hljs-built_in">sum</span>(nvl(bytes, <span class="hljs-number">0</span>)) <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-keyword">free</span><br><span class="hljs-keyword">from</span> dba_free_space<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> tablespace_name) b<br>,dba_tablespaces c<br><span class="hljs-keyword">where</span> a.tablespace_name <span class="hljs-operator">=</span> c.tablespace_name<br><span class="hljs-keyword">and</span> c.tablespace_name <span class="hljs-operator">=</span> b.tablespace_name(<span class="hljs-operator">+</span>);<br><br><br><span class="hljs-keyword">SELECT</span> a.tablespace_name &quot;表空间名&quot;,<br>       total &quot;表空间大小&quot;,<br>       <span class="hljs-keyword">free</span> &quot;表空间剩余大小&quot;,<br>       (total <span class="hljs-operator">-</span> <span class="hljs-keyword">free</span>) &quot;表空间使用大小&quot;,<br>       total <span class="hljs-operator">/</span> (<span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span>) &quot;表空间大小(G)&quot;,<br>       <span class="hljs-keyword">free</span> <span class="hljs-operator">/</span> (<span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span>) &quot;表空间剩余大小(G)&quot;,<br>       (total <span class="hljs-operator">-</span> <span class="hljs-keyword">free</span>) <span class="hljs-operator">/</span> (<span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span>) &quot;表空间使用大小(G)&quot;,<br>       round((total <span class="hljs-operator">-</span> <span class="hljs-keyword">free</span>) <span class="hljs-operator">/</span> total, <span class="hljs-number">4</span>) <span class="hljs-operator">*</span> <span class="hljs-number">100</span> &quot;使用率 %&quot;<br>  <span class="hljs-keyword">FROM</span> (<span class="hljs-keyword">SELECT</span> tablespace_name, <span class="hljs-built_in">SUM</span>(bytes) <span class="hljs-keyword">free</span><br>          <span class="hljs-keyword">FROM</span> dba_free_space<br>         <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> tablespace_name) a,<br>       (<span class="hljs-keyword">SELECT</span> tablespace_name, <span class="hljs-built_in">SUM</span>(bytes) total<br>          <span class="hljs-keyword">FROM</span> dba_data_files<br>         <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> tablespace_name) b <br> <span class="hljs-keyword">WHERE</span> a.tablespace_name <span class="hljs-operator">=</span> b.tablespace_name;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Oracle</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang Note</title>
    <link href="/2021/10/31/Golang-Note/"/>
    <url>/2021/10/31/Golang-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p><a href="http://c.biancheng.net/golang/">Go语言入门教程，Golang入门教程（非常详细） (biancheng.net)</a></p><h3 id="Go编译器"><a href="#Go编译器" class="headerlink" title="Go编译器"></a><code>Go</code>编译器</h3><p><a href="https://golang.google.cn/dl/">Downloads - Go</a></p><p>安装位置：</p><p><code>C:\Program Files\Go</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210502222044326.png" alt="image-20210502222044326"></p><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul><li><p>创建一个任意的目录 <code>GolangProjects</code>,目录结构如下</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">GolangProjects<br><br><span class="hljs-params">--bin</span><br><br><span class="hljs-params">---</span> crm.exe <span class="hljs-string">//</span>主程序入口文件<br><br><span class="hljs-params">--pkg</span><br><br><span class="hljs-params">---</span> commlib.A <span class="hljs-string">//</span>包文件<br><br><span class="hljs-params">--src</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li>添加环境变量 <code>GOROOT</code> : <code>C:\Program Files\Go</code>   <em>Go 编译器的安装目录</em></li><li>添加环境变量 <code>GOBIN</code> : <code>E:\Code\GoLangProjects\bin</code> <em>方便直接 Go</em></li><li>添加环境变量 <code>GOPATH</code>: <code>E:\Code\GoLangProjects</code></li></ul><h3 id="vs-code-配置环境"><a href="#vs-code-配置环境" class="headerlink" title="vs code 配置环境"></a><code>vs code</code> 配置环境</h3><h4 id="tools-怎么来的"><a href="#tools-怎么来的" class="headerlink" title="tools 怎么来的"></a>tools 怎么来的</h4><ul><li><p>github中文：<a href="https://github.com/Go-zh/tools.git">https://github.com/Go-zh/tools.git</a></p></li><li><p>github英文：<a href="https://github.com/golang/tools.git">https://github.com/golang/tools.git</a></p><p>上述俩 GitHub 地址没有通天的手段基本上是整不下来的，这个时候 <code>码云</code>可以出来了</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210519002835.png" alt="image-20210519002803186"></p><p>把上述的那俩git地址都挪到码云里，这个方便本地clone</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210519003137.png" alt="image-20210519003137754"></p></li></ul><h4 id="Clone-无需多言"><a href="#Clone-无需多言" class="headerlink" title="Clone 无需多言"></a>Clone 无需多言</h4><p>推荐使用：SourceTree ,主要界面看着挺爽</p><h4 id="怎么摆放"><a href="#怎么摆放" class="headerlink" title="怎么摆放"></a>怎么摆放</h4><p>在本地<code>go_path</code> 目录下新建文件夹，如下结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs go">-- <span class="hljs-keyword">go</span> path<br>--- bin<br>--- pkg<br>--- src<br>---- github.com<br>------ Go-zh<br>------- tools <span class="hljs-comment">//https://github.com/Go-zh/tools.git</span><br>---- golang.org<br>----- x<br>------ mod <span class="hljs-comment">//https://github.com/golang/mod.git</span><br>------ sys <span class="hljs-comment">//https://github.com/golang/sys.git</span><br>------ tools <span class="hljs-comment">//https://github.com/golang/tools.git</span><br>------ xerrors <span class="hljs-comment">//https://github.com/golang/xerrors.git</span><br></code></pre></td></tr></table></figure><h4 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go">打开 <span class="hljs-keyword">go</span>-path 目录的下的src 目录，地址栏里输入 cmd ，启动终端，输入如下命令：<br><br><span class="hljs-number">1.</span> <span class="hljs-keyword">go</span> install golang.org/x/tools/cmd/guru<br><span class="hljs-number">2.</span> <span class="hljs-keyword">go</span> install golang.org/x/tools/cmd/gorename<br><span class="hljs-number">3.</span> <span class="hljs-keyword">go</span> install golang.org/x/tools/cmd/fiximports<br><span class="hljs-number">4.</span> <span class="hljs-keyword">go</span> install golang.org/x/tools/cmd/gopls <br><span class="hljs-number">5.</span> <span class="hljs-keyword">go</span> install golang.org/x/tools/cmd/godex<br></code></pre></td></tr></table></figure><p>注意：</p><p>我个人在第4点出错了，原因是因为英文官方的tools中按照位置找过去没有gopls；</p><p>百度过后才下载的中文社区的，由此才看到前面的目录结构。</p><p>所以到这要安装<code>gopls</code>,执行如下命令：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">go</span> install github.com/Go-zh/tools/cmd/gopls<br></code></pre></td></tr></table></figure><h4 id="vscode运行代码"><a href="#vscode运行代码" class="headerlink" title="vscode运行代码"></a><code>vscode</code>运行代码</h4><ul><li><p>一般姿势：</p><p>启动vscode终端，cd 到 <code>go-path</code> 目录下的<code>src</code>,再找到指定指定<code>go</code>文件，例如：<code>go run app.go</code></p></li><li><p>进阶姿势：</p><p>启动vscode扩展，安装 code run 插件，安装按完重启编辑器，只需要右键选择code run 即可，或者快捷键 <code>ctrl + alt + n</code></p></li></ul><h3 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h3><p><code>src</code> 目录下添加go文件</p><p>-<code>src</code></p><p>–<code>crm</code></p><p>—<code>app.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go">-- app.<span class="hljs-keyword">go</span><br><br><span class="hljs-keyword">package</span>  main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>  &#123;<br>fmt.Printf(<span class="hljs-string">&quot;Hello Go~ 叫爸爸~&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>–<code>commlib</code></p><p>—<code>page</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> commlib<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Add</span><span class="hljs-params">(i <span class="hljs-type">int</span> ,j <span class="hljs-type">int</span>)</span></span><span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> i+j<br>&#125;<br></code></pre></td></tr></table></figure><p>运行有三种方式：</p><pre><code class="hljs">进入项目目录执行：</code></pre><ul><li><code>go run app.go</code></li><li><code>go build app.go</code> 执行完此命令后，会在同级目录下面添加同名exe<code>app.exe</code>可执行程序，然后<code>cmd</code>中执行<code>exe</code>程序即可。与第一种方式相同，只是<code>go run</code> 相当于一起把此方式中的两步骤一次执行完毕。</li><li><code>go install</code> 执行完命令后，会在外面那个<code>Bin</code> 文件夹生产一个<code>exe</code>可执行文件，<code>crm.exe</code>,也可以在<code>cmd</code>命令中执行，于上面第二种方式的区别在于，会在<code>Bin</code>文件夹中生成<code>exe</code>可执行文件。但是如果生成的项目不是主程序入口、只有方法的话，就会生成包文件<code>commlib.A</code>文件，类似于C# 中类，存放在bin文件夹的同级目录<code>pkg</code>文件夹中。</li></ul><h2 id="Go-包管理"><a href="#Go-包管理" class="headerlink" title="Go 包管理"></a><code>Go</code> 包管理</h2><h3 id="初识包管理"><a href="#初识包管理" class="headerlink" title="初识包管理"></a>初识包管理</h3><ul><li>一个文件夹也可以称之为一个包</li><li>在文件夹（包）中可以创建多个文件</li><li>在同一个包下的每个文件中必须指定<code>包名称且相同</code></li></ul><h3 id="包的分类"><a href="#包的分类" class="headerlink" title="包的分类"></a>包的分类</h3><ul><li><code>main</code>包，如果是<code>main</code>包，必须写一个 <code>main</code>函数，以此作为程序的入口，又称为主函数，编译生成后会生成一个可执行文件。</li><li>非<code>main</code>包</li></ul><h3 id="调用包"><a href="#调用包" class="headerlink" title="调用包"></a>调用包</h3><p>调用包文件内的方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span>  main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;commlib&quot;</span> <span class="hljs-comment">//这里会引入包</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;strconv&quot;</span> <span class="hljs-comment">//引入包</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>  &#123;<br>    <span class="hljs-comment">//println 自带输出换行</span><br>fmt.Println(<span class="hljs-string">&quot;Hello Go~ &quot;</span>)<br><span class="hljs-comment">//调用</span><br><span class="hljs-keyword">var</span> num <span class="hljs-type">int</span> = commlib.Add(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>)<br>    <span class="hljs-comment">//strconv.itba()方法，int 转 string</span><br>fmt.Println(strconv.Itoa(num))<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> commlib<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Add</span><span class="hljs-params">(i <span class="hljs-type">int</span> ,j <span class="hljs-type">int</span>)</span></span><span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> i+j<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="包定义规范"><a href="#包定义规范" class="headerlink" title="包定义规范"></a>包定义规范</h3><ul><li>定义包文件之后，包内的函数首字母必须得大写</li><li>大写和小写的区别：<ul><li>大写：类似于C# 中的 <strong>public</strong> 修饰符，包的外部可以进行调用</li><li>小写：类似于C# 中的 <strong>internal</strong>修饰符，仅限于包内部使用</li></ul></li></ul><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210505225640086.png" alt="image-20210505225640086"></p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>在终端输出前置语言例如：请输入账户名或者密码等等…</p><ul><li>内置函数<ul><li><code>print </code><ul><li>默认打印两个<code>print</code> 是连在一起的，如果想要达到换行效果需要在内容尾部加上<code>\n</code></li></ul></li><li><code>println</code><ul><li>默认打印两个<code>println</code> 是自带换行效果的</li></ul></li></ul></li><li><code>fmt</code><ul><li><code>fmt.print</code> <ul><li>效果通内置函数 print 相仿</li></ul></li><li><code>fmt.println</code><ul><li>同上，平时推荐使用此方法</li></ul></li><li><code>fmt.println</code>扩展：<ul><li><code>fmt.println(&quot;我叫&quot;,&quot;Harris&quot;,&quot;年龄&quot;,&quot;18&quot;)</code> 中间自带空格</li><li>格式化显示：<ul><li><code>fmt.printF()</code> </li></ul></li></ul></li></ul></li><li>在以上两种方式的输出中推荐使用 <code>fmt</code>,原因：<ul><li><code>Golang</code>官方给出的回答是，在以后的规划中，不保证内置函数可以继续使用，为防止后面禁用内置函数后，代码出问题。</li></ul></li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li>单行注释 //</li><li>多行注释 /*  */</li><li><code>GoLand</code> 快捷键 <code>Ctrl+?</code></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li><p><strong>概述</strong></p><ul><li>Go 是静态类型语⾔，不能在运⾏期改变变量类型</li><li>使⽤关键字 var 定义变量，⾃动初始化为零值。如果提供初始化值，可省略变量类型，由 编译器⾃动推断。</li><li><strong>声明的变量必须使用</strong> <strong>如果声明不使用，则报错</strong>  <em>编译器会将未使⽤的局部变量当做错误</em></li></ul></li><li><p><strong>变量的作用域</strong> </p><ul><li><p>全局变量：没有写在函数内的变量，称之为全局变量，个人理解。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> name <span class="hljs-type">string</span> = <span class="hljs-string">&quot;Harris&quot;</span><br><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;Harris&quot;</span><br><span class="hljs-keyword">var</span> &#123;<br>    v1 = <span class="hljs-string">&quot;a&quot;</span><br>    v2 = <span class="hljs-string">&quot;b&quot;</span><br>    v3 = <span class="hljs-number">18</span><br>    v4 <span class="hljs-type">int</span><br>&#125;<br>name := <span class="hljs-string">&quot;Harris&quot;</span> <span class="hljs-comment">//这种不行滴</span><br></code></pre></td></tr></table></figure></li><li><p>局部变量：函数内的变量 <em>局部就和C#差不多了</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">var</span> name <span class="hljs-type">string</span> = <span class="hljs-string">&quot;Harris&quot;</span>   <br>    name := <span class="hljs-string">&quot;Harris&quot;</span>    <br>    <span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;Harris&quot;</span>    <br>    <span class="hljs-keyword">var</span>&#123;<br>        name = <span class="hljs-string">&quot;Harris&quot;</span><br>        age = <span class="hljs-number">18</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>多变量赋值时，先计算所有相关值，然后再从左到右依次赋值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs go">data, i := [<span class="hljs-number">3</span>]<span class="hljs-type">int</span>&#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;, <span class="hljs-number">0</span><br>i, data[i] = <span class="hljs-number">2</span>, <span class="hljs-number">100</span> <span class="hljs-comment">// (i = 0) -&gt; (i = 2), (data[0] = 100)</span><br>fmt.Println(i,data)<br><span class="hljs-comment">//结果：2 [100 1 2]</span><br></code></pre></td></tr></table></figure></li><li><p>特殊只写变量 “_”，⽤于忽略值占位</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">test</span><span class="hljs-params">()</span></span> (<span class="hljs-type">int</span>, <span class="hljs-type">string</span>) &#123;<br> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-string">&quot;abc&quot;</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>     _, s := test()<br>     fmt.Println(s)<br>    <span class="hljs-comment">//结果：abc</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>编译器会将未使⽤的局部变量当做错误</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br> i := <span class="hljs-number">0</span> <span class="hljs-comment">// Error: i declared and not used。(可使⽤ &quot;_ = i&quot; 规避)</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><ul><li><p>常量值必须是编译期间固定的数字、字符串、布尔值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span> x,y <span class="hljs-type">int</span> = <span class="hljs-number">1</span>,<span class="hljs-number">2</span>     <span class="hljs-comment">//多常量初始化</span><br><br><span class="hljs-keyword">const</span> z = <span class="hljs-string">&quot;Hello World&quot;</span> <span class="hljs-comment">//类型推断</span><br><br><span class="hljs-keyword">const</span>&#123;<br>    a,b = <span class="hljs-number">1</span>,<span class="hljs-number">2</span><br>    c <span class="hljs-type">bool</span> = <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">const</span> x = <span class="hljs-string">&quot;xxxx&quot;</span> <span class="hljs-comment">//这个时候如果没有使用上述已经定义好的常量，不会报错</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>常量可以使用在编译期间确定的函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span> a,b <span class="hljs-type">int</span> =<span class="hljs-number">1</span>,<span class="hljs-number">2</span><br><br><span class="hljs-keyword">const</span> c = <span class="hljs-string">&quot;abc&quot;</span><br><br><span class="hljs-keyword">const</span> x = <span class="hljs-built_in">len</span>(c)<br><br><span class="hljs-keyword">const</span> y = unsafe.Sizeof(x) <span class="hljs-comment">//这个方法是用来计算字节的，64为系统中，字符串和整形的字节一个都是8</span><br><br>fmt.Println(a)<br><br>fmt.Println(b)<br><br>fmt.Println(c)<br><br>fmt.Println(x)<br><br>fmt.Println(y)<br><br><span class="hljs-comment">//结果：</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1</span><br><span class="hljs-comment">2</span><br><span class="hljs-comment">abc</span><br><span class="hljs-comment">3</span><br><span class="hljs-comment">8*/</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><ul><li><p>关键字 iota 定义常量组中从 0 开始按⾏计数的⾃增枚举值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span>(<br>    Sunday = <span class="hljs-literal">iota</span>   <span class="hljs-comment">//0</span><br>    Monday          <span class="hljs-comment">//1,通常省略后面的表达式</span><br>    Tuesday<span class="hljs-comment">//2</span><br>    Wednesday<span class="hljs-comment">//3</span><br>    Thursday<span class="hljs-comment">//4</span><br>    Friday<span class="hljs-comment">//5</span><br>    Saturday<span class="hljs-comment">//6</span><br>)<br><span class="hljs-keyword">const</span> (<br>    _ = <span class="hljs-literal">iota</span> <span class="hljs-comment">// iota = 0</span><br>    KB <span class="hljs-type">int64</span> = <span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">10</span> * <span class="hljs-literal">iota</span>) <span class="hljs-comment">// iota = 1  &lt;&lt; 是左移运算符</span><br>    MB <span class="hljs-comment">// 与 KB 表达式相同，但 iota = 2</span><br>    GB<br>    TB<br>)<br><br>fmt.Println(KB,MB,GB) <span class="hljs-comment">//1024 1048576 1073741824</span><br></code></pre></td></tr></table></figure></li><li><p>在同⼀常量组中，可以提供多个 iota，它们各⾃增⻓。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span> (<br>    A, B = <span class="hljs-literal">iota</span>, <span class="hljs-literal">iota</span> &lt;&lt; <span class="hljs-number">10</span> <span class="hljs-comment">// 0, 0 &lt;&lt; 10</span><br>    C, D <span class="hljs-comment">// 1, 1 &lt;&lt; 10</span><br>)<br><br>fmt.Println(A,B,C,D) <span class="hljs-comment">//0 0 1 1024</span><br></code></pre></td></tr></table></figure></li><li><p>如果 iota ⾃增被打断，须显式恢复</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span> (<br>    A = <span class="hljs-literal">iota</span> <span class="hljs-comment">// 0</span><br>    B <span class="hljs-comment">// 1</span><br>    C = <span class="hljs-string">&quot;c&quot;</span> <span class="hljs-comment">// c</span><br>    D <span class="hljs-comment">// c，与上⼀⾏相同。</span><br>    E = <span class="hljs-literal">iota</span> <span class="hljs-comment">// 4，显式恢复。注意计数包含了 C、D 两⾏。</span><br>    F <span class="hljs-comment">// 5</span><br>)<br><br>fmt.Println(A,B,C,D,E,F)<span class="hljs-comment">//0 1 c c 4 5</span><br></code></pre></td></tr></table></figure></li><li><p>可通过⾃定义类型来实现枚举类型限制</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">type</span> Color <span class="hljs-type">int</span><br><br><span class="hljs-keyword">const</span> (<br>     Black Color = <span class="hljs-literal">iota</span><br>     Red<br>     Blue<br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">test</span><span class="hljs-params">(c Color)</span></span>Color &#123;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>     c := Black<br>     fmt.Println(test(c))     <span class="hljs-comment">// 0</span><br>     x := <span class="hljs-number">1</span><br>     test(x) <span class="hljs-comment">// Error: cannot use x (type int) as type Color in function argument;写的时候就会报错没法转换</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210515232851.png" alt="image-20210515232851239"></p><ul><li>空指针值 nil，⽽⾮ C/C++ NULL。</li></ul><h4 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h4><h5 id="切片-Slice"><a href="#切片-Slice" class="headerlink" title="切片(Slice)"></a>切片(Slice)</h5><p>实现类似动态数组的功能</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> commlib<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">SliceTest1</span><span class="hljs-params">()</span></span>  &#123;<br>x:=<span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>)<span class="hljs-comment">//声明一个容量为5的切片</span><br><br><span class="hljs-keyword">for</span> i:=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++ &#123;<br>x= <span class="hljs-built_in">append</span>(x,i) <span class="hljs-comment">//向切片内追加数据，当超出容量后，自动分配更大的容量空间</span><br>&#125;<br><br>fmt.Println(x)<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210514230715956.png" alt="image-20210514230715956"></p><h5 id="channel-通道"><a href="#channel-通道" class="headerlink" title="channel 通道"></a>channel 通道</h5><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210519220142.png" alt="image-20210519220142304"></p><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><h4 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> commlib<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">//ExpressionTest</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ExpressionTest</span><span class="hljs-params">()</span></span>  &#123;<br><br><span class="hljs-comment">//if</span><br>fmt.Println(<span class="hljs-string">&quot;******IF******&quot;</span>)<br>    <br>x:=<span class="hljs-number">100</span><br>y:=<span class="hljs-number">6</span><br><br><span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">0</span>&#123;<br>fmt.Println(<span class="hljs-string">&quot;x+&quot;</span>)<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>&#123;<br>fmt.Println(<span class="hljs-string">&quot;x-&quot;</span>)<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;0&quot;</span>)<br>&#125;<br><br><span class="hljs-comment">// swich</span><br>fmt.Println(<span class="hljs-string">&quot;******swich******&quot;</span>)<br>    <br><span class="hljs-keyword">switch</span> &#123;<br><span class="hljs-keyword">case</span> x &gt; <span class="hljs-number">0</span>:<br>fmt.Println(<span class="hljs-string">&quot;100&quot;</span>)<br><span class="hljs-keyword">case</span> x&lt;<span class="hljs-number">0</span>:<br>fmt.Println(<span class="hljs-string">&quot;250&quot;</span>)<br><span class="hljs-keyword">default</span>:<br>fmt.Println(<span class="hljs-string">&quot;俩250&quot;</span>)<br>&#125;<br><br><span class="hljs-comment">// for</span><br>fmt.Println(<span class="hljs-string">&quot;******for++******&quot;</span>)<br>    <br><span class="hljs-keyword">for</span> i:=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++ &#123;<br>fmt.Println(i)<br>&#125;<br>    <br>fmt.Println(<span class="hljs-string">&quot;******for--******&quot;</span>)<br>    <br><span class="hljs-keyword">for</span> i:=<span class="hljs-number">5</span>;i&gt;<span class="hljs-number">1</span>;i--&#123;<br>fmt.Println(i)<br>&#125;<br>    <br>fmt.Println(<span class="hljs-string">&quot;******相当于while(x&lt;10)******&quot;</span>)<br><br>    <span class="hljs-keyword">for</span> y&lt;<span class="hljs-number">10</span>&#123;<br><br>y++<br><br>fmt.Println(y)<br>&#125;<br><br>    fmt.Println(<span class="hljs-string">&quot;******相当于while(true)******&quot;</span>)<br><br>    <span class="hljs-keyword">for</span>&#123;<br>fmt.Println(x)<br><br>x = x<span class="hljs-number">-50</span><br><br><span class="hljs-keyword">if</span> x == <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><br>    fmt.Println(<span class="hljs-string">&quot;******返回索引和值******&quot;</span>)<br><br>    arr:=[]<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br><br><span class="hljs-keyword">for</span> i,n := <span class="hljs-keyword">range</span> arr&#123;<br>fmt.Println(i,<span class="hljs-string">&quot;:&quot;</span>,n)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行结果：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210514224453702.png" alt="image-20210514224453702"></p><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><blockquote><p><code>for</code> 标签</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs go">fmt.Println(<span class="hljs-string">&quot;给For 打标签，应用 break | continue 跳出或者终止循环&quot;</span>)<br><br>f1:<span class="hljs-keyword">for</span> i:=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++&#123; <span class="hljs-comment">//f1 标签</span><br>    <span class="hljs-keyword">for</span> j:=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">4</span>;j++&#123;<br>        <span class="hljs-keyword">if</span> i==<span class="hljs-number">2</span>&#123;<br>            <span class="hljs-keyword">break</span> f1  <span class="hljs-comment">//此处结束的循环是f1 标签所对应的i for 循环</span><br>        &#125;<br>        fmt.Println(i,j)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210515195143.png" alt="image-20210515165154495"></p><h4 id="goto-跳跃"><a href="#goto-跳跃" class="headerlink" title="goto 跳跃"></a><code>goto</code> 跳跃</h4><ul><li>跳跃到指定行，然后向下执行代码</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> api<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">GotoMethod</span><span class="hljs-params">()</span></span>  &#123;<br>fmt.Println(<span class="hljs-string">&quot;请输入姓名：&quot;</span>)<br><span class="hljs-keyword">var</span> name <span class="hljs-type">string</span><br>fmt.Scanln(&amp;name)<br><br><span class="hljs-keyword">if</span> name == <span class="hljs-string">&quot;Harris&quot;</span>&#123;<br><span class="hljs-keyword">goto</span> SVIP<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> name==<span class="hljs-string">&quot;Dongjie&quot;</span>&#123;<br><span class="hljs-keyword">goto</span> VIP<br>&#125;<br><br>fmt.Println(<span class="hljs-string">&quot;预约...&quot;</span>)<br>VIP:<br>fmt.Println(<span class="hljs-string">&quot;等号...&quot;</span>)<br>SVIP:<br>fmt.Println(<span class="hljs-string">&quot;治疗...&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210517214916.png" alt="image-20210517214916383"><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210517214945.png" alt="image-20210517214945026"><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210517215011.png" alt="image-20210517215011356"></p><h4 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> api<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">StringFormatMenthod</span><span class="hljs-params">()</span></span>  &#123;<br><span class="hljs-keyword">var</span> name,address,action <span class="hljs-type">string</span><br><br>fmt.Println(<span class="hljs-string">&quot;请输入姓名&quot;</span>)<br><br>fmt.Scanln(&amp;name)<br><br>fmt.Println(<span class="hljs-string">&quot;请输入地址&quot;</span>)<br><br>fmt.Scanln(&amp;address)<br><br>fmt.Println(<span class="hljs-string">&quot;请输入行为&quot;</span>)<br><br>fmt.Scanln(&amp;action)<br><br>result := fmt.Sprintf(<span class="hljs-string">&quot;我叫%s,我正在%s旁边%s&quot;</span>,name,address,action)<br><br>fmt.Println(result)<br>&#125;<br></code></pre></td></tr></table></figure><p>输出：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210517220631.png" alt="image-20210517220631093"></p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><p>进制转换：</p><p>例如：101000 -&gt; 2*5 + 2**3 -&gt; 32 + 8 = 40</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-number">1.</span> 按位进行与运算(全为<span class="hljs-number">1</span>，才得<span class="hljs-number">1</span>)<br><br>r1 := <span class="hljs-number">5</span> &amp; <span class="hljs-number">99</span><br><span class="hljs-number">5</span>  -&gt; <span class="hljs-number">0000101</span><br><span class="hljs-number">99</span> -&gt; <span class="hljs-number">1100011</span><br>      <span class="hljs-number">0000001</span> -&gt; <span class="hljs-number">1</span><br><br><span class="hljs-number">2.</span> 按位进行或运算(只要有<span class="hljs-number">1</span>，就得<span class="hljs-number">1</span>)<br><br>r2 := <span class="hljs-number">5</span> | <span class="hljs-number">99</span><br><span class="hljs-number">5</span>  -&gt; <span class="hljs-number">0000101</span><br><span class="hljs-number">99</span> -&gt; <span class="hljs-number">1100011</span><br>      <span class="hljs-number">1100111</span> -&gt; <span class="hljs-number">2</span>*<span class="hljs-number">6</span> +<span class="hljs-number">2</span>*<span class="hljs-number">5</span> +<span class="hljs-number">2</span>*<span class="hljs-number">2</span> + <span class="hljs-number">2</span>*<span class="hljs-number">1</span> + <span class="hljs-number">2</span>*<span class="hljs-number">0</span> -&gt; <span class="hljs-number">64</span>+<span class="hljs-number">32</span>+<span class="hljs-number">4</span>+<span class="hljs-number">2</span>+<span class="hljs-number">1</span> = <span class="hljs-number">103</span><br><br><span class="hljs-number">3.</span> 按位进行异或运算(上下不同，就得<span class="hljs-number">1</span>)<br><br>r3 := <span class="hljs-number">5</span> ^ <span class="hljs-number">99</span><br><span class="hljs-number">5</span>  -&gt; <span class="hljs-number">0000101</span><br><span class="hljs-number">99</span> -&gt; <span class="hljs-number">1100011</span><br>      <span class="hljs-number">1100110</span> -&gt; <span class="hljs-number">2</span>*<span class="hljs-number">6</span> +<span class="hljs-number">2</span>*<span class="hljs-number">5</span> +<span class="hljs-number">2</span>*<span class="hljs-number">2</span> + <span class="hljs-number">2</span>*<span class="hljs-number">1</span> -&gt; <span class="hljs-number">64</span>+<span class="hljs-number">32</span>+<span class="hljs-number">4</span>+<span class="hljs-number">2</span> = <span class="hljs-number">102</span><br><br><span class="hljs-number">4.</span> 按钮进行左移运算<br><br>r4 := <span class="hljs-number">5</span> &lt;&lt; <span class="hljs-number">2</span><br><span class="hljs-number">5</span>  -&gt; <span class="hljs-number">0000101</span> -&gt; <span class="hljs-number">101</span> <span class="hljs-comment">//前面的0可以省略</span><br>所以：<span class="hljs-number">101</span> 左移之后 后面补<span class="hljs-number">0</span> -&gt; <span class="hljs-number">10100</span> -&gt; <span class="hljs-number">2</span>*<span class="hljs-number">4</span>+<span class="hljs-number">2</span>*<span class="hljs-number">2</span> -&gt; <span class="hljs-number">16</span>+<span class="hljs-number">4</span> = <span class="hljs-number">20</span><br><br><span class="hljs-number">5.</span> 按位进行右移运算<br><br>r5 := <span class="hljs-number">5</span> &gt;&gt; <span class="hljs-number">1</span><br><span class="hljs-number">5</span>  -&gt; <span class="hljs-number">0000101</span> -&gt; <span class="hljs-number">101</span> <span class="hljs-comment">//前面的0可以省略</span><br>所以：<span class="hljs-number">101</span> 右移之后 <span class="hljs-number">10</span> 右移<span class="hljs-number">1</span>位，后面咬去<span class="hljs-number">1</span>位， -&gt; <span class="hljs-number">10</span> -&gt; <span class="hljs-number">2</span>*<span class="hljs-number">1</span> = <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/20210517230842.png" alt="image-20210517230842863"></p><p>补充：</p><ul><li><p>十进制转二进制</p><table><thead><tr><th>十进制</th><th>二进制（逢二进一）</th></tr></thead><tbody><tr><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td></tr><tr><td>2</td><td>10</td></tr><tr><td>3</td><td>11</td></tr><tr><td>4</td><td>100</td></tr><tr><td>5</td><td>101</td></tr><tr><td>6</td><td>110</td></tr><tr><td>7</td><td>111</td></tr><tr><td>8</td><td>1000</td></tr><tr><td>9</td><td>1001</td></tr><tr><td>10</td><td>1010</td></tr></tbody></table></li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> commlib<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;errors&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br>)<br><br><span class="hljs-comment">// 函数可以定义多个返回值，甚至对其命名</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">FunctionTest</span><span class="hljs-params">(a, b <span class="hljs-type">int</span>)</span></span> (<span class="hljs-type">int</span>, <span class="hljs-type">error</span>) &#123;<br><span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>, errors.New(<span class="hljs-string">&quot;FunctionTest&quot;</span>)<br>&#125;<br><span class="hljs-keyword">return</span> a / b, <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">FunctionTest2</span><span class="hljs-params">()</span></span> &#123;<br>a, b := <span class="hljs-number">1</span>, <span class="hljs-number">0</span> <span class="hljs-comment">//定义多个变量</span><br><br>c, err := FunctionTest(a, b) <span class="hljs-comment">//接受多个返回值</span><br><br>fmt.Println(c, err)<br>&#125;<br><br><span class="hljs-comment">//函数是第一类型，可以作为参数或者返回值</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">FunctionTest3</span><span class="hljs-params">(x <span class="hljs-type">int</span>)</span></span><span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span>  &#123;<span class="hljs-comment">//返回函数类型</span><br><span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<span class="hljs-comment">//匿名函数</span><br>fmt.Println(<span class="hljs-string">&quot;返回参数为函数&quot;</span>,x)<span class="hljs-comment">//闭包</span><br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">FunctionTest4</span><span class="hljs-params">()</span></span>  &#123;<br>x:=<span class="hljs-number">100</span><br><br>f:=FunctionTest3(x)<span class="hljs-comment">//返回函数</span><br><br>f()<span class="hljs-comment">//执行函数</span><br>&#125;<br><br><span class="hljs-comment">//通过关键字 defer 来修饰动作标识最后执行</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">FunctionTest5</span><span class="hljs-params">(a,b <span class="hljs-type">int</span>)</span></span>  &#123;<br><br><span class="hljs-keyword">defer</span> fmt.Println(<span class="hljs-string">&quot;延迟执行的动作&quot;</span>)<br><br>fmt.Println(<span class="hljs-string">&quot;正在执行的动作&quot;</span>)<br><br>fmt.Println(a+b)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">FunctionTest6</span><span class="hljs-params">()</span></span>  &#123;<br>x,y := <span class="hljs-number">10</span>,<span class="hljs-number">0</span><br><br>FunctionTest5(x,y)<br>&#125;<br></code></pre></td></tr></table></figure><p>执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go">fmt.Println(<span class="hljs-string">&quot;执行：FunctionTest2&quot;</span>)<span class="hljs-comment">//函数可以定义多个返回值，甚至对其命名</span><br>commlib.FunctionTest2()<br>fmt.Println(<span class="hljs-string">&quot;执行：FunctionTest4&quot;</span>)<span class="hljs-comment">//函数是第一类型，可以作为参数或者返回值</span><br>commlib.FunctionTest4()<br>fmt.Println(<span class="hljs-string">&quot;执行：FunctionTest6&quot;</span>)<span class="hljs-comment">//通过关键字 defer 来修饰动作标识最后执行</span><br>commlib.FunctionTest6()<br></code></pre></td></tr></table></figure><p>执行结果：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210514224544469.png" alt="image-20210514224544469"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li><p><code>go.mod file not found in current directory or any parent directory; see &#39;go help modules&#39;</code></p><p>问题是go环境的问题：执行<code>go env -w GO111MODULE=auto</code></p></li><li><p>修改配置：运行种类和包位置 可以解决运行只局限在某个文件的问题</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DotNet Core Note</title>
    <link href="/2021/10/31/Net-Core-Note/"/>
    <url>/2021/10/31/Net-Core-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Note-Dot-Net-Core"><a href="#Note-Dot-Net-Core" class="headerlink" title="Note Dot Net Core"></a>Note Dot Net Core</h1><h2 id="DotNet-amp-DotNetCore"><a href="#DotNet-amp-DotNetCore" class="headerlink" title="DotNet &amp; DotNetCore"></a>DotNet &amp; DotNetCore</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220212182101257.png" alt="image-20220212182101257" style="zoom:50%;" /><p><strong>DotNet 包含 DotNet Core</strong> </p><p><strong>DotNet</strong> 内有 <strong>DotNet Framework</strong> 、<strong>DotNet Core</strong> 、<strong>Xamarin</strong></p><p><strong>DotNet Framework</strong> 支持Windows和Web应用程序。今天，您可以使用Windows窗体，WPF和UWP在.NET Framework中构建Windows应用程序。ASP.NET MVC用于在.NET Framework中构建Web应用程序。</p><p><strong>DotNet Core</strong> 是一种新的开源和跨平台框架，用于为包括Windows，Mac和Linux在内的所有操作系统构建应用程序。.NET Core仅支持UWP和ASP.NET Core。UWP用于构建Windows 10目标Windows和移动应用程序。ASP.NET Core用于构建基于浏览器的Web应用程序。 </p><p><strong>Xamarin</strong> 无庸置疑，当您想使用C#构建移动（iOS，Android和Windows Mobile）应用程序时，Xamarin是您唯一的选择。</p><p><strong>DotNet Standard</strong>  是一套官方定义的API规范，DotNet Framework 和 DotNet Core 都实现了这套规范。</p><table><thead><tr><th></th><th>DotNet Framework</th><th>DotNet Core</th></tr></thead><tbody><tr><td>跨平台</td><td>windows</td><td>windows、Linux、Mac</td></tr><tr><td>微服务</td><td>基于对Docker的支持，不建议</td><td>支持，有些中间件天然支持Core</td></tr><tr><td>容器化</td><td>可以，但笨重</td><td>轻</td></tr><tr><td>多版本并行</td><td>net 4.0 支持并行了也只是和3.5</td><td>全版本并行</td></tr><tr><td>高性能可扩展</td><td>一般</td><td>天然支持</td></tr><tr><td>开源</td><td>否</td><td>是</td></tr></tbody></table><p>再结合下图</p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220212182623858.png" alt="族谱"  /><blockquote><p>.NET Core和ASP.NET Core区别</p></blockquote><ol><li><p>.NET Core是运行时。它可以执行为其构建的应用程序。ASP.NET Core是构成一个用于构建Web应用程序的框架的库的集合。ASP.NET Core库可以在.NET Core和“完整.NET Framework”（Windows附带许多年）上使用。</p></li><li><p>使用.NET Core的 ASP.NET CORE-所有依赖项都是自包含的，可以使用大多数Nuget包，不能使用Windows特定的包，可以在Windows，Linux，Mac上执行</p></li><li><p>使用.NET Framework的 ASP.NET CORE-大多数依赖项都是自包含的，仅在Windows上执行，将有权访问Windows特定的Nuget软件包，需要在计算机上安装有针对性的.NET Framework版本</p></li></ol><blockquote><p>ASP.NET Core (.NET Core) and ASP.NET Core (.NET Framework)区别</p></blockquote><p><strong>ASP.NET Core (.NET Core)</strong></p><blockquote><p>使用.Net Core运行时的ASP.NET Core可以支持跨平台(Windows, Mac, and Linux (包括Docker)),服务器不需要安装.Net Core，它的依赖与应用程序捆绑在一起。而且它是高性能的开源的框架。它能够在您自己的进程中托管IIS，Nginx，Apache，Docker或自托管。ASP.NET Core完全作为NuGet包发布。这允许您优化您的应用程序，使其仅包含必要的NuGet包。实际上，面向.NET Core的ASP.NET Core 2.x应用程序只需要一个NuGet包。应用程序表面积较小的好处，可以有更严格的安全性，更少的服务和更高的性能。可以使用 Kestrel web server。可以使用Visual Studio Code写代码。它现在还不支持Aspx, WPF, WCF and WebServices。它内置依赖注入的支持。可以使用coreclr，它是带有.net core的asp.net核心的运行时。</p></blockquote><p><strong>ASP.NET Core (.NET Framework)</strong></p><blockquote><p>使用.NET Framework运行时的ASP.NET Core可以支持桌面应用，也可以说是完整版。但这些应用程序只能在Windows上运行，但有关ASP.NET Core的其他所有内容的行为方式都相同。另一方面，.Net框架在2005年之前就开始了，它不断添加新功能，使其成为一个复杂的框架和更重的框架。它不是跨平台的。它支持Aspx，WPF，WCF和WebServices。</p></blockquote><p>参考资料</p><ol><li><a href="https://www.cjavapy.com/article/73/">ASP.NET Core (.NET Core) and ASP.NET Core (.NET Framework)区别-CJavaPy</a></li><li><a href="https://blog.csdn.net/qq_21209307/article/details/104891873?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&utm_relevant_index=1">.NET Framework， .NET Core 和.NET Standard的区别和联系_Will Wang0715的博客-CSDN博客</a></li></ol><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>环境用的是Dot Net 5 SDK</p><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p>每次运行生成到 <code>\bin\Debug\net5.0</code> 下的文件 对比 发布之后的文件，多的一个 <code>web.config</code></p><p>生成文件</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817220618980.png" alt="image-20210817220618980"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817220659934.png" alt="image-20210817220659934"></p><p>如果把<code>web.config</code>文件复制到生成文件夹中，照样可以通过<code>IIS</code>发布</p><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><p>当<code>IIS</code> 安装完毕之后，该设置的都设置了，但是访问直接</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817221100914.png" alt="image-20210817221100914"></p><p>如果之前玩过<code>IIS</code>的话，就会有点懵圈，我之前玩就是这么玩的，为毛现在不行了，答案是，这样真不行。</p><p>首先，需要访问 <a href="https://dotnet.microsoft.com/download/dotnet">.NET Downloads (Linux, macOS, and Windows) (microsoft.com)</a></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817221438691.png" alt="image-20210817221438691"></p><p>根据自己的环境下载对应的Host 和 SDK</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817221551567.png" alt="image-20210817221551567"></p><p>上面这安装完毕后，重启<code>IIS</code>服务</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817221946942.png" alt="image-20210817221946942"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817222017718.png" alt="image-20210817222017718"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817222055216.png" alt="image-20210817222055216"></p><p>在模块中多俩这玩意，没有这俩玩意的，再找资源下载，都在刚才那个网址里，然 就没有那个500的毛病了。</p><p>其实最主要的是依赖 <code>AspNetCoreModuleV2</code>,具体可以看问题1里说的那个<code>web.config</code>中。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817222624896.png" alt="image-20210817222624896"></p><p>你悟了吗？</p><h2 id="CMD启动"><a href="#CMD启动" class="headerlink" title="CMD启动"></a>CMD启动</h2><ol><li><p>通过CMD 去启动 cd 到发布目录 执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet DotNetCoreDemo.dll<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817224246940.png" alt="image-20210817224246940"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet DotNetCoreDemo.dll --urls &quot;http://*:8888&quot;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817224330676.png" alt="image-20210817224330676"></p></li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817224503747.png" alt="image-20210817224503747"></p><p>由于DotNetCore 有跨平台的优势，一般生产环境基本是不用<code>IIS</code></p><p>执行的命令在<code>web.config</code>中可以看到，仔细观察</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210817224712705.png" alt="image-20210817224712705"></p><p>在 DotNetCore 中，<code>IIS</code> 其实充当的角色是转发请求，与之前的发布网站的用法不一样了，有点怀念之前<code>webform</code>的青涩。</p><h2 id="读取静态文件-配置中间件"><a href="#读取静态文件-配置中间件" class="headerlink" title="读取静态文件+配置中间件"></a>读取静态文件+配置中间件</h2><ol><li><p>引入命名空间</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.Extensions.FileProviders;<br><span class="hljs-keyword">using</span> System.IO;<br></code></pre></td></tr></table></figure></li><li><p>配置读取静态文件中间件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">//获取相对路径</span><br><span class="hljs-built_in">string</span> path = Path.Combine(Directory.GetCurrentDirectory(), <span class="hljs-string">&quot;wwwroot&quot;</span>);<br><br>app.UseStaticFiles(<span class="hljs-keyword">new</span> StaticFileOptions()<br>&#123;<br><span class="hljs-comment">//从物理路径指向wwwroot</span><br>FileProvider = <span class="hljs-keyword">new</span> PhysicalFileProvider(path)<br>&#125;);<br></code></pre></td></tr></table></figure></li></ol><h2 id="CMD-参数"><a href="#CMD-参数" class="headerlink" title="CMD 参数"></a>CMD 参数</h2><ol><li><p>cmd 执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dotnet DotNetCoreDemo.dll --urls &quot;http://*:8080&quot; -- Parame=&quot;Harris&quot; <br></code></pre></td></tr></table></figure><p>格式 – [参数名称] = [参数]</p></li><li><p>控制器注入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.Extensions.Configuration;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IConfiguration _iconfiguration;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HomeController</span>(<span class="hljs-params">ILogger&lt;HomeController&gt; logger, IConfiguration configuration</span>)</span><br>&#123;<br>    _logger = logger;<br>    _logger.LogWarning(<span class="hljs-string">&quot;HomeController 被构造..&quot;</span>);<br><br>    _iconfiguration = configuration; <span class="hljs-comment">//注入</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-built_in">string</span> Parame = _iconfiguration[<span class="hljs-string">&quot;Parame&quot;</span>];<span class="hljs-comment">//参数名称</span><br><br><span class="hljs-keyword">base</span>.ViewBag.User1 = <span class="hljs-string">&quot;张三&quot;</span> + <span class="hljs-string">&quot; -- 参数：&quot;</span> + Parame; <span class="hljs-comment">//使用</span><br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210819222204161.png" alt="image-20210819222204161"></p></li></ol><h2 id="控制器读取配置"><a href="#控制器读取配置" class="headerlink" title="控制器读取配置"></a>控制器读取配置</h2><h3 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210819224059065.png" alt="image-20210819224059065"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;TESTID&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1111&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;TESTNAME&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HARRIS&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;TESTAdress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;sheng&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SHANXI&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;shi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;XINZHOU&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;Family&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;baba&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;mama&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;son&quot;</span><br>  <span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>同样需要注入:</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210819224219428.png" alt="image-20210819224219428"></p><p>应用：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><br>ViewBag.Setting1 = _iconfiguration[<span class="hljs-string">&quot;TESTID&quot;</span>];<br><br>ViewBag.Setting2 = _iconfiguration[<span class="hljs-string">&quot;TESTNAME&quot;</span>];<br><br>ViewBag.Setting3 = _iconfiguration[<span class="hljs-string">&quot;TESTAdress:sheng&quot;</span>];<br><br>ViewBag.Setting4 = _iconfiguration[<span class="hljs-string">&quot;Family:1&quot;</span>];<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>@ViewBag.Setting1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>@ViewBag.Setting2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>@ViewBag.Setting3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>@ViewBag.Setting4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210819224316517.png" alt="image-20210819224316517"></p><h3 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h3><p>先修改一下appsetting.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;TEST&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;TESTID&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1111&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;TESTNAME&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HARRIS&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;TESTAdress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;sheng&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SHANXI&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;shi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;XINZHOU&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;Family&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;baba&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;mama&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;son&quot;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>实例化一个实体</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TESTMODEL</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TESTID &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TESTNAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> TESTAdress TESTAdress &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;<span class="hljs-built_in">string</span>&gt; Family &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TESTAdress</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> sheng &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> shi &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>让实体与需要的json节点相互对应。</p><p>然后 Startup.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>&#123;<br>    services.AddControllersWithViews();<br><br>    services.AddSession();<br><br>    <span class="hljs-comment">//取配置文件中的TEST节点，映射到 TESTMODEL 实体</span><br>    services.Configure&lt;TESTMODEL&gt;(Configuration.GetSection(<span class="hljs-string">&quot;TEST&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>接着控制器注入</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210819230720154.png" alt="image-20210819230720154"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HomeController</span>(<span class="hljs-params">ILogger&lt;HomeController&gt; logger, IConfiguration configuration,IOptions&lt;TESTMODEL&gt; options</span>)</span><br>&#123;<br>    _logger = logger;<br>    _logger.LogWarning(<span class="hljs-string">&quot;HomeController 被构造..&quot;</span>);<br><br>    _iconfiguration = configuration;<br><br>    _tESTMODEL = options.Value;<br>&#125;<br></code></pre></td></tr></table></figure><p>应用：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-built_in">object</span> parame = Newtonsoft.Json.JsonConvert.SerializeObject(_tESTMODEL);<br><span class="hljs-comment">//然后返回给视图</span><br><span class="hljs-keyword">return</span> View(parame);<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210819230859533.png" alt="image-20210819230859533"></p><h2 id="Razor-混编"><a href="#Razor-混编" class="headerlink" title="Razor 混编"></a>Razor 混编</h2><h3 id="index-cshtml"><a href="#index-cshtml" class="headerlink" title="index.cshtml"></a>index.cshtml</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs html">@using DotNetCoreDemo.Interface;<br>@using Microsoft.AspNetCore.Authorization;<br>@&#123;<br>    ViewData[&quot;Title&quot;] = &quot;Index&quot;;<br>&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>This is Second Index<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>@*测试 runtimecompilation*@<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Test Razor runtimecompilation!<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>@*实现接口*@<br><br>@implements ICoustomInterface<br><br>@functions&#123;<br>    //实现接口<br>    public string Show()<br>    &#123;<br>        return &quot;Hello World&quot;;<br>    &#125;<br>&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>实现接口：@Show()<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>@*服务注入*@<br><br>@inject ICoustomInterface coustomservice<br>@&#123;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>前台服务注入：@coustomservice.Show()<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>后台注册服务：@base.ViewBag.ServiceText<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>@*标记特性*@<br>@*给当前类新增特性，cshtml 可以把它当成一个类*@<br>@attribute [Authorize];<br><br>@functions&#123;<br>    public string GetStr()<br>    &#123;<br>        return &quot;Hello world&quot;;<br>    &#125;<br>&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>调用方法 : @GetStr()<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>@*单行*@<br><br>@&#123; <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:darkcyan&quot;</span>&gt;</span>单行输出：@GetStr()<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>&#125;<br><br>@*多行*@<br>@*<span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>@i<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span> 标识为字符串显示文本 不能像后台代码那样用加号连接*@<br><br>@&#123;<br>    for (int i = 0; i &lt; 3; i++)<br>    &#123;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:yellowgreen&quot;</span>&gt;</span>多行输出：@GetStr()<span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>@i<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    &#125;<br>&#125;<br><br>@*输出html标签*@<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>输出HTML标签：@(&quot;<span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>输出HTML标签：Hello world <span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>&quot;)<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><br>@*模板化方法*@<br><br>@&#123; <br>    void ReturnName(string name)<br>    &#123;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:brown&quot;</span>&gt;</span>模板化输出：@name<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    &#125;<br><br>    ReturnName(&quot;Harris&quot;);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Startup"><a href="#Startup" class="headerlink" title="Startup"></a>Startup</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Builder;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Configuration;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.DependencyInjection;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.FileProviders;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Models;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Service;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Startup</span>(<span class="hljs-params">IConfiguration configuration</span>)</span><br>        &#123;<br>            Configuration = configuration;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> IConfiguration Configuration &#123; <span class="hljs-keyword">get</span>; &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to add services to the container.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>        &#123;<br>            services.AddControllersWithViews();<br><br>            services.AddSession();<br><br>            <span class="hljs-comment">//加入中间件，方便实时调试HTML</span><br>            services.AddRazorPages().AddRazorRuntimeCompilation();<br><br>            <span class="hljs-comment">//注入服务</span><br>            services.AddTransient&lt;ICoustomInterface, CoustomService&gt;();<br><br>            <span class="hljs-comment">//取配置文件中的TEST节点，映射到 TESTMODEL 实体</span><br>            services.Configure&lt;TESTMODEL&gt;(Configuration.GetSection(<span class="hljs-string">&quot;TEST&quot;</span>));<br>        &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Configure</span>(<span class="hljs-params">IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (env.IsDevelopment())<br>            &#123;<br>                app.UseDeveloperExceptionPage();<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                app.UseExceptionHandler(<span class="hljs-string">&quot;/Home/Error&quot;</span>);<br>            &#125;<br><br>            <span class="hljs-comment">//可以参考Program 中的配置，二选一</span><br>            loggerFactory.AddLog4Net(<span class="hljs-string">&quot;CfgFile/Log4Net.Config&quot;</span>);<br><br>            <span class="hljs-comment">//app.UseStaticFiles();</span><br><br>            <span class="hljs-comment">//获取相对路径</span><br>            <span class="hljs-built_in">string</span> path = Path.Combine(Directory.GetCurrentDirectory(), <span class="hljs-string">&quot;wwwroot&quot;</span>);<br><br>            app.UseStaticFiles(<span class="hljs-keyword">new</span> StaticFileOptions()<br>            &#123;<br>                <span class="hljs-comment">//从物理路径指向wwwroot</span><br>                FileProvider = <span class="hljs-keyword">new</span> PhysicalFileProvider(path)<br>            &#125;);<br><br>            app.UseSession();<br><br>            app.UseRouting();<br><br>            app.UseAuthorization();<br><br>            app.UseEndpoints(endpoints =&gt;<br>            &#123;<br>                endpoints.MapControllerRoute(<br>                    name: <span class="hljs-string">&quot;default&quot;</span>,<br>                    pattern: <span class="hljs-string">&quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;</span>);<br>            &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Interface-层"><a href="#Interface-层" class="headerlink" title="Interface 层"></a>Interface 层</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Interface</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ICoustomInterface</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Show</span>()</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Service-层"><a href="#Service-层" class="headerlink" title="Service 层"></a>Service 层</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CoustomService</span> : <span class="hljs-title">Interface.ICoustomInterface</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Show</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello world&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Nuget-包"><a href="#Nuget-包" class="headerlink" title="Nuget 包"></a>Nuget 包</h3><p><code>Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation</code></p><h2 id="Razor-布局"><a href="#Razor-布局" class="headerlink" title="Razor 布局"></a>Razor 布局</h2><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><ul><li>在<code>_ViewStart.cshtml</code> 中设置母版页；</li></ul><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822120532857.png" alt="image-20210822120532857"></p><ul><li><p>如果不想要模板页，想单页面展示也可以，可以在<code>_ViewStart.cshtml</code>中 注释 layout = “_Layout”; 或者 修改 layout = null;</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822122832247.png" alt="image-20210822122832247"></p></li></ul><h3 id="母版页"><a href="#母版页" class="headerlink" title="母版页"></a>母版页</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822120844118.png" alt="image-20210822120844118"></p><ol><li><p>可以设置一些测试的菜单。</p></li><li><p><code>@RenderBody()</code> 相当于一个占位符，菜单中路由的界面都会在这里进行替换。</p></li><li><p><code>@await RenderSectionAsync(&quot;Scripts&quot;,required:false)</code> 应用场景：</p><p>当子页面不手动引用 <code>Scripts</code>类库的时候，可以和上述这行代码配套使用。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822121926617.png" alt="image-20210822121926617"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//这个是不行的，除非手动引入js文件</span><br>&lt;script type=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;<br>    $(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Hello Harris&quot;</span>);<br><br>        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello Harris&quot;</span>);<br>    &#125;);<br>&lt;/script&gt;<br><br><span class="hljs-comment">//这个可以，他使用的是模板页中的js文件，相当于把下述js脚本拿到模板页中，然后执行</span><br>@section <span class="hljs-title class_">Scripts</span>&#123; <br><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        $(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Hello Harris&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello Harris&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822122520500.png" alt="image-20210822122520500"></p></li><li><p><strong>结合上一点说的，如果不使用母版页，如果注释掉或者等于null的话，使用母版页js库的代码就废了。</strong></p></li></ol><h2 id="Razor-扩展"><a href="#Razor-扩展" class="headerlink" title="Razor 扩展"></a>Razor 扩展</h2><h3 id="扩展控件（1）"><a href="#扩展控件（1）" class="headerlink" title="扩展控件（1）"></a>扩展控件（1）</h3><ol><li><p>@html.ActionLink 问题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs html"><br>@&#123;<br>    ViewData[&quot;Title&quot;] = &quot;RazorControl Page&quot;;<br>&#125;<br><br><br>ActionLink:@Html.ActionLink(&quot;当前控制器Index&quot;, &quot;index&quot;)<br><br>ActionLink:@Html.ActionLink(&quot;Home控制器Index&quot;, &quot;index&quot;, &quot;Home&quot;);<br><br>@&#123;<br>    TESTAdress testaddress_ = new TESTAdress();<br><br>    testaddress_.Sheng = &quot;a&quot;;<br><br>    testaddress_.Shi = &quot;b&quot;;<br><br>    TESTMODEL tESTMODEL = new TESTMODEL<br>    &#123;<br>        TESTID = &quot;1&quot;,<br>        TESTNAME = &quot;Harris&quot;,<br>        _TESTAdress = testaddress_,<br>        Family = new List<span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span> &#123; &quot;1&quot;, &quot;2&quot;, &quot;3&quot; &#125;,<br>        names = new Name &#123; Xing = &quot;a&quot;,Ming = &quot;b&quot;&#125;<br>    &#125;;<br><br>&#125;<br><br>ActionLink:@Html.ActionLink(&quot;带路由信息&quot;, &quot;index&quot;, &quot;Home&quot;, tESTMODEL);<br></code></pre></td></tr></table></figure><p>上述方法中有个错误的地方：就是最后一行，传的实体相对复杂，导致浏览器解析不了</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822195432996.png" alt="image-20210822195432996"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/?TESTID=1<span class="hljs-symbol">&amp;amp;</span>TESTNAME=Harris<span class="hljs-symbol">&amp;amp;</span>_TESTAdress=DotNetCoreDemo.Models.TESTAdress<span class="hljs-symbol">&amp;amp;</span>Family=1<span class="hljs-symbol">&amp;amp;</span>Family=2<span class="hljs-symbol">&amp;amp;</span>Family=3<span class="hljs-symbol">&amp;amp;</span>names=DotNetCoreDemo.Models.Name&quot;</span>&gt;</span>带路由信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>再结合下图：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822195931807.png" alt="image-20210822195931807"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822195634650.png" alt="image-20210822195634650"></p><p><code>routeValues</code> 这个才是为了给浏览器解析作为页面参数传递的，所以这里不支持复杂实体应该是这个原因。</p></li><li><p>新建一个静态方法 </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Html;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Rendering;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HtmlHelperLinkExtensions</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IHtmlContent <span class="hljs-title">ActionImage</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IHtmlHelper helper,<span class="hljs-built_in">string</span> src</span>)</span><br>        &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> HtmlString(<span class="hljs-string">$&quot;&lt;IMG src=&#x27;<span class="hljs-subst">&#123;src&#125;</span>&#x27; alt=&#x27;扩展控件IMAGE&#x27; style=&#x27;width:100px;height:20px&#x27;/&gt;&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>视图</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">@*扩展控件*@<br>@Html.ActionImage(&quot;http://mmmp3.com/skin/default/images/logo.png&quot;)<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822202647528.png" alt="image-20210822202647528"></p></li></ol><h3 id="扩展控件（2）"><a href="#扩展控件（2）" class="headerlink" title="扩展控件（2）"></a>扩展控件（2）</h3><p>此扩展方法旨在扩展html体系中不存在得html 标签。</p><ol><li><p>新建一个类 CustomTagHelper</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Razor.TagHelpers;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    [<span class="hljs-meta">HtmlTargetElement(<span class="hljs-string">&quot;Harris&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomTagHelper</span> : <span class="hljs-title">TagHelper</span>   <span class="hljs-comment">//,ITagHelper</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Process</span>(<span class="hljs-params">TagHelperContext context, TagHelperOutput output</span>)</span><br>        &#123;<br>            output.TagName = <span class="hljs-string">&quot;div&quot;</span>;<br>            output.Attributes.Add(<span class="hljs-string">&quot;xing&quot;</span>, <span class="hljs-string">&quot;No.1&quot;</span>);<br>            output.Attributes.Add(<span class="hljs-string">&quot;ming&quot;</span>, <span class="hljs-string">&quot;No.2&quot;</span>);<br>            output.PreContent.SetContent(<span class="hljs-string">&quot;Hello ,My name is Harris&quot;</span>);<br>            output.Attributes.Add(<span class="hljs-string">&quot;style&quot;</span>, <span class="hljs-string">&quot;color:red&quot;</span>);<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>标记 <code>HtmlTargeElement()</code> 特性</li><li>继承 <code>Taghelper</code> 或者实现 <code>ITaghelper</code> 接口</li><li>重写 <code>Process</code> 方法</li><li>定义标签</li><li>指定属性、内容</li></ul></li><li><p>声明 在 <code>_ViewImports.cshtml</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@using</span> DotNetCoreDemo<br><span class="hljs-variable">@using</span> DotNetCoreDemo.Models<br><span class="hljs-variable">@addTagHelper</span> *, Microsoft.AspNetCore.Mvc.TagHelpers<br><span class="hljs-variable">@addTagHelper</span> *,DotNetCoreDemo <span class="hljs-comment">//* 代表当前命名空间下都可使用</span><br></code></pre></td></tr></table></figure></li><li><p>应用</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822210047680.png" alt="image-20210822210047680"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822210156272.png" alt="image-20210822210156272"></p><ol start="4"><li><p>传参</p><p>设置好对象</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Razor.TagHelpers;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    [<span class="hljs-meta">HtmlTargetElement(<span class="hljs-string">&quot;Harris&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomTagHelper</span> : <span class="hljs-title">TagHelper</span>   <span class="hljs-comment">//,ITagHelper</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Shengshi &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomTagHelper</span>()</span><br>        &#123;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Process</span>(<span class="hljs-params">TagHelperContext context, TagHelperOutput output</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//接收参数</span><br>            <span class="hljs-built_in">string</span> _id = <span class="hljs-keyword">this</span>.Id;<br><br>            <span class="hljs-built_in">string</span> _name = <span class="hljs-keyword">this</span>.Name;<br><br>            <span class="hljs-built_in">string</span> _age = <span class="hljs-keyword">this</span>.Age;<br><br>            <span class="hljs-built_in">string</span> _shengshi = <span class="hljs-keyword">this</span>.Shengshi;<br><br>            output.TagName = <span class="hljs-string">&quot;div&quot;</span>;<br>            output.Attributes.Add(<span class="hljs-string">&quot;xing&quot;</span>, <span class="hljs-string">&quot;No.1&quot;</span>);<br>            output.Attributes.Add(<span class="hljs-string">&quot;ming&quot;</span>, <span class="hljs-string">&quot;No.2&quot;</span>);<br><br>            <span class="hljs-comment">//output.PreContent.SetContent(&quot;Hello ,My name is Harris&quot;);</span><br>            <span class="hljs-comment">//使用参数</span><br>            output.PreContent.SetHtmlContent(<span class="hljs-string">&quot;&lt;h2&gt;Hello ,My name is Harris&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;ID:&quot;</span> + _id + <span class="hljs-string">&quot;&lt;/li&gt;&lt;li&gt;NAME:&quot;</span> + _name + <span class="hljs-string">&quot;&lt;/li&gt;&lt;li&gt;Age:&quot;</span> + _age + <span class="hljs-string">&quot;&lt;/li&gt;&lt;li&gt;Shengshi:&quot;</span> + _shengshi + <span class="hljs-string">&quot;&lt;/li&gt;&lt;/ul&gt;&quot;</span>);<br><br>            output.Attributes.Add(<span class="hljs-string">&quot;style&quot;</span>, <span class="hljs-string">&quot;color:red&quot;</span>);<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>标签属性传值</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822212634256.png" alt="image-20210822212634256"></p><p>效果</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210822212831324.png" alt="image-20210822212831324"></p></li></ol></li></ol><h3 id="局部视图"><a href="#局部视图" class="headerlink" title="局部视图"></a>局部视图</h3><ol><li><p>添加局部视图，其实就是在对应的view层添加一个cshtml文件</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210823212950311.png" alt="image-20210823212950311"></p></li><li><p>编辑 PartialView.cshtml ,相当于定义好局部视图，就长这个样子，Harris标签应用与上一节扩展控件内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">@model string<br><br><span class="hljs-tag">&lt;<span class="hljs-name">Harris</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;@Model&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;@Model&quot;</span> <span class="hljs-attr">age</span>=<span class="hljs-string">&quot;@Model&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Harris</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">Harris</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;@Model&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;@Model&quot;</span> <span class="hljs-attr">age</span>=<span class="hljs-string">&quot;@Model&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Harris</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">Harris</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;@Model&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;@Model&quot;</span> <span class="hljs-attr">age</span>=<span class="hljs-string">&quot;@Model&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Harris</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>应用 <code>@Html.Partial</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">@*局部视图*@<br>@Html.Partial(&quot;PartialView&quot;, &quot;123&quot;)// 123 是参数，也就是说，在调用局部视图得时候，其实可以间接设置其内容<br></code></pre></td></tr></table></figure></li><li><p>呈现</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210823213304825.png" alt="image-20210823213304825"></p></li></ol><h3 id="视图组件"><a href="#视图组件" class="headerlink" title="视图组件"></a>视图组件</h3><ol><li><p>新建视图组件扩展类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    [<span class="hljs-meta">ViewComponent(Name = <span class="hljs-string">&quot;CustomList&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ListViewComponent</span> : <span class="hljs-title">ViewComponent</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IViewComponentResult&gt; <span class="hljs-title">InvokeAsync</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> SeachVal</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> list = <span class="hljs-keyword">await</span> GetStudents(SeachVal);<br><br>            ViewBag.User = <span class="hljs-string">&quot;Harris&quot;</span>;<span class="hljs-comment">//可以用这个，等等...</span><br><br>            <span class="hljs-comment">//return View(list);// 默认找得是~/Views/Shared/CustomList/Default.cshtml</span><br><br>            <span class="hljs-comment">//这里可以指定视图组件的路径</span><br>            <span class="hljs-keyword">return</span> View(<span class="hljs-string">&quot;~/Views/Shared/Components/Test/DefaultTest.cshtml&quot;</span>, list);<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> Task&lt;List&lt;Student&gt;&gt; GetStudents(<span class="hljs-built_in">string</span> SeachVal)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.Run(() =&gt;<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> List&lt;Student&gt;()<br>                &#123;<br>                    <span class="hljs-keyword">new</span> Student &#123; ID=<span class="hljs-number">1</span>,NAME = <span class="hljs-string">&quot;Harris&quot;</span>&#125;,<br>                    <span class="hljs-keyword">new</span> Student &#123; ID=<span class="hljs-number">2</span>,NAME = <span class="hljs-string">&quot;Make&quot;</span>&#125;,<br>                    <span class="hljs-keyword">new</span> Student &#123; ID=<span class="hljs-number">3</span>,NAME = <span class="hljs-string">&quot;Ped&quot;</span>&#125;,<br>                    <span class="hljs-keyword">new</span> Student &#123; ID=<span class="hljs-number">4</span>,NAME = <span class="hljs-string">&quot;Henry&quot;</span>&#125;<br>                &#125;;<br>            &#125;);<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Student</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> ID &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> NAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>主要是继承 <code>ViewComponent</code></p></li><li><p>新建视图组件视图</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">@using DotNetCoreDemo.Utility<br><br>@model List<span class="hljs-tag">&lt;<span class="hljs-name">Student</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    @foreach (var item in Model)<br>    &#123;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>@item.NAME<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>应用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html">@*视图组件*@<br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>视图组件<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@await Component.InvokeAsync(&quot;CustomList&quot;, new &#123; SeachVal = &quot;123456&quot; &#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@await Component.InvokeAsync(&quot;CustomList&quot;, new &#123; SeachVal = &quot;321321&quot; &#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@await Component.InvokeAsync(&quot;CustomList&quot;, new &#123; SeachVal = &quot;321321&quot; &#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@await Component.InvokeAsync(&quot;CustomList&quot;, new &#123; SeachVal = &quot;321321&quot; &#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@await Component.InvokeAsync(&quot;CustomList&quot;, new &#123; SeachVal = &quot;321321&quot; &#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>项目列表</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210824222129039.png" alt="image-20210824222129039"></p><ol><li><p><code>Components/CustomList/Default.cshtml</code> 与 <code>Components/Test/DefaultTest.cshtml</code> 中间的区别就是上面第一点中所说的，在返回View()的时候，要不要传具体路径的区别。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210824222356654.png" alt="image-20210824222356654"></p></li><li><p>还得关心一下这个类里的异步结构。</p></li></ol></li><li><p>结果</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210824222521682.png" alt="image-20210824222521682"></p><ol><li>这地方主要是用的DefaultTest.cshtml,Harris 就是从 ViewBag.User 传过来滴。</li></ol></li></ol><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><h3 id="IOC出现的背景"><a href="#IOC出现的背景" class="headerlink" title="IOC出现的背景"></a>IOC出现的背景</h3><p>我们知道，软件开发领域有句著名的论断：不要重复发明轮子！因为软件开发讲求复用，所以，对于应用频繁的需求，总是有人设计各种通用框架和类库以减轻人们的开发负担。例如，数据持久化是非常频繁的需求，于是各种ORM框架应运而生；再如，对MVC的需求催生了Struts等一批用来实现MVC的框架。</p><p>随着面向对象分析与设计的发展和成熟，OOA&amp;D被越来越广泛应用于各种项目中，然而，我们知道，用OO就不可能不用多态性，用多态性就不可能不用依赖注入，所以，依赖注入变成了非常频繁的需求，而如果全部手工完成，不但负担太重，而且还容易出错。再加上反射机制的发明，于是，自然有人开始设计开发各种用于依赖注入的专用框架。这些专门用于实现依赖注入功能的组件或框架，就是IoC Container。从这点看，IoC Container的出现有其历史必然性。目前，最著名的IoC也许就是Java平台上的Spring框架的IoC组件，而.NET平台上也有Spring.NET和Unity等。 </p><h3 id="IOC是什么"><a href="#IOC是什么" class="headerlink" title="IOC是什么"></a>IOC是什么</h3><p>IOC（Inversion of Control），即<strong>“控制反转”</strong>，不是什么技术，而是一种设计思想。在Java开发中，IOC意味着将你设计好的对象交给容器控制，而不是传统的在你的对象内部直接控制。如何理解好Ioc呢？理解好Ioc的关键是要明确“谁控制谁，控制什么，为何是反转（有反转就应该有正转了），哪些方面反转了”，那我们来深入分析一下： </p><ul><li><strong>谁控制谁，控制什么：</strong>传统Java SE程序设计，我们直接在对象内部通过new进行创建对象，是程序主动去创建依赖对象；而IOC是有专门一个容器来创建这些对象，即由IOC容器来控制对象的创建；谁控制谁？当然是IOC容器控制了对象；控制什么？那就是主要控制了外部资源获取</li><li><strong>为何是反转，哪些方面反转了：</strong>有反转就有正转，传统应用程序是由我们自己在对象中主动控制去直接获取依赖对象，也就是正转；而反转则是由容器来帮忙创建及注入依赖对象；为何是反转？因为由容器帮我们查找及注入依赖对象，对象只是被动的接受依赖对象，所以是反转；哪些方面反转了？依赖对象的获取被反转了。</li></ul><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/983950-20200828140652970-543560967.png" alt="img"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/983950-20200828141239801-1102376797.png" alt="img"></p><h3 id="IOC能做什么"><a href="#IOC能做什么" class="headerlink" title="IOC能做什么"></a>IOC能做什么</h3><p>IoC不是一种技术，只是一种思想，一个重要的面向对象编程的法则，它能指导我们如何设计出松耦合、更优良的程序。传统应用程序都是由我们在类内部主动创建依赖对象，从而导致类与类之间高耦合，难于测试；有了IoC容器后，把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以对象与对象之间是松散耦合，这样也方便测试，利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活。</p><p>其实IoC对编程带来的最大改变不是从代码上，而是从思想上，发生了“主从换位”的变化。应用程序原本是老大，要获取什么资源都是主动出击，但是在IoC/DI思想中，应用程序就变成被动的了，被动的等待IoC容器来创建并注入它所需要的资源了。</p><p>IoC很好的体现了面向对象设计法则之一—— 好莱坞法则：“别找我们，我们找你”；即由IoC容器帮对象找相应的依赖对象并注入，而不是由对象主动去找。 </p><h3 id="IOC和DI"><a href="#IOC和DI" class="headerlink" title="IOC和DI"></a>IOC和DI</h3><p>DI—Dependency Injection，即“依赖注入”：是组件之间依赖关系由容器在运行期决定，形象的说，即由容器动态的将某个依赖关系注入到组件之中。依赖注入的目的并非为软件系统带来更多功能，而是为了提升组件重用的频率，并为系统搭建一个灵活、可扩展的平台。通过依赖注入机制，我们只需要通过简单的配置，而无需任何代码就可指定目标需要的资源，完成自身的业务逻辑，而不需要关心具体的资源来自何处，由谁实现。 </p><p>理解DI的关键是：“谁依赖谁，为什么需要依赖，谁注入谁，注入了什么”，那我们来深入分析一下： </p><ul><li><strong>谁依赖于谁：</strong>当然是应用程序依赖于IoC容器</li><li><strong>为什么需要依赖：</strong>应用程序需要IoC容器来提供对象需要的外部资源</li><li><strong>谁注入谁：</strong>很明显是IoC容器注入应用程序某个对象，应用程序依赖的对象</li><li><strong>注入了什么：</strong>就是注入某个对象所需要的外部资源（包括对象、资源、常量数据） </li></ul><p><strong>IOC和DI有什么关系呢？</strong>其实它们是同一个概念的不同角度描述，由于控制反转概念比较含糊（可能只是理解为容器控制对象这一个层面，很难让人想到谁来维护对象关系），所以2004年大师级人物Martin Fowler又给出了一个新的名字：“依赖注入”，相对IoC 而言，<strong>“依赖注入”明确描述了“被注入对象依赖IoC容器配置依赖对象”。</strong></p><h3 id="Dl-注入方式"><a href="#Dl-注入方式" class="headerlink" title="Dl 注入方式"></a>Dl 注入方式</h3><p>交代一下服务和接口</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">//InterFace</span><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Interface</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//Service</span><br><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceA</span> : <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceA</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol><li><p>第一种</p><ol><li><p>在 <code>Startup</code> 中的 <code>ConfigureServices</code> 中注册。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">services.AddTransient&lt;ITestServiceA, TestServiceA&gt;();<br></code></pre></td></tr></table></figure></li><li><p>在控制器中先实例化一个私有只读的<code>ITestServiceA</code> 对象，然后新建构造函数，构造函数的入参也是<code>ITestServiceA</code> 对象。在构造函数中，将入参的<code>ITestServiceA</code>对象赋值给实例化好的<code>ITestServiceA</code> 对象，然后就可以在方法中使用。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">      <span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br>      <span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br>      <span class="hljs-keyword">using</span> System;<br>      <span class="hljs-keyword">using</span> System.Collections.Generic;<br>      <span class="hljs-keyword">using</span> System.Linq;<br>      <span class="hljs-keyword">using</span> System.Threading.Tasks;<br>      <br>      <span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>      &#123;<br>          <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IOCController</span> : <span class="hljs-title">Controller</span><br>          &#123;<br>              <span class="hljs-comment">//实例化一个私有只读的`ITestServiceA` 对象</span><br>              <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ITestServiceA _ItestServiceA = <span class="hljs-literal">null</span>;<span class="hljs-comment">//</span><br>      <br>              <span class="hljs-comment">//构造函数</span><br>              <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">IOCController</span>(<span class="hljs-params">ITestServiceA itestserviceA</span>)</span><br>              &#123;<br>                  _ItestServiceA = itestserviceA;<br>              &#125;<br>      <br>              <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>              &#123;<br>                  <span class="hljs-comment">//应用</span><br>                  _ItestServiceA.Show();<br>      <br>                  <span class="hljs-keyword">return</span> View();<br>              &#125;<br>          &#125;<br>      &#125;<br><br><span class="hljs-number">2.</span> 第二种<br><br>   <span class="hljs-number">1.</span> 同第一种一样，同样也得先在Startup中注册。<br><br>   <span class="hljs-number">2.</span> 在控制器中先实例化一个私有只读的`IServiceProvider` 对象，然后新建构造函数，构造函数的入参也是`IServiceProvider` 对象。在构造函数中，将入参的`IServiceProvider`对象赋值给实例化好的`IServiceProvider` 对象。但是在使用的时候有差异。<br><br>      ``` CSharp<br>      <span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br>      <span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br>      <span class="hljs-keyword">using</span> System;<br>      <span class="hljs-keyword">using</span> System.Collections.Generic;<br>      <span class="hljs-keyword">using</span> System.Linq;<br>      <span class="hljs-keyword">using</span> System.Threading.Tasks;<br>      <br>      <span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>      &#123;<br>          <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IOCController</span> : <span class="hljs-title">Controller</span><br>          &#123;<br>              <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ITestServiceA _ItestServiceA = <span class="hljs-literal">null</span>;<br>      <br>              <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IServiceProvider _serviceProvider = <span class="hljs-literal">null</span>;<br>      <br>              <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">IOCController</span>(<span class="hljs-params">ITestServiceA itestserviceA, IServiceProvider serviceProvider</span>)</span><br>              &#123;<br>                  _ItestServiceA = itestserviceA;<br>      <br>                  _serviceProvider = serviceProvider;<br>              &#125;<br>      <br>              <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>              &#123;<br>                  _ItestServiceA.Show();<br>      <br>                  ITestServiceA testServiceA = (ITestServiceA)_serviceProvider.GetService(<span class="hljs-keyword">typeof</span>(ITestServiceA));<br>      <br>                  testServiceA.Show();<br>      <br>                  <span class="hljs-keyword">return</span> View();<br>              &#125;<br>          &#125;<br>      &#125;<br></code></pre></td></tr></table></figure></li></ol></li><li><p>第三种</p><p>在视图中注册</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">@inject DotNetCoreDemo.Interface.ITestServiceA testServiceA<br><br>@&#123; <br>    testServiceA.Show();<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="Dl-依赖注入"><a href="#Dl-依赖注入" class="headerlink" title="Dl 依赖注入"></a>Dl 依赖注入</h3><p>如果对象B依赖与对象A，就可以先构造A传递给B,然后得到对应得B得对象实力。</p><p>依赖注入可以无限层级的注入，前提是先注入服务。</p><p>ServiceA 层</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceA</span> : <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceA</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//拓展方法</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> str</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> str + GetType().Name.ToString();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            Console.WriteLine(GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>InterfaceA 层</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Interface</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span>;<br><br>        <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> str</span>)</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ServiceB层</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceB</span> : <span class="hljs-title">ITestServiceB</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ITestServiceA _testServiceA = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> TestServiceB 依赖于 TestServiceA</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;testServiceA&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 到这，testServiceA 已经传递过来了。这个时候，TestServiceB 的方法中就可以使用TestServerA中的内容</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceB</span>(<span class="hljs-params">ITestServiceA testServiceA</span>)</span><br>        &#123;<br>            _testServiceA = testServiceA;<br><br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            _testServiceA.Show();<br><br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>()</span><br>        &#123;<br>            <span class="hljs-comment">//获取接口方法A的值</span><br>            <span class="hljs-built_in">string</span> str = _testServiceA.ReturnStr(<span class="hljs-string">&quot;123&quot;</span>);<br><br>            <span class="hljs-built_in">string</span> str_ = str + <span class="hljs-keyword">this</span>.GetType().Name.ToString();<br><span class="hljs-comment">//返回</span><br>            <span class="hljs-keyword">return</span> str_;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>InterfaceB层</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Interface</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ITestServiceB</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span>;<br><br>        <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>()</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Startup 注入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> IOC注册服务</span><br><br>    services.AddTransient&lt;ITestServiceA, TestServiceA&gt;();<br>    services.AddTransient&lt;ITestServiceB, TestServiceB&gt;();<span class="hljs-comment">//注入 TestServiceB</span><br><br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    services.AddControllersWithViews();<br><br>    services.AddSession();<br><br>    <span class="hljs-comment">//加入中间件，方便实时调试HTML</span><br>    services.AddRazorPages().AddRazorRuntimeCompilation();<br><br>    <span class="hljs-comment">//注入服务</span><br>    services.AddTransient&lt;ICoustomInterface, CoustomService&gt;();<br><br>    <span class="hljs-comment">//取配置文件中的TEST节点，映射到 TESTMODEL 实体</span><br>    services.Configure&lt;TESTMODEL&gt;(Configuration.GetSection(<span class="hljs-string">&quot;TEST&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><pre><code class="hljs">    上述，呈现出的，就是ServiceB 依赖 ServiceA ,在 ServiceB 的构造方法中，传入 ServiceA ,然后再 ServiceB 中，调用 ServiceA 的方法，构成了ServiceB ReturnStr 方法结果的呈现。应该能诠释 依赖注入的概念了，以此类推，可以衍生出 各种依赖。不怕注册的多服务，尽管上。</code></pre><h3 id="IServiceCollection-生命周期"><a href="#IServiceCollection-生命周期" class="headerlink" title="IServiceCollection 生命周期"></a>IServiceCollection 生命周期</h3><ol><li><p>瞬时生命周期 Addtransient 注册的生命周期：每次都实例化一个新的。<strong>正常瞬时生命周期使用的多，每次一个对象</strong></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210828145713938.png" alt="image-20210828145713938"></p></li><li><p>单例生命周期：AddSingleton 注册的生命周期：serviceA2_1 走过一遍后，serviceA2_2 直接就过去了，所以这玩意注册，一直玩的就一个。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210828145845491.png" alt="image-20210828145845491"></p></li><li><p>作用域生命周期</p><p>同一个IServiceCollection ，不同的ServiceProvider 实例化出来的对象，在每个ServiceProvider 内实例化的对象相当于单例，但是不同的 ServiceProvider 之间 是不一样的。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210828151007374.png" alt="image-20210828151007374"></p></li><li><p>Code</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>&#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> IOC注册服务</span><br><br>            services.AddTransient&lt;ITestServiceA, TestServiceA&gt;();<br>            services.AddTransient&lt;ITestServiceB, TestServiceB&gt;();<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 服务控制器 生命周期</span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 瞬时生命周期 每次获取的实例都是不同的实例</span><br><br>            IServiceCollection services1 = <span class="hljs-keyword">new</span> ServiceCollection();<br><br>            services1.AddTransient&lt;ITestServiceA, TestServiceA&gt;();<br><br>            ServiceProvider serviceProvider = services1.BuildServiceProvider();<br><br>            ITestServiceA serviceA1_1 = serviceProvider.GetService&lt;ITestServiceA&gt;();<br><br>            ITestServiceA serviceA1_2 = serviceProvider.GetService&lt;ITestServiceA&gt;();<br>            <span class="hljs-comment">//比较上述这俩实例是不是同一个</span><br>            <span class="hljs-built_in">bool</span> IsOk1 = <span class="hljs-built_in">object</span>.ReferenceEquals(serviceA1_1, serviceA1_2);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 单例生命周期 每次获取的时候都是同一个实例</span><br><br>            IServiceCollection services2 = <span class="hljs-keyword">new</span> ServiceCollection();<br><br>            services2.AddSingleton&lt;ITestServiceA, TestServiceA&gt;();<br><br>            ServiceProvider serviceProvider2 = services2.BuildServiceProvider();<br><br>            ITestServiceA serviceA2_1 = serviceProvider2.GetService&lt;ITestServiceA&gt;();<br><br>            ITestServiceA serviceA2_2 = serviceProvider2.GetService&lt;ITestServiceA&gt;();<br>            <span class="hljs-comment">//比较上述这俩实例是不是同一个</span><br>            <span class="hljs-built_in">bool</span> IsOk2 = <span class="hljs-built_in">object</span>.ReferenceEquals(serviceA2_1, serviceA2_2);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 作用域生命周期</span><br><br>            IServiceCollection services3 = <span class="hljs-keyword">new</span> ServiceCollection();<br><br>            services3.AddScoped&lt;ITestServiceA, TestServiceA&gt;();<br><br>            ServiceProvider serviceProvider3_1 = services3.BuildServiceProvider();<br><br>            ITestServiceA serviceA3_1 = serviceProvider3_1.GetService&lt;ITestServiceA&gt;();<br><br>            ITestServiceA serviceA3_2 = serviceProvider3_1.GetService&lt;ITestServiceA&gt;();<br>            <span class="hljs-comment">//比较上述这俩实例是不是同一个</span><br>            <span class="hljs-built_in">bool</span> IsOk3 = <span class="hljs-built_in">object</span>.ReferenceEquals(serviceA3_1, serviceA3_2);<br><br>            ServiceProvider serviceProvider3_2 = services3.BuildServiceProvider();<br><br>            ITestServiceA serviceA3_3 = serviceProvider3_2.GetService&lt;ITestServiceA&gt;();<br><br>            ITestServiceA serviceA3_4 = serviceProvider3_2.GetService&lt;ITestServiceA&gt;();<br><br>            <span class="hljs-built_in">bool</span> IsOk4 = <span class="hljs-built_in">object</span>.ReferenceEquals(serviceA3_3, serviceA3_4);<br><br>            <span class="hljs-built_in">bool</span> IsOk5 = <span class="hljs-built_in">object</span>.ReferenceEquals(serviceA3_1, serviceA3_3);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br><br><br>            services.AddControllersWithViews();<br><br>            services.AddSession();<br><br>            <span class="hljs-comment">//加入中间件，方便实时调试HTML</span><br>            services.AddRazorPages().AddRazorRuntimeCompilation();<br><br>            <span class="hljs-comment">//注入服务</span><br>            services.AddTransient&lt;ICoustomInterface, CoustomService&gt;();<br><br>            <span class="hljs-comment">//取配置文件中的TEST节点，映射到 TESTMODEL 实体</span><br>            services.Configure&lt;TESTMODEL&gt;(Configuration.GetSection(<span class="hljs-string">&quot;TEST&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Autofac-应用"><a href="#Autofac-应用" class="headerlink" title="Autofac 应用"></a>Autofac 应用</h2><h3 id="初识-Autofac"><a href="#初识-Autofac" class="headerlink" title="初识 Autofac"></a>初识 Autofac</h3><p><strong>Autofac 是一款第三方，很流行的 IOC容器，应用方法如下：</strong></p><ol><li>Nuget 获取 Autofac 组件。</li><li>创建一个ContainerBuilder 对象</li><li>注册抽象和实现方法 格式：builder.RegisterType&lt;实现方法&gt;().As&lt;抽象接口&gt;();</li><li>Build 得到 container 容器</li><li>管 container 容器 要 ITestServiceA 服务</li><li>应用 要到的 ITestServiceA 服务</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> Autofac 应用</span><br><span class="hljs-comment">//1. Nuget Autofac </span><br><span class="hljs-comment">//2. 创建一个ContainerBuilder 对象 </span><br>ContainerBuilder builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><span class="hljs-comment">//3. 注册抽象和实现方法 格式：builder.RegisterType&lt;实现方法&gt;().As&lt;ITestServiceA&gt;();</span><br>builder.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();<br><span class="hljs-comment">//4. Build 得到 container 容器</span><br>IContainer container = builder.Build();<br><span class="hljs-comment">//5. 管 container 容器 要 ITestServiceA 服务</span><br>ITestServiceA testServiceA = container.Resolve&lt;ITestServiceA&gt;();<span class="hljs-comment">//获取服务</span><br><span class="hljs-comment">//6. 应用 要到的 ITestServiceA 服务</span><br>testServiceA.Show();<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><h3 id="Autofac-多种注册方式"><a href="#Autofac-多种注册方式" class="headerlink" title="Autofac 多种注册方式"></a>Autofac 多种注册方式</h3><p><strong>第一种：构造函数注入</strong> </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">ContainerBuilder builder1 = <span class="hljs-keyword">new</span> ContainerBuilder();<br>builder1.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();<br>builder1.RegisterType&lt;TestServiceB&gt;().As&lt;ITestServiceB&gt;();<br>builder1.RegisterType&lt;TestServiceC&gt;().As&lt;ITestServiceC&gt;();<br>IContainer container1 = builder1.Build();<br>ITestServiceC testServiceC1 = container1.Resolve&lt;ITestServiceC&gt;();<br>testServiceC1.Show();<br></code></pre></td></tr></table></figure><p>这没啥说的，基本操作。</p><p><strong>第二种：属性注入</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">ContainerBuilder builder2 = <span class="hljs-keyword">new</span> ContainerBuilder();<br>builder2.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();<br>builder2.RegisterType&lt;TestServiceB&gt;().As&lt;ITestServiceB&gt;();<br>builder2.RegisterType&lt;TestServiceC&gt;().As&lt;ITestServiceC&gt;();<br>builder2.RegisterType&lt;TestServiceD&gt;().As&lt;ITestServiceD&gt;().PropertiesAutowired();<br>IContainer container2 = builder2.Build();<br>ITestServiceD testServiceD = container2.Resolve&lt;ITestServiceD&gt;();<br>testServiceD.Show();<br></code></pre></td></tr></table></figure><p>关注一下<code>TestServiceD</code> 里，还有 <code>PropertiesAutowired()</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceD</span> : <span class="hljs-title">ITestServiceD</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> ITestServiceA testServiceA &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> ITestServiceB testServiceB &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> ITestServiceC testServiceC &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceD</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            <span class="hljs-comment">//基于TestService ABC 都注册了，在执行下面这行代码的时候 才会去Set属性值，会挨个都执行ABC的构造函数。</span><br>            testServiceA.Show();<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>第三种：方法注入</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">ContainerBuilder builder3 = <span class="hljs-keyword">new</span> ContainerBuilder();<br>builder3.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();<br>builder3.RegisterType&lt;TestServiceB&gt;().As&lt;ITestServiceB&gt;();<br>builder3.RegisterType&lt;TestServiceC&gt;().OnActivated(e =&gt; e.Instance.SetService(e.Context.Resolve&lt;ITestServiceA&gt;())).As&lt;ITestServiceC&gt;();<br>builder3.RegisterType&lt;TestServiceD&gt;().As&lt;ITestServiceD&gt;().PropertiesAutowired();<br>IContainer container3 = builder3.Build();<br>ITestServiceC testServiceC = container3.Resolve&lt;ITestServiceC&gt;();<br>testServiceC.Show();<br></code></pre></td></tr></table></figure><p>这个地方需要关注两点：</p><ol><li><p>方法注入种 <code>TestServiceC</code>的注入方式与AB注入方式的差异<code>OnActivated</code></p></li><li><p>上述不同的注册方式是需要结合下面的代码使用,注意 <code>SetService</code>方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceC</span> : <span class="hljs-title">ITestServiceC</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> ITestServiceA _testServiceA = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetService</span>(<span class="hljs-params">ITestServiceA testServiceA</span>)</span><br>        &#123;<br>            _testServiceA = testServiceA;<br>        &#125;<br>        <br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceC</span>(<span class="hljs-params">ITestServiceA serviceA</span>)</span><br>        &#123;<br>            _testServiceA = serviceA;<br><br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            _testServiceA.Show();<br><br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="Autofac-生命周期"><a href="#Autofac-生命周期" class="headerlink" title="Autofac 生命周期"></a>Autofac 生命周期</h3><p>第一种：瞬时生命周期（InstancePerDependency）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 瞬时生命周期 (InstancePerDependency)</span><br>&#123;<br>    ContainerBuilder builder4 = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>    builder4.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;().InstancePerDependency();<br><br>    IContainer container4 = builder4.Build();<br><br>    ITestServiceA testServiceA1 = container4.Resolve&lt;ITestServiceA&gt;();<br>    ITestServiceA testServiceA2 = container4.Resolve&lt;ITestServiceA&gt;();<br><br>    Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-瞬时：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA1, testServiceA2));<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p>第二种：单例生命周期（SingleInstance）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 单例生命周期（SingleInstance）</span><br>&#123;<br>    ContainerBuilder builder4 = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>    builder4.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;().SingleInstance();<br><br>    IContainer container4 = builder4.Build();<br><br>    ITestServiceA testServiceA1 = container4.Resolve&lt;ITestServiceA&gt;();<br>    ITestServiceA testServiceA2 = container4.Resolve&lt;ITestServiceA&gt;();<br><br>    Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-单例：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA1, testServiceA2));<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p>第三种：作用域生命周期（InstancePerLifetimeScope）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 作用域生命周期（InstancePerLifetimeScope）</span><br>&#123;<br>    ContainerBuilder builder4 = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>    builder4.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;().InstancePerLifetimeScope();<br><br>    IContainer container4 = builder4.Build();<br><br>    ITestServiceA testServiceA5 = <span class="hljs-literal">null</span>;<br><br>    ITestServiceA testServiceA6 = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> Scope = container4.BeginLifetimeScope())<br>    &#123;<br>        ITestServiceA testServiceA1 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>        ITestServiceA testServiceA2 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>        Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-作用域1-1：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA1, testServiceA2));<span class="hljs-comment">//True</span><br><br>        testServiceA5 = testServiceA2;<br>    &#125;<br><br>    <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> Scope = container4.BeginLifetimeScope())<br>    &#123;<br>        ITestServiceA testServiceA3 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>        ITestServiceA testServiceA4 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>        Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-作用域2-2：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA3, testServiceA4));<span class="hljs-comment">//True</span><br><br>        testServiceA6 = testServiceA4;<br>    &#125;<br><br>    Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-作用域1-2：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA5, testServiceA6));<span class="hljs-comment">//False</span><br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p>第三种扩展：加参数标记 </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 作用域生命周期-扩展（InstancePerLifetimeScope+参数标记）</span><br>&#123;<br>    ContainerBuilder builder4 = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>    builder4.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;().InstancePerLifetimeScope();<br><br>    IContainer container4 = builder4.Build();<br><br>    ITestServiceA testServiceA5 = <span class="hljs-literal">null</span>;<br><br>    ITestServiceA testServiceA6 = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> Scope = container4.BeginLifetimeScope(<span class="hljs-string">&quot;Harris&quot;</span>))<br>    &#123;<br>        ITestServiceA testServiceA1 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> Scope1 = container4.BeginLifetimeScope())<br>        &#123;<br>            ITestServiceA testServiceA2 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>            Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-作用域扩展1：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA1, testServiceA2));<br>        &#125;<br><br>        testServiceA5 = testServiceA1;<br>    &#125;<br><br>    <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> Scope = container4.BeginLifetimeScope(<span class="hljs-string">&quot;Harris&quot;</span>))<br>    &#123;<br>        ITestServiceA testServiceA1 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> Scope1 = container4.BeginLifetimeScope())<br>        &#123;<br>            ITestServiceA testServiceA2 = Scope.Resolve&lt;ITestServiceA&gt;();<br><br>            Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-作用域扩展2：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA1, testServiceA2));<br>        &#125;<br><br>        testServiceA6 = testServiceA1;<br>    &#125;<br><br>    Console.WriteLine(<span class="hljs-string">&quot;Autofac 生命周期-作用域扩展3：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA5, testServiceA6));<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210829154658355.png" alt="image-20210829154658355"></p><h3 id="Autofac-读取配置文件注册"><a href="#Autofac-读取配置文件注册" class="headerlink" title="Autofac 读取配置文件注册"></a>Autofac 读取配置文件注册</h3><ol><li><p>Nuget 获取</p><ul><li>Autofac.Extensions.DependencyInjection</li><li>Autofac.Configuration</li></ul></li><li><p>准备配置文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;components&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Service.TestServiceA,DotNetCoreDemo.Service&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Interface.ITestServiceA,DotNetCoreDemo.Interface&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;instanceScope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;single-instance&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//生命周期</span><br>      <span class="hljs-attr">&quot;injectProperties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span> <span class="hljs-comment">// 是否支持属性注入</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Service.TestServiceB,DotNetCoreDemo.Service&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Interface.ITestServiceB,DotNetCoreDemo.Interface&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;instanceScope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;single-instance&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//生命周期</span><br>      <span class="hljs-attr">&quot;injectProperties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span> <span class="hljs-comment">// 是否支持属性注入</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Service.TestServiceC,DotNetCoreDemo.Service&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Interface.ITestServiceC,DotNetCoreDemo.Interface&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;instanceScope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;single-instance&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//生命周期</span><br>      <span class="hljs-attr">&quot;injectProperties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span> <span class="hljs-comment">// 是否支持属性注入</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Service.TestServiceD,DotNetCoreDemo.Service&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Interface.ITestServiceD,DotNetCoreDemo.Interface&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;instanceScope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;single-instance&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//生命周期</span><br>      <span class="hljs-attr">&quot;injectProperties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span> <span class="hljs-comment">// 是否支持属性注入</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p>读取配置文件，通过Autofac 配置文件实现注册抽象服务和具体方法。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> Autofac 读取配置文件注册服务</span><br>&#123;<br>    ContainerBuilder builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>    IConfigurationBuilder config = <span class="hljs-keyword">new</span> ConfigurationBuilder();<br><br>    IConfigurationSource source = <span class="hljs-keyword">new</span> JsonConfigurationSource()<br>    &#123;<br>        Path = <span class="hljs-string">&quot;CfgFile/Autofac.json&quot;</span>,<br>        Optional = <span class="hljs-literal">false</span>,<span class="hljs-comment">//默认是false ,可以不写</span><br>        ReloadOnChange = <span class="hljs-literal">true</span><span class="hljs-comment">//默认是true，可不写</span><br>    &#125;;<br><br>    config.Add(source);<br><br>    ConfigurationModule module = <span class="hljs-keyword">new</span> ConfigurationModule(config.Build());<br><br>    builder.RegisterModule(module);<br><br>    IContainer container = builder.Build();<br><br>    ITestServiceA testServiceA = container.Resolve&lt;ITestServiceA&gt;();<br><br>    testServiceA.Show();<br><br>    ITestServiceD testServiceD = container.Resolve&lt;ITestServiceD&gt;();<br><br>    testServiceD.Show();<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure></li><li><p>有了Autofac 配置文件就可以灵活的调整服务（interface）与服务本身（Service）中的关系。</p><p>举个例子：如果现在有个<code>TestServiceE</code>,依赖于<code>ItestServiceA</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceE</span> : <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceE</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> str</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> str + GetType().Name.ToString();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            Console.WriteLine(GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后刚才实现读取配置的代码中，ItestServiceA 想用的是 TestServiceE 的实现方法。只需要修改配置文件即可。</p><p>修改前：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Service.TestServiceA,DotNetCoreDemo.Service&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Interface.ITestServiceA,DotNetCoreDemo.Interface&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;instanceScope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;single-instance&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//生命周期</span><br>      <span class="hljs-attr">&quot;injectProperties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span> <span class="hljs-comment">// 是否支持属性注入</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Service.TestServiceE,DotNetCoreDemo.Service&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;DotNetCoreDemo.Interface.ITestServiceA,DotNetCoreDemo.Interface&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;instanceScope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;single-instance&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//生命周期</span><br>      <span class="hljs-attr">&quot;injectProperties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span> <span class="hljs-comment">// 是否支持属性注入</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210829182152021.png" alt="image-20210829182152021"></p></li></ol><h3 id="Autofac-整合到MVC"><a href="#Autofac-整合到MVC" class="headerlink" title="Autofac 整合到MVC"></a>Autofac 整合到MVC</h3><ol><li><p>Autofac 是一个第三方容器，需要在Program 中告诉框架，要是使用哪个IOC工厂。(AutofacServiceProviderFactory)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IHostBuilder <span class="hljs-title">CreateHostBuilder</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span> =&gt;<br>            Host.CreateDefaultBuilder(args)<br>            .ConfigureWebHostDefaults(webBuilder =&gt;<br>            &#123;<br>                webBuilder.UseStartup&lt;Startup&gt;();<br>            &#125;)<br>            .UseServiceProviderFactory(<span class="hljs-keyword">new</span> AutofacServiceProviderFactory());<br></code></pre></td></tr></table></figure></li><li><p>Startup 文件中新增方法，这个方法被 Autofac 承包了，是个默认执行的方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> Autofac 此方法会在加载的时候默认执行</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 有了此方法，不意味着原生的注册方法不灵了，原生的注册方法照样好使</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 注意：在Autofac注册的时候，会将原生的注册方法都接管过来。</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;container&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureContainer</span>(<span class="hljs-params">ContainerBuilder container</span>)</span><br>&#123;<br>    <span class="hljs-comment">//前三个注册服务交给原生注册方法</span><br>    <span class="hljs-comment">//container.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();</span><br>    <span class="hljs-comment">//container.RegisterType&lt;TestServiceB&gt;().As&lt;ITestServiceB&gt;();</span><br>    <span class="hljs-comment">//container.RegisterType&lt;TestServiceC&gt;().As&lt;ITestServiceC&gt;();</span><br>    <span class="hljs-comment">//这个给Autofac注册，关注AutofaCollection 知否正常执行</span><br>    container.RegisterType&lt;TestServiceD&gt;().As&lt;ITestServiceD&gt;().PropertiesAutowired();<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>需要注意：</p><ol><li>ConfigureContainer() 方法是默认执行的；</li><li>有了此方法，不意味着原生的注册方法不灵了，原生的注册方法照样好使；</li><li>在Autofac注册的时候，会将原生的注册方法都接管过来，这样在使用时候就连贯了。</li></ol></li></ol><h3 id="Autofac-支持控制器属性注入"><a href="#Autofac-支持控制器属性注入" class="headerlink" title="Autofac 支持控制器属性注入"></a>Autofac 支持控制器属性注入</h3><ol><li><p>指定控制器的实例让容器来创建 – Startup ConfigureServices()</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 指定控制器的实例让容器来创建,告诉框架，要使用Autofac容器来创建控制器的实例。</span><br><br>services.Replace(ServiceDescriptor.Transient&lt;IControllerActivator, ServiceBasedControllerActivator&gt;());<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure></li><li><p>注册所有控制器的关系+控制器实例化所需要的所有组件 – Startup ConfigureContainer()</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 注册所有控制器的关系+控制器实例化所需要的所有组件</span><br><br>Type[] controllerTypesInAssmbly = <span class="hljs-keyword">typeof</span>(Startup).Assembly.GetExportedTypes().Where(type =&gt; <span class="hljs-keyword">typeof</span>(ControllerBase).IsAssignableFrom(type)).ToArray();<br><br><span class="hljs-comment">//注册属性，具体注册哪些属性，交给 CustomPropertySelector()</span><br><span class="hljs-comment">//CustomPropertySelector()方法会通过CustomPropertyAttribute这个特性去查找、返回</span><br>container.RegisterTypes(controllerTypesInAssmbly).PropertiesAutowired(<span class="hljs-keyword">new</span> CustomPropertySelector());<br></code></pre></td></tr></table></figure></li><li><p><code>CustomPropertySelector</code> 帮助框架去查找符合条件的属性</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Autofac.Core;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Reflection;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomPropertySelector</span> : <span class="hljs-title">IPropertySelector</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">InjectProperty</span>(<span class="hljs-params">PropertyInfo propertyInfo, <span class="hljs-built_in">object</span> instance</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//需要一个判断维度,只有满足属性是CustomPropertyAttribute的才能返回 true</span><br>            <span class="hljs-keyword">return</span> propertyInfo.CustomAttributes.Any(it =&gt; it.AttributeType == <span class="hljs-keyword">typeof</span>(CustomPropertyAttribute));<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><code>CustomPropertyAttribute</code> 自定义特性</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    <span class="hljs-comment">//添加特性类，并且标注这个是专门用在属性上的</span><br>    [<span class="hljs-meta">AttributeUsage(AttributeTargets.Property)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomPropertyAttribute</span> : <span class="hljs-title">Attribute</span><br>    &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>监控判断属性</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210829200529269.png" alt="image-20210829200529269"></p><p>判断 _ItestServiceAA 结果为 true ，因为它标注属性了</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210829201047537.png" alt="image-20210829201047537"></p><p>反之 _ItestServiceBB 返回 false </p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210829200904042.png" alt="image-20210829200904042"></p></li></ol><h3 id="Autofac-抽象多实现的问题1"><a href="#Autofac-抽象多实现的问题1" class="headerlink" title="Autofac 抽象多实现的问题1"></a>Autofac 抽象多实现的问题1</h3><p>例如：一个Interface 多个服务实现 ，一对多。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210830232226520.png" alt="image-20210830232226520"></p><p>遇到这种情况，在注册的时候就会有问题，尤其是在注册完应用的时候。</p><p><strong>第一种：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 抽象多实现问题</span><br><br>container.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();<br>container.RegisterType&lt;TestServiceE&gt;().As&lt;ITestServiceA&gt;();<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p>结果就是</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210830232929753.png" alt="image-20210830232929753"></p><p>结论就是：</p><p>在同一个接口下多个对象的时候，最后注册的那个对象才会生效。</p><p><strong>第二种：</strong></p><p>使用 <code>IEnumerable&lt;ITestServiceA&gt;</code> 方式，返回多个。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210830233558148.png" alt="image-20210830233558148"></p><p><strong>第三种：</strong></p><p>Startup 中注册所有与<code>ItestServiceA</code>相关的对象</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">container.RegisterSource(<span class="hljs-keyword">new</span> AnyConcreteTypeNotAlreadyRegisteredSource(t =&gt; t.IsAssignableTo&lt;ITestServiceA&gt;()));<br></code></pre></td></tr></table></figure><p>然后如下图：直接实例化对象（不是Interface），然后通过构造函数接下来使用。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210830234629332.png" alt="image-20210830234629332"></p><p>扩展一下：</p><p>新建 AutofacModule.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Autofac;<br><span class="hljs-keyword">using</span> Autofac.Features.ResolveAnything;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AutofacModule</span> : <span class="hljs-title">Module</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Load</span>(<span class="hljs-params">ContainerBuilder builder</span>)</span><br>        &#123;<br>            builder.RegisterSource(<span class="hljs-keyword">new</span> AnyConcreteTypeNotAlreadyRegisteredSource(t =&gt; t.IsAssignableTo&lt;ITestServiceA&gt;()));<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后修改 Startup <code>container.RegisterModule(new AutofacModule());</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 抽象多实现问题</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span>/1. 正常操作 在同一个接口下多个对象的时候，最后注册的那个对象才会生效。</span><br>container.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;();<br>container.RegisterType&lt;TestServiceE&gt;().As&lt;ITestServiceA&gt;();<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span>/2. 使用 `IEnumerable<span class="hljs-doctag">&lt;ITestServiceA&gt;</span>` 方式，返回多个。</span><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span>/3. 第三种方式如下，需要在控制器中构造函数承接对象。</span><br><span class="hljs-comment">//container.RegisterSource(new AnyConcreteTypeNotAlreadyRegisteredSource(t =&gt; t.IsAssignableTo&lt;ITestServiceA&gt;()));</span><br><br>container.RegisterModule(<span class="hljs-keyword">new</span> AutofacModule());<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p>这样的好处，就是可以分模块注册服务。</p><h3 id="Autofac-支持-AOP"><a href="#Autofac-支持-AOP" class="headerlink" title="Autofac 支持 AOP"></a>Autofac 支持 AOP</h3><p><strong>AOP 面向切片编程：在不修改原来代码逻辑的基础上，可以动态的在某个动作之前或者之后执行某些方法。</strong></p><ol><li><p>主程序 Nugget 引入 <code>Castle.Core</code>  and  <code>Castle.DynamicProxy</code></p></li><li><p>新建AutoAop 扩展类，建议这个类不要新建在主程序中，可能会引起服务互相依赖的后果。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Castle.DynamicProxy;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Common.AutofacExtension</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomAutofacAOP</span> : <span class="hljs-title">IInterceptor</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Intercept</span>(<span class="hljs-params">IInvocation invocation</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;执行Show前干点事&quot;</span>);<br><br>            invocation.Proceed();<br><br>            Console.WriteLine(<span class="hljs-string">&quot;执行Show后干点事&quot;</span>);<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>在Interface 层想管的类上添加特性 <code>[Intercept(typeof(CustomAutofacAOP))]</code>，为了AOP能在当前接口生效。<em>也得引入 Castle.DynamicProxy</em></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Autofac.Extras.DynamicProxy;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Common.AutofacExtension;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Interface</span><br>&#123;<br>    [<span class="hljs-meta">Intercept(typeof(CustomAutofacAOP))</span>]<span class="hljs-comment">//为了AOP能在当前接口生效</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span>;<br><br>        <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> str</span>)</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>需要在 Startup.cs 中注册 <code>container.RegisterType(typeof(CustomAutofacAOP));</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> Autofac 支持 AOP</span><br>container.RegisterType(<span class="hljs-keyword">typeof</span>(CustomAutofacAOP));<span class="hljs-comment">//注册</span><br><span class="hljs-comment">//EnableInterfaceInterceptors() 告诉框架这个要支持AOP</span><br>container.RegisterType&lt;TestServiceA&gt;().As&lt;ITestServiceA&gt;().EnableInterfaceInterceptors();<span class="hljs-comment">//接口式支持AOP</span><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure></li><li><p>应用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FourController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        [<span class="hljs-meta">CustomProperty</span>]<br>        <span class="hljs-keyword">private</span> ITestServiceA _ItestServiceAA &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ITestServiceA _ItestServiceA = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FourController</span>(<span class="hljs-params">ITestServiceA ItestServiceA, ITestServiceA testServiceA</span>)</span><br>        &#123;<br>            _ItestServiceAA = testServiceA;<br><br>            _ItestServiceA = ItestServiceA;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            _ItestServiceAA.Show();<br><br>            _ItestServiceA.Show();<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>结果</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210901221357225.png" alt="image-20210901221357225"></p></li></ol><h3 id="Autofac-支持-AOP2"><a href="#Autofac-支持-AOP2" class="headerlink" title="Autofac 支持 AOP2"></a>Autofac 支持 AOP2</h3><p><code>EnableInterfaceInterceptors</code> 支持 <code>Interface</code>中标记<code>[Intercept(typeof(CustomAutofacAOP))]</code>，只要实现这个就可以实现AOP</p><p><code>EnableClassInterceptors</code> 支持 <code>Service</code> 中标记 <code>[Intercept(typeof(CustomAutofacAOP))]</code> ,只有标记这个特性，才能支持AOP。</p><p><code>EnableClassInterceptors</code>  还需要 设置 虚方法 <code>virtual</code></p><p>注意：如果同时使用<code>EnableInterfaceInterceptors</code> 就会重复执行AOP.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Autofac.Extras.DynamicProxy;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Common.AutofacExtension;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Service</span><br>&#123;<br>    <span class="hljs-comment">//标记特性</span><br>    [<span class="hljs-meta">Intercept(typeof(CustomAutofacAOP))</span>]<span class="hljs-comment">//为了AOP能在当前接口生效</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestServiceA</span> : <span class="hljs-title">ITestServiceA</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">TestServiceA</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-keyword">this</span>.GetType().Name + <span class="hljs-string">&quot;构造了&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReturnStr</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> str</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> str + GetType().Name.ToString();<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 标记虚方法</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            Console.WriteLine(GetType().Name + <span class="hljs-string">&quot;Show&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210902225117135.png" alt="image-20210902225117135"></p><h3 id="Autofac-抽象多个实现构造函数注入"><a href="#Autofac-抽象多个实现构造函数注入" class="headerlink" title="Autofac 抽象多个实现构造函数注入"></a>Autofac 抽象多个实现构造函数注入</h3><ol><li><p>先上一波传统手艺</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">//在 方法 ：ConfigureServices 中</span><br><span class="hljs-meta">#<span class="hljs-keyword">region</span> 一抽象多个实现问题</span><br>&#123;<br>    ContainerBuilder builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>    builder.RegisterType&lt;TestServiceA&gt;().Named&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>    builder.RegisterType&lt;TestServiceE&gt;().Named&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br><br>    IContainer container = builder.Build();<br><br>    ITestServiceA testServiceA1 = container.ResolveKeyed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>    ITestServiceA testServiceA2 = container.ResolveKeyed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br><br>    Console.WriteLine(<span class="hljs-string">&quot;一抽象多个实现问题：&quot;</span> + <span class="hljs-built_in">object</span>.ReferenceEquals(testServiceA1, testServiceA2));<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注意 <code>Named</code> 和 <code>ResolveKeyed</code> 搭配使用更丝滑。</strong></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210903214211926.png" alt="image-20210903214211926"></p></li><li><p>在通过AutofacIOC 实现一波</p><p>Startup.cs  - ConfigureContainer 注册 ，注意 <code>Named</code> ，同时实现AOP</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 一抽象多实现问题2</span><br>&#123;<br>container.RegisterType&lt;TestServiceA&gt;().Named&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>).EnableClassInterceptors();<br>container.RegisterType&lt;TestServiceE&gt;().Named&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>).EnableClassInterceptors();<br>&#125;<br></code></pre></td></tr></table></figure><p>应用：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">ITestServiceA obja = _componentContext.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>ITestServiceA objb = _componentContext.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br></code></pre></td></tr></table></figure><p>全文：需要注意注册 Autofac 上下文</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Autofac;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FourController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        [<span class="hljs-meta">CustomProperty</span>]<br>        <span class="hljs-keyword">private</span> ITestServiceA _ItestServiceAA &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> Autofac 上下文</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">private</span> IComponentContext _componentContext = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FourController</span>(<span class="hljs-params">IComponentContext componentContext</span>)</span><br>        &#123;<br>            _componentContext = componentContext;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (_ItestServiceAA != <span class="hljs-literal">null</span>)<br>            &#123;<br>                _ItestServiceAA.Show();<br>            &#125;<br>           <br>            ITestServiceA obja = _componentContext.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>            ITestServiceA objb = _componentContext.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br><br>            obja.Show();<br>            objb.Show();<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210904135936278.png" alt="image-20210904135936278"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210904140002918.png" alt="image-20210904140002918"></p></li></ol><h3 id="Autofac-抽象多个实现属性注入"><a href="#Autofac-抽象多个实现属性注入" class="headerlink" title="Autofac 抽象多个实现属性注入"></a>Autofac 抽象多个实现属性注入</h3><p>其他与一个抽象多个实现构造函数注入一样</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">//首先，把属性注入</span><br>[<span class="hljs-meta">CustomProperty</span>]<br><span class="hljs-keyword">private</span> IComponentContext componentContextprop &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>ITestServiceA objc = componentContextprop.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>ITestServiceA objd = componentContextprop.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br></code></pre></td></tr></table></figure><p>全文：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Autofac;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Interface;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FourController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        [<span class="hljs-meta">CustomProperty</span>]<br>        <span class="hljs-keyword">private</span> ITestServiceA _ItestServiceAA &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        [<span class="hljs-meta">CustomProperty</span>]<br>        <span class="hljs-keyword">private</span> IComponentContext componentContextprop &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> Autofac 上下文</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">private</span> IComponentContext _componentContext = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FourController</span>(<span class="hljs-params">IComponentContext componentContext</span>)</span><br>        &#123;<br>            _componentContext = componentContext;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (_ItestServiceAA != <span class="hljs-literal">null</span>)<br>            &#123;<br>                _ItestServiceAA.Show();<br>            &#125;<br>            <br>            ITestServiceA obja = _componentContext.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>            ITestServiceA objb = _componentContext.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br><br>            obja.Show();<br>            objb.Show();<br><br>            ITestServiceA objc = componentContextprop.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceA&quot;</span>);<br>            ITestServiceA objd = componentContextprop.ResolveNamed&lt;ITestServiceA&gt;(<span class="hljs-string">&quot;TestServiceE&quot;</span>);<br><br>            objc.Show();<br>            objd.Show();<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h2><p>AOP ：可以在不修改之前的代码的情况下动态增加新的功能。</p><p>Filter : 过滤器 ActionFilter 即动作过滤器</p><h3 id="ActionFilter-AOP"><a href="#ActionFilter-AOP" class="headerlink" title="ActionFilter+AOP"></a>ActionFilter+AOP</h3><ol><li><p>新建 CustomActionFilterAttrubute.cs <strong>特性</strong>，并且继承 IActionFilter 接口 和实现 IActionFilter 接口</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomActionFilterAttribute</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IActionFilter</span><br>    &#123;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;OnActionExecuting 执行&quot;</span>);<br>        &#125;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;OnActionExecuted 执行&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>控制器类 需要在对应的Action 方法上标记 <code>[CustomActionFilterAttribute]</code>特性</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FiveController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FiveController</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;FiveController 被构造&quot;</span>);<br>        &#125;<br><br>        [<span class="hljs-meta">CustomActionFilterAttribute</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如下图，执行顺序为：</p><ol><li>CustomActionFilterAttribute - OnActionExecuting</li><li>Action</li><li>CustomActionFilterAttribute - OnActionExecuted</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210904154410691.png" alt="image-20210904154410691"></p></li></ol><h3 id="ActionFilter-多种实现"><a href="#ActionFilter-多种实现" class="headerlink" title="ActionFilter 多种实现"></a>ActionFilter 多种实现</h3><ol><li>通过继承 <code>IActionFilter</code> 实现接口来实现具体前后的功能。</li><li>通过继承 <code>ActionFilterAttribute</code> 通过override 重写方法。（系统框架提供）</li><li>通过继承 <code>IAnsyncActionFilter</code> 实现接口实现，此为异步版本。</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 自定义版本</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomActionFilterAttribute</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IActionFilter</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;OnActionExecuting 执行&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;OnActionExecuted 执行&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 提供提供版本</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomActionFilterChildeAttribute</span> : <span class="hljs-title">ActionFilterAttribute</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot; OnActionExecuting 执行&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;OnActionExecuted 执行&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 异步版本 这个后面再研究</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomActionFilterAsyncAttribute</span> : <span class="hljs-title">IAsyncActionFilter</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Task <span class="hljs-title">OnActionExecutionAsync</span>(<span class="hljs-params">ActionExecutingContext context, ActionExecutionDelegate next</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.Run(() =&gt;<br>            &#123;<br><br>            &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ActionFilter-做日志"><a href="#ActionFilter-做日志" class="headerlink" title="ActionFilter 做日志"></a>ActionFilter 做日志</h3><ol><li><p>先上结果。</p><ol><li>先写构造方法</li><li>执行Action-Index 之前执行操作</li><li>执行Action-Index</li><li>执行Action-Index 之后执行操作</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210904204835244.png" alt="image-20210904204835244"></p></li><li><p>自定义版本中写的，需要注意Ilogger 的注册，还有就是context的各种扩展功能。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 自定义版本</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomActionFilterAttribute</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IActionFilter</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> ILogger&lt;CustomActionFilterAttribute&gt; _logger = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomActionFilterAttribute</span>(<span class="hljs-params">ILogger&lt;CustomActionFilterAttribute&gt; logger</span>)</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;CustomActionFilterAttribute 构造&quot;</span>);<br><br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>    &#123;<br>        _logger.LogInformation(<span class="hljs-string">&quot;OnActionExecuting 开始&quot;</span>);<br><br>  _logger.LogInformation(Newtonsoft.Json.JsonConvert.SerializeObject(context.HttpContext.Request.Query));<br><br>        _logger.LogInformation(<span class="hljs-string">&quot;OnActionExecuting 结束&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>    &#123;<br>        _logger.LogInformation(<span class="hljs-string">&quot;OnActionExecuted 开始&quot;</span>);<br><br>        _logger.LogInformation(Newtonsoft.Json.JsonConvert.SerializeObject(context.Result));<br><br>        _logger.LogInformation(<span class="hljs-string">&quot;OnActionExecuted 结束&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>控制器代码</p><p>这里需要注意的是，由于修改了上述的代码，导致给Action特性<code>[CustomActionFilterAttribute]</code>会报错，所以将Action特性修改为<code>[TypeFilter(typeof(CustomActionFilterAttribute))]</code> 为的是让<code>CustomActionFilterAttribute</code> 可以支持依赖注入。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FiveController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> ILogger&lt;FiveController&gt; _ilogger = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FiveController</span>(<span class="hljs-params">ILogger&lt;FiveController&gt; logger</span>)</span><br>        &#123;<br>            _ilogger = logger;<br><br>            _ilogger.LogInformation(<span class="hljs-string">&quot;FiveController 被构造&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//[CustomActionFilterAttribute]</span><br>        <span class="hljs-comment">//[CustomActionFilterChildeAttribute]</span><br><br>        [<span class="hljs-meta">TypeFilter(typeof(CustomActionFilterAttribute))</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            _ilogger.LogInformation(<span class="hljs-string">&quot;执行FiveController Index Action&quot;</span>);<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="Filter-多种注册"><a href="#Filter-多种注册" class="headerlink" title="Filter 多种注册"></a>Filter 多种注册</h3><ol><li><p>CustomActionFilterAttribute]  必须是无参构造函数才行，可以结合上一节内容</p></li><li><p>[TypeFilter(typeof(CustomActionFilterAttribute))] 可以无参构造函数，可以支持依赖注入</p></li><li><p>[ServiceFilter(typeof(CustomActionFilterAttribute))] 可以无参构造函数，可以支持依赖注入，但是必须注册服务</p><p>Startup.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">//注册自定义Filter扩展，且支持属性注入（PropertiesAutowired）</span><br>container.RegisterType(<span class="hljs-keyword">typeof</span>(CustomActionFilterAttribute)).PropertiesAutowired();<br></code></pre></td></tr></table></figure><p>CustomActionFilterAttribute</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">//属性</span><br><span class="hljs-keyword">public</span> ILogger&lt;CustomActionFilterAttribute&gt; loggerProp &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br><span class="hljs-comment">//应用，别写在构造函数里</span><br>loggerProp.LogInformation(<span class="hljs-string">&quot;CustomActionFilterAttribute 支持属性注入&quot;</span>);<br></code></pre></td></tr></table></figure></li></ol><h3 id="FilterFactory-扩展"><a href="#FilterFactory-扩展" class="headerlink" title="FilterFactory 扩展"></a>FilterFactory 扩展</h3><p>本节相当于是对 Filter 多种注册中 TypeFilter 与 ServiceFilter 为什么可以支持依赖注册的递进理解，因为一定是IOC在后面站台。</p><p>把 TypeFilter 与 ServiceFilter 后面的大哥 <code>IFilterFactory</code> 提溜出来盘盘。</p><ol><li><p>首先先创建一个自定义的类 <code>CustomActionFilterFactory</code>, 继承<code>Attribute</code> 实现 <code>IFilterFactory</code> 接口</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility.Filter</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomActionFilterFactory</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IFilterFactory</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> Type _type = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomActionFilterFactory</span>(<span class="hljs-params">Type type</span>)</span><br>        &#123;<br>            _type = type;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> IsReusable =&gt; <span class="hljs-literal">true</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IFilterMetadata <span class="hljs-title">CreateInstance</span>(<span class="hljs-params">IServiceProvider serviceProvider</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">object</span> oInstance = serviceProvider.GetService(_type);<br><br>            <span class="hljs-keyword">return</span> (IFilterMetadata)oInstance;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>然后，替换 TypeFilter 和 ServiceFilter 的地位，将 <code>CustomActionFilterFactory</code> 特性用上。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility.Filter;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FiveController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        <br>        <span class="hljs-keyword">private</span> ILogger&lt;FiveController&gt; _ilogger = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FiveController</span>(<span class="hljs-params">ILogger&lt;FiveController&gt; logger</span>)</span><br>        &#123;<br>            _ilogger = logger;<br><br>            _ilogger.LogInformation(<span class="hljs-string">&quot;FiveController 被构造&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//[CustomActionFilterAttribute]</span><br>        <span class="hljs-comment">//[CustomActionFilterChildeAttribute]</span><br>        <span class="hljs-comment">//[TypeFilter(typeof(CustomActionFilterAttribute))]</span><br>        <span class="hljs-comment">//[ServiceFilter(typeof(CustomActionFilterAttribute))]</span><br>        [<span class="hljs-meta">CustomActionFilterFactory(typeof(CustomActionFilterAttribute))</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            _ilogger.LogInformation(<span class="hljs-string">&quot;执行FiveController Index Action&quot;</span>);<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>结果完美，复盘一下就是CustomActionFilterFactory 实现了 IFilterFactory 接口的功。</p></li></ol><h3 id="Filter-生效范围与执行顺序"><a href="#Filter-生效范围与执行顺序" class="headerlink" title="Filter 生效范围与执行顺序"></a>Filter 生效范围与执行顺序</h3><pre><code class="hljs">`[CustomActionFilterFactory(typeof(CustomActionFilterAttribute))]`</code></pre><ol><li><p>标记在Action 上只对当前 Action 生效</p></li><li><p>标记在Controller 上，对 当前Controller 中所有Action 生效</p></li><li><p>全局注册，对当前整个项目所有 Action生效。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// Startup.cs - ConfigureServices</span><br><span class="hljs-meta">#<span class="hljs-keyword">region</span> 全局注册 Filter </span><br><br>    services.AddMvc(option =&gt;<br>    &#123;<br>        option.Filters.Add&lt;CustomActionFilterAttribute&gt;();<br>    &#125;);<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure></li><li><p>如果有三个Filter注册在全局、标记在Controller、标记在 Action 上，执行顺序</p><p>如果按照默认（不注入Order的前提）</p><ol><li>全局 OnActionExecuting</li><li>控制器 OnActionExecuting</li><li>Action OnActionExecuting</li><li>正方法</li><li>Action OnActionExecuted</li><li>控制器  OnActionExecuted</li><li>全局 OnActionExecuted</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility.Filter</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 用来注册全局的</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestGlobalActionFilterAttribute</span> : <span class="hljs-title">ActionFilterAttribute</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;TestGlobalActionFilterAttribute OnActionExecuting&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;TestGlobalActionFilterAttribute OnActionExecuted&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 用来标记控制器的</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestControllerActionFilterAttribute</span> : <span class="hljs-title">ActionFilterAttribute</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;TestControllerActionFilterAttribute OnActionExecuting&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;TestControllerActionFilterAttribute OnActionExecuted&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 用来标记Action的</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestAction_ActionFilterAttribute</span> : <span class="hljs-title">ActionFilterAttribute</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;TestAction_ActionFilterAttribute OnActionExecuting&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;TestAction_ActionFilterAttribute OnActionExecuted&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果想修改执行顺序</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility;<br><span class="hljs-keyword">using</span> DotNetCoreDemo.Utility.Filter;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-comment">//标记测试Filter</span><br>    [<span class="hljs-meta">TestControllerActionFilterAttribute(Order =-1)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FiveController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br><br>        <span class="hljs-keyword">private</span> ILogger&lt;FiveController&gt; _ilogger = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FiveController</span>(<span class="hljs-params">ILogger&lt;FiveController&gt; logger</span>)</span><br>        &#123;<br>            _ilogger = logger;<br><br>            _ilogger.LogInformation(<span class="hljs-string">&quot;FiveController 被构造&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//[CustomActionFilterAttribute]</span><br>        <span class="hljs-comment">//[CustomActionFilterChildeAttribute]</span><br>        <span class="hljs-comment">//[TypeFilter(typeof(CustomActionFilterAttribute))]</span><br>        <span class="hljs-comment">//[ServiceFilter(typeof(CustomActionFilterAttribute))]</span><br>        <span class="hljs-comment">//[CustomActionFilterFactory(typeof(CustomActionFilterAttribute))]</span><br>        <span class="hljs-comment">//标记测试Filter</span><br>        [<span class="hljs-meta">TestAction_ActionFilterAttribute(Order =-2)</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            _ilogger.LogInformation(<span class="hljs-string">&quot;执行FiveController Index Action&quot;</span>);<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述代码得出的执行顺序就是</p><ol><li>Action OnActionExecuting</li><li>控制器 OnActionExecuting</li><li>全局 OnActionExecuting</li><li>正方法</li><li>全局 OnActionExecuted</li><li>控制器  OnActionExecuted</li><li>Action OnActionExecuted</li></ol></li></ol><h3 id="ResourceFilter-扩展定制-支持缓存"><a href="#ResourceFilter-扩展定制-支持缓存" class="headerlink" title="ResourceFilter 扩展定制-支持缓存"></a>ResourceFilter 扩展定制-支持缓存</h3><p>新建自定义ResourceFilter 扩展类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility.Filter</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomResourceFilterAttribute</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IResourceFilter</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">object</span>&gt; CacheDic = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">object</span>&gt;();<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnResourceExecuting</span>(<span class="hljs-params">ResourceExecutingContext context</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> key = context.HttpContext.Request.Path;<br><br>            <span class="hljs-keyword">if</span> (CacheDic.Any(item =&gt; item.Key == key))<br>            &#123;<br>                context.Result = CacheDic[key] <span class="hljs-keyword">as</span> IActionResult;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnResourceExecuted</span>(<span class="hljs-params">ResourceExecutedContext context</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> key = context.HttpContext.Request.Path;<br><br>            CacheDic[key] = context.Result;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>控制器应用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">[<span class="hljs-meta">CustomResourceFilterAttribute</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">IndexTestResource</span>()</span><br>&#123;<br>    ViewBag.Date = DateTime.Now;<br><br>    <span class="hljs-keyword">return</span> View();<br>&#125;<br></code></pre></td></tr></table></figure><p>IndexTestResource.cshtml</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><br>@&#123;<br>    ViewData[<span class="hljs-string">&quot;Title&quot;</span>] = <span class="hljs-string">&quot;IndexTestResource&quot;</span>;<br>&#125;<br><br>&lt;h1&gt;IndexTestResource&lt;/h1&gt;<br><br>&lt;h3&gt;缓存时间：@ViewBag.Date&lt;/h3&gt;<br><br>&lt;h3&gt;页面时间：@DateTime.Now&lt;/h3&gt;<br></code></pre></td></tr></table></figure><p>上述主要功能是：新建ResourceFilter扩展特性类，并且在控制器FiveController 中 <code>IndexTestResource</code> Action 标记应用。应用扩展标记的作用是为了建立缓存。相比较ActionFilter ，<strong>ResourceFilter 更适合做缓存</strong>，参考下图</p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210905121153341.png" alt="image-20210905121153341" style="zoom: 40%;" /><h3 id="Filter-匿名"><a href="#Filter-匿名" class="headerlink" title="Filter 匿名"></a>Filter 匿名</h3><p>结合 Filter 生效范围与执行顺序来看，如果全局注册 Filter 的话，那么所有Action都会生效，如果这个时候，不想某个Action被生效，那么匿名的作用就来咯。</p><p>现在全局注册：<code> TestGlobalActionFilterAttribute</code> </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 全局注册 Filter </span><br>services.AddMvc(option =&gt;<br>                    &#123;<br>                        <span class="hljs-comment">//option.Filters.Add&lt;CustomActionFilterAttribute&gt;();</span><br>                        <span class="hljs-comment">//注册全局 测试执行顺序</span><br>                        option.Filters.Add&lt;TestGlobalActionFilterAttribute&gt;();<br>                    &#125;);<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><p>现在需要跳过的Action上标注特性：<code>[AllowAnonymousAttribute]</code></p><p>然后再去 <code> TestGlobalActionFilterAttribute</code> 添加判断就OK了，不走这玩意<code>TestGlobalActionFilterAttribute</code>了。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 用来注册全局的</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TestGlobalActionFilterAttribute</span> : <span class="hljs-title">ActionFilterAttribute</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuting</span>(<span class="hljs-params">ActionExecutingContext context</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//判断执行到这的Action有没有标记AllowAnonymousAttribute 特性</span><br>        <span class="hljs-keyword">if</span> (context.ActionDescriptor.EndpointMetadata.Any(item =&gt; item.GetType() == <span class="hljs-keyword">typeof</span>(AllowAnonymousAttribute)))<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        Console.WriteLine(<span class="hljs-string">&quot;TestGlobalActionFilterAttribute OnActionExecuting&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnActionExecuted</span>(<span class="hljs-params">ActionExecutedContext context</span>)</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span>/判断执行到这的Action有没有标记AllowAnonymousAttribute 特性</span><br>        <span class="hljs-keyword">if</span> (context.ActionDescriptor.EndpointMetadata.Any(item =&gt; item.GetType() == <span class="hljs-keyword">typeof</span>(AllowAnonymousAttribute)))<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        Console.WriteLine(<span class="hljs-string">&quot;TestGlobalActionFilterAttribute OnActionExecuted&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面这这个 AllowAnonymousAttribute 也可以自定写个特性，到时候在Action和判断中替换一下特性名称即可。</p><p>通过查询资料，这个匿名一般用于授权<code>AuthorizeAttribute</code>。</p><h3 id="ExceptionFilter"><a href="#ExceptionFilter" class="headerlink" title="ExceptionFilter"></a>ExceptionFilter</h3><p>这个过滤器就是为了处理异常。</p><ol><li>首先创建<code>CustomExceptionFilterAttribute</code> 特性，实现<code>IExceptionFilter</code>接口</li><li>实现方法中需要判断执行到这的异常有没有被处理</li><li>如果没有被处理，那么需要判断异常的源头，如果是<code>ajax</code>请求的异常，返回 Jsonresult，否则，跳转到Error页面显示异常信息。</li><li>上述如果没有毛病的话，那就进行全局注册</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210905161745655.png" alt="image-20210905161745655"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Http;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.ModelBinding;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.ViewFeatures;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility.Filter</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomExceptionFilterAttribute</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IExceptionFilter</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> IModelMetadataProvider _modelmetadataProvider = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomExceptionFilterAttribute</span>(<span class="hljs-params">IModelMetadataProvider modelmetadataProvider</span>)</span><br>        &#123;<br>            _modelmetadataProvider = modelmetadataProvider;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnException</span>(<span class="hljs-params">ExceptionContext context</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (!context.ExceptionHandled)<span class="hljs-comment">//如果有异常未被处理</span><br>            &#123;<br>                <span class="hljs-keyword">if</span> (IsAjaxRequest(context.HttpContext.Request))<br>                &#123;<br>                    context.Result = <span class="hljs-keyword">new</span> JsonResult(<span class="hljs-keyword">new</span> &#123; Result = <span class="hljs-literal">false</span>, Msg = context.Exception.Message &#125;);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> ViewResult &#123; ViewName = <span class="hljs-string">&quot;~/Views/Shared/Error.cshtml&quot;</span> &#125;;<br><br>                    result.ViewData = <span class="hljs-keyword">new</span> ViewDataDictionary(_modelmetadataProvider, context.ModelState);<br><br>                    result.ViewData.Add(<span class="hljs-string">&quot;Exception&quot;</span>, context.Exception);<br><br>                    context.Result = result;<span class="hljs-comment">//断路器</span><br>                &#125;<br><br>                <span class="hljs-comment">//处理完给个True</span><br>                context.ExceptionHandled = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsAjaxRequest</span>(<span class="hljs-params">HttpRequest request</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> header = request.Headers[<span class="hljs-string">&quot;X-Requested-With&quot;</span>];<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;XMLHttpRequest&quot;</span>.Equals(header);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Controller </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">[<span class="hljs-meta">TypeFilter(typeof(CustomExceptionFilterAttribute))</span>] <span class="hljs-comment">// 带参的就得这么标记哦</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">IndexException</span>()</span><br>&#123;<br>    <span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-built_in">int</span> j = <span class="hljs-number">5</span>;<br><br>    <span class="hljs-built_in">int</span> k = j / i;<br><br>    <span class="hljs-keyword">return</span> View();<br>&#125;<br></code></pre></td></tr></table></figure><p>Error.cshtml</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">@&#123; <br>    ViewData[<span class="hljs-string">&quot;Title&quot;</span>] = <span class="hljs-string">&quot;Error&quot;</span>;<br>    Exception exception = <span class="hljs-keyword">base</span>.ViewData[<span class="hljs-string">&quot;Exception&quot;</span>] <span class="hljs-keyword">as</span> Exception;<br>&#125;<br><br>&lt;h1 <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;Error.&lt;/h1&gt;<br>&lt;h2 <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;An error occurred <span class="hljs-keyword">while</span> processing your request.&lt;/h2&gt;<br><br>&lt;h3&gt;Context Exception : @exception.Message&lt;/h3&gt;<br><br></code></pre></td></tr></table></figure><p>上述是在Action上标记CustomExceptionFilterAttribute ,最后，再加上全局注册。</p><h3 id="ExceptionFilter-能捕捉到的异常"><a href="#ExceptionFilter-能捕捉到的异常" class="headerlink" title="ExceptionFilter 能捕捉到的异常"></a>ExceptionFilter 能捕捉到的异常</h3><table><thead><tr><th>异常分类</th><th>可否捕捉</th></tr></thead><tbody><tr><td>控制器实例化异常</td><td>true</td></tr><tr><td>异常发生在Try Cache中</td><td>false（TryCache默认是已经处理过的异常）</td></tr><tr><td>在视图中发生异常</td><td>false（会直接体现在页面上）</td></tr><tr><td>Service层发生异常</td><td>true</td></tr><tr><td>在Action 中发生异常</td><td>true</td></tr><tr><td>请求路径错误异常</td><td>true （需要中间件来完成）</td></tr></tbody></table><p>主要阐述下 如果请求路径错误异常需要如何处理</p><ol><li><p>Startup.cs 中的 Configure 方法中添加中间件，记得放前面点，放最后不管用。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> 捕捉异常补充</span><br><br>app.UseStatusCodePagesWithReExecute(<span class="hljs-string">&quot;/Home/Error/&#123;0&#125;&quot;</span>);<span class="hljs-comment">//只要不是状态200的请求，都能进来</span><br><br>app.UseExceptionHandler(errorapp =&gt;<br>&#123;<br>      errorapp.Run(<span class="hljs-keyword">async</span> context =&gt;<br>      &#123;<br>          context.Response.StatusCode = <span class="hljs-number">200</span>;<br>          context.Response.ContentType = <span class="hljs-string">&quot;text/html&quot;</span>;<br>          <span class="hljs-keyword">await</span> context.Response.WriteAsync(<span class="hljs-string">&quot;&lt;html lang=\&quot;en\&quot;&gt;&lt;body&gt;\r\n&quot;</span>);<br>          <span class="hljs-keyword">await</span> context.Response.WriteAsync(<span class="hljs-string">&quot;Error! &lt;br&gt;&lt;br&gt;\r\n&quot;</span>);<br>          <span class="hljs-keyword">var</span> exceptionHandlePathFeature = context.Features.Get&lt;IExceptionHandlerPathFeature&gt;();<br>                                                                                                    Console.WriteLine(<span class="hljs-string">&quot;**********************************************&quot;</span>);            <br>          Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123; exceptionHandlePathFeature?.Error.Message&#125;</span>&quot;</span>);<br>          Console.WriteLine(<span class="hljs-string">&quot;**********************************************&quot;</span>);<br><br>          <span class="hljs-keyword">if</span> (exceptionHandlePathFeature?.Error <span class="hljs-keyword">is</span> FileNotFoundException)<br>          &#123;<br>               <span class="hljs-keyword">await</span> context.Response.WriteAsync(<span class="hljs-string">&quot;File Error throw! &lt;br&gt;&lt;br&gt;\r\n&quot;</span>);<br>          &#125;<br><br>          <span class="hljs-keyword">await</span> context.Response.WriteAsync(<span class="hljs-string">&quot;&lt;a href =\&quot;Home/Index\&quot;&gt;Home&lt;/a&gt;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>);<br>          <span class="hljs-keyword">await</span> context.Response.WriteAsync(<span class="hljs-string">&quot;&lt;/body&gt;&lt;/html&gt;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>);<br>          <span class="hljs-keyword">await</span> context.Response.WriteAsync(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-number">512</span>));<br>       &#125;);<br>&#125;);<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210905170801999.png" alt="image-20210905170801999" style="zoom:50%;" /></li></ol><h3 id="ResultFilter"><a href="#ResultFilter" class="headerlink" title="ResultFilter"></a>ResultFilter</h3><p>这个过滤器是为了Action 方法里 return view() 服务的，类似AOP这种写法。</p><p>下面代码综合之前的Filter的磨砺，路子都差不多，新建一个自定义特性类，继承 Attribute 实现 IResultFilter 方法。</p><ol><li>IModeIMetadataProvider 是为了接受参数的</li><li>通过接收的参数在Controller 标记 <code>[TypeFilter(typeof(CustomResultFilterAttribute))] </code> Action 方法中，在return View() 这个操作时，判断参数跳转不同的cshtml页。</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.ModelBinding;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc.ViewFeatures;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Utility.Filter</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomResultFilterAttribute</span> : <span class="hljs-title">Attribute</span>, <span class="hljs-title">IResultFilter</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> IModelMetadataProvider _modelmetadataProvider = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomResultFilterAttribute</span>(<span class="hljs-params">IModelMetadataProvider modelmetadataProvider</span>)</span><br>        &#123;<br>            _modelmetadataProvider = modelmetadataProvider;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 执行视图之前</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;context&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnResultExecuting</span>(<span class="hljs-params">ResultExecutingContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;执行视图之前&quot;</span>);<br><br>            <span class="hljs-keyword">var</span> view = context.HttpContext.Request.Query[<span class="hljs-string">&quot;View&quot;</span>];<br><br>            <span class="hljs-keyword">if</span> (view == <span class="hljs-string">&quot;1&quot;</span>)<br>            &#123;<br>                <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> ViewResult &#123; ViewName = <span class="hljs-string">&quot;~/Views/Five/IndexResult.cshtml&quot;</span> &#125;;<br>                result.ViewData = <span class="hljs-keyword">new</span> ViewDataDictionary(_modelmetadataProvider, context.ModelState);<br>                context.Result = result;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> ViewResult &#123; ViewName = <span class="hljs-string">&quot;~/Views/Five/IndexResult_EN.cshtml&quot;</span> &#125;;<br>                result.ViewData = <span class="hljs-keyword">new</span> ViewDataDictionary(_modelmetadataProvider, context.ModelState);<br>                context.Result = result;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 执行视图之后</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;context&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnResultExecuted</span>(<span class="hljs-params">ResultExecutedContext context</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;执行视图之后&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210905185056411.png" alt="image-20210905185056411"></p><h2 id="鉴权授权方式"><a href="#鉴权授权方式" class="headerlink" title="鉴权授权方式"></a>鉴权授权方式</h2><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a><strong>Cookie</strong></h3><p>代码：<code>SevenController</code></p><p>基础授权</p><ol><li><p>使用鉴权 <code>app.UseAuthentication()</code> 必须放在 <code>app.UseRouting();</code> 后面</p></li><li><p>Startup.cs - ConfigureServices</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> Auth-cookie-验证</span><br><br>services.AddAuthentication(<span class="hljs-string">&quot;Cookies&quot;</span>).AddCookie(option =&gt;<br>&#123;<br>    option.LoginPath = <span class="hljs-keyword">new</span> Microsoft.AspNetCore.Http.PathString(<span class="hljs-string">&quot;/Seven/LoginOut&quot;</span>);<br>&#125;);<br><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure></li><li><p>正文</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Authentication;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Authorization;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Security.Claims;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Auth Cookie</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SevenController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        [<span class="hljs-meta">Authorize</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Login</span>()</span><br>        &#123;<br>            List&lt;Claim&gt; Claims = <span class="hljs-keyword">new</span> List&lt;Claim&gt;<br>            &#123;<br>                <span class="hljs-keyword">new</span> Claim(ClaimTypes.Name,<span class="hljs-string">&quot;Harris&quot;</span>),<br>                <span class="hljs-keyword">new</span> Claim(ClaimTypes.Email,<span class="hljs-string">&quot;hou3125378@126.com&quot;</span>),<br>                <span class="hljs-keyword">new</span> Claim(<span class="hljs-string">&quot;Xing&quot;</span>,<span class="hljs-string">&quot;Hou&quot;</span>)<br>            &#125;;<br><br>            ClaimsIdentity identity = <span class="hljs-keyword">new</span> ClaimsIdentity(Claims, <span class="hljs-string">&quot;HarrisIdentity&quot;</span>);<br><br>            HttpContext.SignInAsync(<span class="hljs-keyword">new</span> ClaimsPrincipal(identity));<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">LoginOut</span>()</span><br>        &#123;<br>            HttpContext.SignOutAsync();<br><br>            <span class="hljs-keyword">return</span> View();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>上述代码：可以打开F12，Application-Cookie，观察Cookie的变化。</p><p>如果没有Cookie 去访问Index的时候，就会自动跳转到LoginOut，这时候访问Login，记录下Cookie之后，再访问Index就可以了，最后，访问LoginOut,清除Cookie.</p></li></ol><h3 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a><strong>JWT</strong></h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/Token%E9%89%B4%E6%9D%83%E6%8E%88%E6%9D%83.png" alt="Token鉴权授权"></p><p>上图是访问的过程。</p><h4 id="搭建授权中心（WEBAPI）"><a href="#搭建授权中心（WEBAPI）" class="headerlink" title="搭建授权中心（WEBAPI）"></a>搭建授权中心（<code>WEBAPI</code>）</h4><ol><li><p>Nugget</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211001192934524.png" alt="image-20211001192934524"></p></li><li><p><code>appsettings.json</code> 主要关注 <code>JWTTokenOptions</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;Logging&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;LogLevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;Default&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Warning&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;AllowedHosts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;*&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;JWTTokenOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;Audience&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://localhost:5200&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;Issuer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://localhost:5200&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;SecurityKey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDI2a2EJ7m872v0afyoSDJT2o1+SitIeJSWtLJU8/Wz2m7gStexajkeD+Lka6DSTy8gt9UwfgVQo6uKjVLG5Ex7PiGOODVqAEghBuS7JzIYU5RvI543nNDAPfnJsas96mSA7L/mD7RTE2drj6hf3oZjJpMPZUQI/B1Qjb5H3K3PNwIDAQAB&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p>注册</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.AuthenticationCenter.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Builder;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.HttpsPolicy;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Configuration;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.DependencyInjection;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Hosting;<br><span class="hljs-keyword">using</span> Microsoft.Extensions.Logging;<br><span class="hljs-keyword">using</span> Microsoft.OpenApi.Models;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.AuthenticationCenter</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Startup</span>(<span class="hljs-params">IConfiguration configuration</span>)</span><br>        &#123;<br>            Configuration = configuration;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> IConfiguration Configuration &#123; <span class="hljs-keyword">get</span>; &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to add services to the container.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ConfigureServices</span>(<span class="hljs-params">IServiceCollection services</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//HS加密方式</span><br>            <span class="hljs-comment">//services.AddTransient&lt;ICustomJWTService, CustomHSJWTService&gt;();</span><br>            <span class="hljs-comment">//RSS加密方式</span><br>            services.AddTransient&lt;ICustomJWTService, CustomRSSJWTervice&gt;();<br>            services.Configure&lt;JWTTokenOptions&gt;(<span class="hljs-keyword">this</span>.Configuration.GetSection(<span class="hljs-string">&quot;JWTTokenOptions&quot;</span>));<br>            services.AddControllers();<br>            services.AddSwaggerGen(c =&gt;<br>            &#123;<br>                c.SwaggerDoc(<span class="hljs-string">&quot;v1&quot;</span>, <span class="hljs-keyword">new</span> OpenApiInfo &#123; Title = <span class="hljs-string">&quot;DotNetCoreDemo.AuthenticationCenter&quot;</span>, Version = <span class="hljs-string">&quot;v1&quot;</span> &#125;);<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Configure</span>(<span class="hljs-params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (env.IsDevelopment())<br>            &#123;<br>                app.UseDeveloperExceptionPage();<br>                app.UseSwagger();<br>                app.UseSwaggerUI(c =&gt; c.SwaggerEndpoint(<span class="hljs-string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="hljs-string">&quot;DotNetCoreDemo.AuthenticationCenter v1&quot;</span>));<br>            &#125;<br><br>            app.UseHttpsRedirection();<br><br>            app.UseRouting();<br><br>            app.UseAuthorization();<br><br>            app.UseEndpoints(endpoints =&gt;<br>            &#123;<br>                endpoints.MapControllers();<br>            &#125;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>入口</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DotNetCoreDemo.AuthenticationCenter.Utility;<br><span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br><span class="hljs-keyword">using</span> Newtonsoft.Json;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.AuthenticationCenter.Controllers</span><br>&#123;<br>    [<span class="hljs-meta">Route(<span class="hljs-string">&quot;api/[controller]&quot;</span>)</span>]<br>    [<span class="hljs-meta">ApiController</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AuthenticationController</span> : <span class="hljs-title">Controller</span><br>    &#123;<br>        <span class="hljs-comment">//构造函数注入</span><br>        <span class="hljs-keyword">private</span> ICustomJWTService _iJWTService = <span class="hljs-literal">null</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AuthenticationController</span>(<span class="hljs-params">ICustomJWTService customJWTService</span>)</span><br>        &#123;<br>            _iJWTService = customJWTService;<br>        &#125;<br><br>        <span class="hljs-comment">//[Route(&quot;Get&quot;)]</span><br>        <span class="hljs-comment">//[HttpGet]</span><br>        <span class="hljs-comment">//public IEnumerable&lt;int&gt; Get()</span><br>        <span class="hljs-comment">//&#123;</span><br>        <span class="hljs-comment">//    return new List&lt;int&gt;() &#123; 1, 2, 3, 4, 6, 7 &#125;;</span><br>        <span class="hljs-comment">//&#125;</span><br><br>        [<span class="hljs-meta">Route(<span class="hljs-string">&quot;Login&quot;</span>)</span>]<br>        [<span class="hljs-meta">HttpPost</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Login</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">string</span> password</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//在这里需要去数据库中做数据验证</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;Harris&quot;</span>.Equals(name) &amp;&amp; <span class="hljs-string">&quot;123456&quot;</span>.Equals(password))<br>            &#123;<br>                <span class="hljs-comment">//就应该生成Token </span><br>                <span class="hljs-built_in">string</span> token = <span class="hljs-keyword">this</span>._iJWTService.GetToken(name, password);<br>                <span class="hljs-keyword">return</span> JsonConvert.SerializeObject(<span class="hljs-keyword">new</span><br>                &#123;<br>                    result = <span class="hljs-literal">true</span>,<br>                    token<br>                &#125;);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> JsonConvert.SerializeObject(<span class="hljs-keyword">new</span><br>                &#123;<br>                    result = <span class="hljs-literal">false</span>,<br>                    token = <span class="hljs-string">&quot;&quot;</span><br>                &#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>抽象类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ICustomJWTService</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">GetToken</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> UserName, <span class="hljs-built_in">string</span> password</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>HS JWT</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.Extensions.Options;<br><span class="hljs-keyword">using</span> Microsoft.IdentityModel.Tokens;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.IdentityModel.Tokens.Jwt;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Security.Claims;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.AuthenticationCenter.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomHSJWTService</span> : <span class="hljs-title">ICustomJWTService</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> JWTTokenOptions _JWTTokenOptions;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomHSJWTService</span>(<span class="hljs-params">IOptionsMonitor&lt;JWTTokenOptions&gt; jwtTokenOptions</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">this</span>._JWTTokenOptions = jwtTokenOptions.CurrentValue;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetToken</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> UserName, <span class="hljs-built_in">string</span> password</span>)</span><br>        &#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 有效载荷，大家可以自己写，爱写多少写多少；尽量避免敏感信息</span><br>            <span class="hljs-keyword">var</span> claims = <span class="hljs-keyword">new</span>[]<br>            &#123;<br>               <span class="hljs-keyword">new</span> Claim(ClaimTypes.Name, UserName),<br>               <span class="hljs-keyword">new</span> Claim(<span class="hljs-string">&quot;NickName&quot;</span>,UserName),<br>               <span class="hljs-keyword">new</span> Claim(<span class="hljs-string">&quot;Role&quot;</span>,<span class="hljs-string">&quot;Administrator&quot;</span>),<span class="hljs-comment">//传递其他信息   </span><br>               <span class="hljs-keyword">new</span> Claim(<span class="hljs-string">&quot;ABCC&quot;</span>,<span class="hljs-string">&quot;ABCC&quot;</span>),<br>               <span class="hljs-keyword">new</span> Claim(<span class="hljs-string">&quot;Student&quot;</span>,<span class="hljs-string">&quot;甜酱油&quot;</span>)<br>            &#125;;<br><br>            <span class="hljs-comment">//需要加密：需要加密key:</span><br>            <span class="hljs-comment">//Nuget引入：Microsoft.IdentityModel.Tokens</span><br>            SymmetricSecurityKey key = <span class="hljs-keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(_JWTTokenOptions.SecurityKey));<br><br>            SigningCredentials creds = <span class="hljs-keyword">new</span> SigningCredentials(key, SecurityAlgorithms.HmacSha256);<br><br>            <span class="hljs-comment">//Nuget引入：System.IdentityModel.Tokens.Jwt</span><br>            JwtSecurityToken token = <span class="hljs-keyword">new</span> JwtSecurityToken(<br>             issuer: _JWTTokenOptions.Issuer,<br>             audience: _JWTTokenOptions.Audience,<br>             claims: claims,<br>             expires: DateTime.Now.AddMinutes(<span class="hljs-number">5</span>),<span class="hljs-comment">//5分钟有效期</span><br>             signingCredentials: creds);<br><br>            <span class="hljs-built_in">string</span> returnToken = <span class="hljs-keyword">new</span> JwtSecurityTokenHandler().WriteToken(token);<br>            <span class="hljs-keyword">return</span> returnToken;<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>RSA JWT</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Microsoft.Extensions.Options;<br><span class="hljs-keyword">using</span> Microsoft.IdentityModel.Tokens;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.IdentityModel.Tokens.Jwt;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Security.Claims;<br><span class="hljs-keyword">using</span> System.Security.Cryptography;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.AuthenticationCenter.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CustomRSSJWTervice</span> : <span class="hljs-title">ICustomJWTService</span><br>    &#123;<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> Option注入</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> JWTTokenOptions _JWTTokenOptions;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CustomRSSJWTervice</span>(<span class="hljs-params">IOptionsMonitor&lt;JWTTokenOptions&gt; jwtTokenOptions</span>)</span><br>        &#123;<br>            _JWTTokenOptions = jwtTokenOptions.CurrentValue;<br>        &#125;<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetToken</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> UserName, <span class="hljs-built_in">string</span> password</span>)</span><br>        &#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 使用加密解密Key  非对称 </span><br>            <span class="hljs-built_in">string</span> keyDir = Directory.GetCurrentDirectory();<br>            <span class="hljs-keyword">if</span> (RSAHelper.TryGetKeyParameters(keyDir, <span class="hljs-literal">true</span>, <span class="hljs-keyword">out</span> RSAParameters keyParams) == <span class="hljs-literal">false</span>)<br>            &#123;<br>                keyParams = RSAHelper.GenerateAndSaveKey(keyDir);<br>            &#125;<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-comment">//string jtiCustom = Guid.NewGuid().ToString();//用来标识 Token</span><br>            Claim[] claims = <span class="hljs-keyword">new</span>[]<br>            &#123;<br>                   <span class="hljs-keyword">new</span> Claim(ClaimTypes.Name, UserName),<br>                   <span class="hljs-keyword">new</span> Claim(ClaimTypes.Role,<span class="hljs-string">&quot;admin&quot;</span>),<br>                   <span class="hljs-keyword">new</span> Claim(<span class="hljs-string">&quot;password&quot;</span>,password)<br>            &#125;;<br><br>            SigningCredentials credentials = <span class="hljs-keyword">new</span> SigningCredentials(<span class="hljs-keyword">new</span> RsaSecurityKey(keyParams), SecurityAlgorithms.RsaSha256Signature);<br><br>            <span class="hljs-keyword">var</span> token = <span class="hljs-keyword">new</span> JwtSecurityToken(<br>               issuer: <span class="hljs-keyword">this</span>._JWTTokenOptions.Issuer,<br>               audience: <span class="hljs-keyword">this</span>._JWTTokenOptions.Audience,<br>               claims: claims,<br>               expires: DateTime.Now.AddMinutes(<span class="hljs-number">60</span>),<span class="hljs-comment">//5分钟有效期</span><br>               signingCredentials: credentials);<br><br>            <span class="hljs-keyword">var</span> handler = <span class="hljs-keyword">new</span> JwtSecurityTokenHandler();<br>            <span class="hljs-built_in">string</span> tokenString = handler.WriteToken(token);<br>            <span class="hljs-keyword">return</span> tokenString;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p><code>JWTTokenOptions</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.AuthenticationCenter.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">JWTTokenOptions</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Audience<br>        &#123;<br>            <span class="hljs-keyword">get</span>;<br>            <span class="hljs-keyword">set</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> SecurityKey<br>        &#123;<br>            <span class="hljs-keyword">get</span>;<br>            <span class="hljs-keyword">set</span>;<br>        &#125;<br>        <span class="hljs-comment">//public SigningCredentials Credentials</span><br>        <span class="hljs-comment">//&#123;</span><br>        <span class="hljs-comment">//    get;</span><br>        <span class="hljs-comment">//    set;</span><br>        <span class="hljs-comment">//&#125;</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Issuer<br>        &#123;<br>            <span class="hljs-keyword">get</span>;<br>            <span class="hljs-keyword">set</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>RSA Helper</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> Newtonsoft.Json;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Security.Cryptography;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.AuthenticationCenter.Utility</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">RSAHelper</span><br>    &#123;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 从本地文件中读取用来签发 Token 的 RSA Key</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;filePath&quot;&gt;</span>存放密钥的文件夹路径<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;withPrivate&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;keyParameters&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">TryGetKeyParameters</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filePath, <span class="hljs-built_in">bool</span> withPrivate, <span class="hljs-keyword">out</span> RSAParameters keyParameters</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> filename = withPrivate ? <span class="hljs-string">&quot;key.json&quot;</span> : <span class="hljs-string">&quot;key.public.json&quot;</span>;<br>            <span class="hljs-built_in">string</span> fileTotalPath = Path.Combine(filePath, filename);<br>            keyParameters = <span class="hljs-literal">default</span>(RSAParameters);<br>            <span class="hljs-keyword">if</span> (!File.Exists(fileTotalPath))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                keyParameters = JsonConvert.DeserializeObject&lt;RSAParameters&gt;(File.ReadAllText(fileTotalPath));<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 生成并保存 RSA 公钥与私钥</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;filePath&quot;&gt;</span>存放密钥的文件夹路径<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> RSAParameters <span class="hljs-title">GenerateAndSaveKey</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filePath, <span class="hljs-built_in">bool</span> withPrivate = <span class="hljs-literal">true</span></span>)</span><br>        &#123;<br>            RSAParameters publicKeys, privateKeys;<br>            <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> rsa = <span class="hljs-keyword">new</span> RSACryptoServiceProvider(<span class="hljs-number">2048</span>))<span class="hljs-comment">//即时生成</span><br>            &#123;<br>                <span class="hljs-keyword">try</span><br>                &#123;<br>                    privateKeys = rsa.ExportParameters(<span class="hljs-literal">true</span>);<br>                    publicKeys = rsa.ExportParameters(<span class="hljs-literal">false</span>);<br>                &#125;<br>                <span class="hljs-keyword">finally</span><br>                &#123;<br>                    rsa.PersistKeyInCsp = <span class="hljs-literal">false</span>;<br>                &#125;<br>            &#125;<br>            File.WriteAllText(Path.Combine(filePath, <span class="hljs-string">&quot;key.json&quot;</span>), JsonConvert.SerializeObject(privateKeys));<br>            File.WriteAllText(Path.Combine(filePath, <span class="hljs-string">&quot;key.public.json&quot;</span>), JsonConvert.SerializeObject(publicKeys));<br>            <span class="hljs-keyword">return</span> withPrivate ? privateKeys : publicKeys;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="权限消费端"><a href="#权限消费端" class="headerlink" title="权限消费端"></a>权限消费端</h4><ol><li><p><code>appsetting.json</code>  主要关注 <code>JWTTokenOptions</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;Logging&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;LogLevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;Default&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Warning&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Information&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;AllowedHosts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;*&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;TEST&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;TESTID&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1111&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;TESTNAME&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HARRIS&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;_TESTAdress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;Sheng&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SHANXI&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;Shi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;XINZHOU&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;Family&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;baba&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;mama&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;son&quot;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;JWTTokenOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;Audience&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://localhost:5200&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;Issuer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://localhost:5200&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;SecurityKey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDI2a2EJ7m872v0afyoSDJT2o1+SitIeJSWtLJU8/Wz2m7gStexajkeD+Lka6DSTy8gt9UwfgVQo6uKjVLG5Ex7PiGOODVqAEghBuS7JzIYU5RvI543nNDAPfnJsas96mSA7L/mD7RTE2drj6hf3oZjJpMPZUQI/B1Qjb5H3K3PNwIDAQAB&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p><code>Startup.cs</code>  中 <code>ConfigureServices</code> 方法，先把之前测试<code>Cookie</code>的方法注释掉。</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-meta">#<span class="hljs-keyword">region</span> RSA</span><br>&#123;<br>    <span class="hljs-comment">// 读取公钥</span><br>    <span class="hljs-built_in">string</span> path = Path.Combine(Directory.GetCurrentDirectory(), <span class="hljs-string">&quot;key.public.json&quot;</span>);<br>    <span class="hljs-built_in">string</span> key = File.ReadAllText(path);<span class="hljs-comment">//this.Configuration[&quot;SecurityKey&quot;];</span><br>    Console.WriteLine(<span class="hljs-string">$&quot;KeyPath:<span class="hljs-subst">&#123;path&#125;</span>&quot;</span>);<br>    <span class="hljs-keyword">var</span> keyParams = JsonConvert.DeserializeObject&lt;RSAParameters&gt;(key);<br>    <span class="hljs-comment">//SigningCredentials credentials = new SigningCredentials(new RsaSecurityKey(keyParams), SecurityAlgorithms.RsaSha256Signature);</span><br><br>    JWTTokenOptions tokenOptions = <span class="hljs-keyword">new</span> JWTTokenOptions();<br>    Configuration.Bind(<span class="hljs-string">&quot;JWTTokenOptions&quot;</span>, tokenOptions);<br><br>    services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)<br>        .AddJwtBearer(options =&gt;<br>                      &#123;<br>                          options.TokenValidationParameters = <span class="hljs-keyword">new</span> TokenValidationParameters<br>                          &#123;<br>                              ValidateIssuer = <span class="hljs-literal">true</span>,<span class="hljs-comment">//是否验证Issuer</span><br>                              ValidateAudience = <span class="hljs-literal">true</span>,<span class="hljs-comment">//是否验证Audience</span><br>                              ValidateLifetime = <span class="hljs-literal">true</span>,<span class="hljs-comment">//是否验证失效时间</span><br>                              ValidateIssuerSigningKey = <span class="hljs-literal">true</span>,<span class="hljs-comment">//是否验证SecurityKey</span><br>                              ValidAudience = tokenOptions.Audience,<span class="hljs-comment">//Audience</span><br>                              ValidIssuer = tokenOptions.Issuer,<span class="hljs-comment">//Issuer，这两项和前面签发jwt的设置一致</span><br>                              IssuerSigningKey = <span class="hljs-keyword">new</span> RsaSecurityKey(keyParams),<br>                              <span class="hljs-comment">//IssuerSigningKeyValidator = (m, n, z) =&gt;</span><br>                              <span class="hljs-comment">// &#123;</span><br>                              <span class="hljs-comment">//     Console.WriteLine(&quot;This is IssuerValidator&quot;);</span><br>                              <span class="hljs-comment">//     return true;</span><br>                              <span class="hljs-comment">// &#125;,</span><br>                              <span class="hljs-comment">//IssuerValidator = (m, n, z) =&gt;</span><br>                              <span class="hljs-comment">// &#123;</span><br>                              <span class="hljs-comment">//     Console.WriteLine(&quot;This is IssuerValidator&quot;);</span><br>                              <span class="hljs-comment">//     return &quot;http://localhost:5726&quot;;</span><br>                              <span class="hljs-comment">// &#125;,</span><br>                              <span class="hljs-comment">//AudienceValidator = (m, n, z) =&gt;</span><br>                              <span class="hljs-comment">//&#123;</span><br>                              <span class="hljs-comment">//    Console.WriteLine(&quot;This is AudienceValidator&quot;);</span><br>                              <span class="hljs-comment">//    return true;</span><br>                              <span class="hljs-comment">//    //return m != null &amp;&amp; m.FirstOrDefault().Equals(this.Configuration[&quot;Audience&quot;]);</span><br>                              <span class="hljs-comment">//&#125;,//自定义校验规则，可以新登录后将之前的无效</span><br>                          &#125;;<br>                      &#125;);<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br><span class="hljs-number">3.</span> 具体入口 `SixController` 特性 `[Authorize]`<br><br>   ``` CSharp<br>   <span class="hljs-keyword">using</span> Microsoft.AspNetCore.Authorization;<br>   <span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;<br>   <span class="hljs-keyword">using</span> System;<br>   <span class="hljs-keyword">using</span> System.Collections.Generic;<br>   <span class="hljs-keyword">using</span> System.Linq;<br>   <span class="hljs-keyword">using</span> System.Threading.Tasks;<br>   <br>   <span class="hljs-keyword">namespace</span> <span class="hljs-title">DotNetCoreDemo.Controllers</span><br>   &#123;<br>       <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SixController</span> : <span class="hljs-title">Controller</span><br>       &#123;<br>           [<span class="hljs-meta">Authorize</span>] <span class="hljs-comment">//2.第二部：标记特性，表示Privacy 可以支持验证</span><br>           <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>           &#123;<br>               <span class="hljs-keyword">var</span> user = HttpContext.User;<br>   <br>               <span class="hljs-keyword">return</span> View();<br>           &#125;<br>   <br>           <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Login</span>()</span><br>           &#123;<br>               <span class="hljs-keyword">return</span> View();<br>           &#125;<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure></li><li><p>View</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Html"><br>@&#123;<br>    ViewData[&quot;Title&quot;] = &quot;Index&quot;;<br>&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Six Index<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>HS 授权完毕<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h4><ol><li><p>生成+获取<code>Token</code></p><p>生成<code>key.json</code> 和 <code>key.public.json</code> </p><p>授权中心通过WebApi 访问，生产<code>key.json</code> 和 <code>key.public.json</code> 。<code>key.json</code> 与 <code>key.public.json</code> 是互相呼应的。</p><p>图一：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211001191326110.png" alt="image-20211001191326110"></p><ol><li>点击 <code>Tryitout</code> 按钮到 </li><li>输入 <code>name</code> &amp; <code>password</code></li><li>点击 <code>Execute</code> 按钮，生成如下内容。</li></ol><p>图二：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211001191428193.png" alt="image-20211001191428193"></p><p>Response body 内容作为备用。</p><p>将 <code>key.public.json</code> 文件放到访问的相对位置，本地放到</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211001191845619.png" alt="image-20211001191845619"></p></li><li><p>启动<code>PostMan</code> 工具</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211001195024174.png" alt="image-20211001195024174"></p><ol><li><p>输入主程序 <a href="http://localhost:5000/Six/Index">http://localhost:5000/Six/Index</a></p></li><li><p><code>Authorization</code> 选择 <code>Bearer Token</code> 输入 图二 中 <code>Response body</code> 中 <code>Token</code> 内容.</p></li><li><p>点击 <code>Send</code>提交，则可以看到访问成功。</p></li><li><p>否则 则报 <code>401</code> 错误</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211001195539225.png" alt="image-20211001195539225"></p></li></ol></li></ol><h2 id="NetCore-Docker-Nginx"><a href="#NetCore-Docker-Nginx" class="headerlink" title=".NetCore Docker Nginx"></a>.NetCore Docker Nginx</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119165020105.png"></p><h3 id="Test-Program"><a href="#Test-Program" class="headerlink" title="Test Program"></a>Test Program</h3><h4 id="新建-net-core-web应用"><a href="#新建-net-core-web应用" class="headerlink" title="新建 .net core web应用"></a>新建 .net core web应用</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119135939441.png" alt="新建应用"></p><h4 id="添加Docker-支持-linux"><a href="#添加Docker-支持-linux" class="headerlink" title="添加Docker 支持-linux"></a>添加Docker 支持-linux</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119140022112.png" alt="docker支持"></p><h4 id="发布-1"><a href="#发布-1" class="headerlink" title="发布"></a>发布</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119140104644.png" alt="发布设置"></p><h4 id="修改发布后的DockerFile"><a href="#修改发布后的DockerFile" class="headerlink" title="修改发布后的DockerFile"></a>修改发布后的DockerFile</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119140144967.png" alt="发布后的文件"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119140208877.png" alt="修改DockerFile"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">See https://aka.ms/containerfastmode to understand how Visual Studio uses</span> <br>FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base<br>WORKDIR /app<br>EXPOSE 80<br><br>WORKDIR /app<br>COPY .  /app<br>ENTRYPOINT [&quot;dotnet&quot;, &quot;WebDemo.dll&quot;]<br></code></pre></td></tr></table></figure><h4 id="上传到服务器"><a href="#上传到服务器" class="headerlink" title="上传到服务器"></a>上传到服务器</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119140355752.png" alt="xftp"></p><h3 id="Docker-image"><a href="#Docker-image" class="headerlink" title="Docker image"></a>Docker image</h3><h4 id="build-test-program"><a href="#build-test-program" class="headerlink" title="build test program"></a>build test program</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119140542103.png" alt="testProgramBuild"></p><h4 id="pull-nginx"><a href="#pull-nginx" class="headerlink" title="pull nginx"></a>pull nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull nginx<br></code></pre></td></tr></table></figure><h3 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h3><h4 id="run-test-program-image"><a href="#run-test-program-image" class="headerlink" title="run test program image"></a>run test program image</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 5000:80 --name webdemo.nginx webdemo:v1.0<br></code></pre></td></tr></table></figure><h4 id="添加Nginx配置"><a href="#添加Nginx配置" class="headerlink" title="添加Nginx配置"></a>添加Nginx配置</h4><p><code>myNginx.conf</code>,<code>192.168.137.6</code>为宿主IP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /root/nginx/my_nginx.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">内容</span><br>server &#123;<br>  listen 80;<br><br>  location / &#123;<br>    proxy_pass http://192.168.137.6:5000;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="run-nignx-image"><a href="#run-nignx-image" class="headerlink" title="run nignx image"></a>run nignx image</h4><p>挂载到/root/nginx/my_nginx.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 8080:80 -v /root/nginx/my_nginx.conf:/etc/nginx/conf.d/default.conf nginx<br></code></pre></td></tr></table></figure><h3 id="Last"><a href="#Last" class="headerlink" title="Last"></a>Last</h3><p>本篇主要是将.Net core web应用放到Linux服务器中，使用Nginx反向代理，进行访问。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119142358772.png" alt="docker容器列表"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119142220882.png" alt="web应用服务"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119142258548.png" alt="ngixn代理端口"></p><h2 id="EFCore"><a href="#EFCore" class="headerlink" title="EFCore"></a>EFCore</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/blog-image-master/home202205211831793.png" alt="img"></p><h3 id="what"><a href="#what" class="headerlink" title="what"></a>what</h3><p>简单来说EFCore是一种ORM的技术.</p><ol><li><p>EF主要有三种模式进行开发：DataFirst、CodeFirst、ModelFirst</p></li><li><p>EFCore主要支持两种开发方法： 1. CodeFirst(代码优先)    2. DataFirst（数据库优先)</p></li><li><p>EFCore主要针对代码优先方法，很少提供对数据库优先方法的支持，因为从EF Core 2.0开始不支持可视化的DB模型设计器或向导</p></li></ol><h3 id="why"><a href="#why" class="headerlink" title="why"></a>why</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol><li>支持多中关系型数据库</li><li>支持linq查询</li><li>支持反向工程，可以将数据库表与EFCore模型同步。</li><li>支持迁移，EFCore模型的更改可以通过迁移同步到数据库</li><li>支持日志记录</li><li>支持原生SQL对数据库进行操作，半自动ORM</li></ol><h4 id="支持的数据库和Nugget库"><a href="#支持的数据库和Nugget库" class="headerlink" title="支持的数据库和Nugget库"></a>支持的数据库和Nugget库</h4><table><thead><tr><th>数据库</th><th>Nuget程序包</th></tr></thead><tbody><tr><td>SQL Server</td><td>Microsoft.EntityFrameworkCore.SqlServer</td></tr><tr><td>MySQL</td><td>MySql.Data.EntityFrameworkCore（官方版，不建议使用）</td></tr><tr><td>MySQL</td><td>Pomelo.EntityFrameworkCore(第三方提供，Bug少建议使用)</td></tr><tr><td>PostgreSQL</td><td>Npgsql.EntityFrameworkCore.PostgreSQL</td></tr><tr><td>SQLite</td><td>Microsoft.EntityFrameworkCore.SQLite</td></tr><tr><td>SQL Compact</td><td>Microsoft.EntityFrameworkCore.SQLite</td></tr><tr><td>In-memory</td><td>Microsoft.EntityFrameworkCore.InMemory</td></tr></tbody></table><h3 id="DataFirst"><a href="#DataFirst" class="headerlink" title="DataFirst"></a>DataFirst</h3><p>通过数据库表生产相关模型类</p><h4 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--新建数据库 EFCoreLearn</span><br><span class="hljs-keyword">CREATE</span> DATABASE <br>IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> EFCoreLearn <br><span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <br><span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><br><span class="hljs-comment">--新建表 Student</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `Students`<br>(<br>   `StudentId` <span class="hljs-type">INT</span> UNSIGNED AUTO_INCREMENT,<br>  `Name` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>`Class` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>   <span class="hljs-keyword">PRIMARY</span> KEY (`StudentId`)<br>);<br></code></pre></td></tr></table></figure><h4 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h4><p><em>我本地测试新建的.net 6 的控制台程序</em></p><h4 id="项目Nugget安装"><a href="#项目Nugget安装" class="headerlink" title="项目Nugget安装"></a>项目Nugget安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Install-Package Microsoft.EntityFrameworkCore.Tools<br>Install-Package Pomelo.EntityFrameworkCore.MySql<br></code></pre></td></tr></table></figure><h4 id="通过Nugget-控制台管理"><a href="#通过Nugget-控制台管理" class="headerlink" title="通过Nugget 控制台管理"></a>通过Nugget 控制台管理</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">Scaffold-DbContext -Force “Server=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;User Id=root;Password=root;Database=efcorelearn” -Provider “Pomelo.EntityFrameworkCore.MySql” -OutputDir Models<br></code></pre></td></tr></table></figure><p>通过动态库 <code>Pomelo.EntityFrameworkCore.MySql</code>、连接字符串，生产Model类</p><h4 id="生产结果"><a href="#生产结果" class="headerlink" title="生产结果"></a>生产结果</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/blog-image-master/home202205212024859.png" alt="image-20220521200827957"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/blog-image-master/home202205212024629.png" alt="image-20220521200848450"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/blog-image-master/home202205212024508.png" alt="image-20220521200855313"></p><h4 id="连接类"><a href="#连接类" class="headerlink" title="连接类"></a>连接类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> Microsoft.EntityFrameworkCore;<br><span class="hljs-keyword">using</span> Microsoft.EntityFrameworkCore.Metadata;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">EFCore_DataFirst.Models</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">EFCoreLearnContext</span> : <span class="hljs-title">DbContext</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">EFCoreLearnContext</span>()</span><br>        &#123;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">EFCoreLearnContext</span>(<span class="hljs-params">DbContextOptions&lt;EFCoreLearnContext&gt; options</span>)</span><br><span class="hljs-function">            : <span class="hljs-title">base</span>(<span class="hljs-params">options</span>)</span><br>        &#123;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> DbSet&lt;Student&gt; Students &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">null</span>!;<br><br>        <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConfiguring</span>(<span class="hljs-params">DbContextOptionsBuilder optionsBuilder</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (!optionsBuilder.IsConfigured)<br>            &#123;<br>                optionsBuilder.UseMySql(<span class="hljs-string">&quot;server=;user id=;password=;database=EFCoreLearn&quot;</span>, Microsoft.EntityFrameworkCore.ServerVersion.Parse(<span class="hljs-string">&quot;5.6.50-mysql&quot;</span>));<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnModelCreating</span>(<span class="hljs-params">ModelBuilder modelBuilder</span>)</span><br>        &#123;<br>            modelBuilder.UseCollation(<span class="hljs-string">&quot;utf8_general_ci&quot;</span>)<br>                .HasCharSet(<span class="hljs-string">&quot;utf8&quot;</span>);<br><br>            modelBuilder.Entity&lt;Student&gt;(entity =&gt;<br>            &#123;<br>                entity.Property(e =&gt; e.StudentId).HasColumnType(<span class="hljs-string">&quot;int(10) unsigned&quot;</span>);<br><br>                entity.Property(e =&gt; e.Class).HasMaxLength(<span class="hljs-number">50</span>);<br><br>                entity.Property(e =&gt; e.Name).HasMaxLength(<span class="hljs-number">50</span>);<br>            &#125;);<br><br>            OnModelCreatingPartial(modelBuilder);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">partial</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnModelCreatingPartial</span>(<span class="hljs-params">ModelBuilder modelBuilder</span>)</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="生产实体类"><a href="#生产实体类" class="headerlink" title="生产实体类"></a>生产实体类</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">EFCore_DataFirst.Models</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Student</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">uint</span> StudentId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">null</span>!;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Class &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">null</span>!;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="CURD"><a href="#CURD" class="headerlink" title="CURD"></a>CURD</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// See https://aka.ms/new-console-template for more information</span><br><span class="hljs-keyword">using</span> EFCore_DataFirst.Models;<br><span class="hljs-keyword">using</span> Microsoft.EntityFrameworkCore;<br><br>Console.WriteLine(<span class="hljs-string">&quot;Hello, World!&quot;</span>);<br><br><span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> db = <span class="hljs-keyword">new</span> EFCoreLearnContext())<br>&#123;<br>    Student student = <span class="hljs-keyword">new</span> Student()<br>    &#123;<br>        Name = <span class="hljs-string">&quot;小明&quot;</span>,<br>        Class = <span class="hljs-string">&quot;软件一班&quot;</span><br>    &#125;;<br>    db.Students.Add(student);<br>    db.SaveChanges();<span class="hljs-comment">//提交更改后才能保存到数据库。</span><br>&#125;<br><br><span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> db = <span class="hljs-keyword">new</span> EFCoreLearnContext())<br>&#123;<br>    <span class="hljs-comment">//更新方式1 Update</span><br>    Student student = <span class="hljs-keyword">new</span> Student()<br>    &#123;<br>        StudentId = <span class="hljs-number">1</span>,<br>        Name = <span class="hljs-string">&quot;小明&quot;</span>,<br>        Class = <span class="hljs-string">&quot;软件2班&quot;</span><br>    &#125;;<br>    db.Students.Update(student);<br>    db.SaveChanges();<br><br>    <span class="hljs-comment">//更新方式2 先查询，再修改</span><br><br>    <span class="hljs-keyword">var</span> stu1 = db.Students.AsEnumerable().First(a =&gt; a.StudentId == <span class="hljs-number">1</span>);<span class="hljs-comment">//或者var stu1=db.Students.Single(a =&gt; a.StudentId == 1)</span><br>    stu1.Name = <span class="hljs-string">&quot;小红&quot;</span>;<br>    EntityState ss = db.Entry(stu1).State;<span class="hljs-comment">//unchanged</span><br>    db.SaveChanges();<br><br>    <span class="hljs-comment">//更新方式3 设置 EntityState的状态和Update类似</span><br>    Student stu2 = <span class="hljs-keyword">new</span> Student();<br>    stu2.Name = <span class="hljs-string">&quot;小李&quot;</span>;<br>    stu2.StudentId = <span class="hljs-number">1</span>;<br>    stu2.Class = <span class="hljs-string">&quot;软件3班&quot;</span>;<br>    db.Entry(stu2).State = EntityState.Modified;<br>    db.SaveChanges();<br><br>    <span class="hljs-comment">//更新方式4 Attach方法</span><br>    Student stu3 = <span class="hljs-keyword">new</span> Student();<br>    stu3.Name = <span class="hljs-string">&quot;小明&quot;</span>;<br>    stu3.StudentId = <span class="hljs-number">1</span>;<br>    stu3.Class = <span class="hljs-string">&quot;软件1班&quot;</span>;<br>    db.Students.Attach(stu3);<br>    db.Entry(stu3).State = EntityState.Modified;<br>    db.SaveChanges();<br>&#125;<br><br><br><span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> db = <span class="hljs-keyword">new</span> EFCoreLearnContext())<br>&#123;<br>    <span class="hljs-comment">//删除方式1 Remove</span><br>    Student student = <span class="hljs-keyword">new</span> Student();<br>    student.StudentId = <span class="hljs-number">1</span>;<br>    db.Students.Remove(student);<br>    db.SaveChanges();<br><br>    <span class="hljs-comment">//删除方式2 先查询再删除</span><br><br>    db.Students.Remove(db.Students.Find(<span class="hljs-number">1</span>));<span class="hljs-comment">//这里Find只要填写主键的值就能找到</span><br>    db.SaveChanges();<br><br>    <span class="hljs-comment">//删除方式3 EntityState.Deleted</span><br>    Student student2 = <span class="hljs-keyword">new</span> Student();<br>    student.StudentId = <span class="hljs-number">1</span>;<br>    db.Entry(student).State = EntityState.Deleted;<br>    db.SaveChanges();<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="CodeFirst"><a href="#CodeFirst" class="headerlink" title="CodeFirst"></a>CodeFirst</h3><h4 id="nugget-添加右侧动态库"><a href="#nugget-添加右侧动态库" class="headerlink" title="nugget 添加右侧动态库"></a>nugget 添加右侧动态库</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205231135052.png" alt="image-20220523113526861"></p><h4 id="Nugget-控制台管理中输入"><a href="#Nugget-控制台管理中输入" class="headerlink" title="Nugget 控制台管理中输入"></a>Nugget 控制台管理中输入</h4><ol><li>Add-Migration Initial      – 添加迁移</li><li>Update-DataBase           –提交到数据库</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205231139848.png" alt="生成的表"></p><h3 id="Data-Migration"><a href="#Data-Migration" class="headerlink" title="Data Migration"></a>Data Migration</h3><h4 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">EFCoreLearn</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Student</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> StudentId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Sex &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment">//导航属性</span><br>        <span class="hljs-keyword">public</span> StudentAddress Address &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> IList&lt;Course&gt; Courses &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-keyword">new</span> List&lt;Course&gt;();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Teacher</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> TeacherId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Title &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Hobby &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> IList&lt;Course&gt; Courses &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-keyword">new</span> List&lt;Course&gt;();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Course</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> CourseId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment">//导航属性 </span><br>        <span class="hljs-keyword">public</span> Teacher Teacher &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> IList&lt;Student&gt; Students &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-keyword">new</span> List&lt;Student&gt;();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">StudentAddress</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> StudentAddressId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Address &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> City &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment">//导航属性</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> StudentId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> Student Student &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="CodeFirst-1"><a href="#CodeFirst-1" class="headerlink" title="CodeFirst"></a>CodeFirst</h4><ol><li>Add-Migration Initial      – 添加迁移</li><li>Update-DataBase           –提交到数据库</li></ol><h4 id="EFLearnDbContext"><a href="#EFLearnDbContext" class="headerlink" title="EFLearnDbContext"></a>EFLearnDbContext</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Microsoft.EntityFrameworkCore;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">EFCoreLearn</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">EFLearnDbContext</span> : <span class="hljs-title">DbContext</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">EFLearnDbContext</span>()</span><br>        &#123;<br>            <span class="hljs-comment">//同时为了除此应用的时候代码能够自动创建数据库可以在EFLearnDbContext里添加，程序运行时保证数据库创建。</span><br>            Database.EnsureCreated();<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnConfiguring</span>(<span class="hljs-params">DbContextOptionsBuilder optionsBuilder</span>)</span><br>        &#123;<br>            optionsBuilder.UseMySql(<span class="hljs-string">&quot;server=;user id=;password=;database=EFCoreLearn&quot;</span>, Microsoft.EntityFrameworkCore.ServerVersion.Parse(<span class="hljs-string">&quot;5.6.50-mysql&quot;</span>));<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnModelCreating</span>(<span class="hljs-params">ModelBuilder modelBuilder</span>)</span><br>        &#123;<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 基本配置</span><br>            modelBuilder.Entity&lt;Student&gt;().Property(x =&gt; x.StudentId).ValueGeneratedOnAdd();<span class="hljs-comment">//设置Id自增</span><br>            <span class="hljs-comment">//设置姓名最大长度为50，字符为unicode,不能为空</span><br>            modelBuilder.Entity&lt;Student&gt;().Property(x =&gt; x.Name).HasMaxLength(<span class="hljs-number">50</span>).IsUnicode().IsRequired();<br>            <span class="hljs-comment">//设置性别最大长度为5 字符为Unicode，不能为空</span><br>            modelBuilder.Entity&lt;Student&gt;().Property(x =&gt; x.Sex).HasMaxLength(<span class="hljs-number">5</span>).IsUnicode().IsRequired();<br>            <span class="hljs-comment">//一对一只需要配置一个类就行了，</span><br>            modelBuilder.Entity&lt;Student&gt;().HasOne(x =&gt; x.Address).WithOne(x =&gt; x.Student).HasForeignKey&lt;StudentAddress&gt;(ad =&gt; ad.StudentId);<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span>  Course</span><br>            modelBuilder.Entity&lt;Course&gt;().Property(x =&gt; x.Name).HasMaxLength(<span class="hljs-number">50</span>).IsUnicode();<br>            <span class="hljs-comment">//课程一对一</span><br>            modelBuilder.Entity&lt;Course&gt;().HasOne(x =&gt; x.Teacher).WithMany(t =&gt; t.Courses);<br>            modelBuilder.Entity&lt;Course&gt;().HasMany(x =&gt; x.Students).WithMany(st =&gt; st.Courses);<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> Teacher配置</span><br>            modelBuilder.Entity&lt;Teacher&gt;().Property(x =&gt; x.Name).HasMaxLength(<span class="hljs-number">50</span>).IsUnicode();<br>            modelBuilder.Entity&lt;Teacher&gt;().Property(x =&gt; x.Title).HasMaxLength(<span class="hljs-number">50</span>).IsUnicode();<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 配置地址</span><br>            modelBuilder.Entity&lt;StudentAddress&gt;().Property(x =&gt; x.City).HasMaxLength(<span class="hljs-number">100</span>).IsRequired().IsUnicode();<br>            modelBuilder.Entity&lt;StudentAddress&gt;().Property(x =&gt; x.Address).HasMaxLength(<span class="hljs-number">500</span>).IsRequired().IsUnicode();<br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        &#125;<br><br><br>        <span class="hljs-keyword">public</span> DbSet&lt;Student&gt; Students &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> DbSet&lt;Teacher&gt; Teachers &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> DbSet&lt;Course&gt; Courses &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> DbSet&lt;StudentAddress&gt; Addresses &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> dbContext = <span class="hljs-keyword">new</span> EFLearnDbContext())<br>&#123;<br>    <span class="hljs-comment">//1.添加一些数据</span><br><br>    <span class="hljs-comment">//Course course1 = new Course() &#123; CourseId = 3001, Name = &quot;高等数学&quot; &#125;;</span><br>    <span class="hljs-comment">//Course course2 = new Course() &#123; CourseId = 3002, Name = &quot;计算机原理&quot; &#125;;</span><br>    <span class="hljs-comment">//Course course3 = new Course() &#123; CourseId = 3003, Name = &quot;操作系统原理&quot; &#125;;</span><br>    <span class="hljs-comment">//Course course4 = new Course() &#123; CourseId = 3004, Name = &quot;编译原理&quot; &#125;;</span><br><br><br>    <span class="hljs-comment">//Teacher teacher1 = new Teacher() &#123; TeacherId = 10001, Name = &quot;张教授&quot;, Title = &quot;教授&quot; &#125;;</span><br>    <span class="hljs-comment">//Teacher teacher2 = new Teacher() &#123; TeacherId = 10002, Name = &quot;王讲师&quot;, Title = &quot;讲师&quot; &#125;;</span><br><br>    <span class="hljs-comment">//teacher1.Courses = new Course[] &#123; course1, course2 &#125;;</span><br>    <span class="hljs-comment">//teacher2.Courses = new Course[] &#123; course3, course4 &#125;;</span><br><br>    <span class="hljs-comment">//dbContext.Teachers.AddRange(teacher1, teacher2);</span><br><br>    <span class="hljs-comment">//StudentAddress Address1 = new StudentAddress()</span><br>    <span class="hljs-comment">//&#123;</span><br>    <span class="hljs-comment">//    StudentAddressId = 37001,</span><br>    <span class="hljs-comment">//    Address = &quot;北京朝阳区&quot;,</span><br>    <span class="hljs-comment">//    City = &quot;北京&quot;,</span><br>    <span class="hljs-comment">//&#125;;</span><br><br>    <span class="hljs-comment">//StudentAddress Address2 = new StudentAddress()</span><br>    <span class="hljs-comment">//&#123;</span><br>    <span class="hljs-comment">//    StudentAddressId = 37002,</span><br>    <span class="hljs-comment">//    Address = &quot;上海徐汇区&quot;,</span><br>    <span class="hljs-comment">//    City = &quot;上海&quot;,</span><br>    <span class="hljs-comment">//&#125;;</span><br><br>    <span class="hljs-comment">//StudentAddress Address3 = new StudentAddress()</span><br>    <span class="hljs-comment">//&#123;</span><br>    <span class="hljs-comment">//    StudentAddressId = 37003,</span><br>    <span class="hljs-comment">//    Address = &quot;广州白云区&quot;,</span><br>    <span class="hljs-comment">//    City = &quot;广州&quot;,</span><br>    <span class="hljs-comment">//&#125;;</span><br><br><br><br>    <span class="hljs-comment">//Student student1 = new Student()</span><br>    <span class="hljs-comment">//&#123;</span><br>    <span class="hljs-comment">//    StudentId = 2022001,</span><br>    <span class="hljs-comment">//    Name = &quot;王二小&quot;,</span><br>    <span class="hljs-comment">//    Age = 19,</span><br>    <span class="hljs-comment">//    Sex = &quot;男&quot;,</span><br>    <span class="hljs-comment">//    Address = Address1,</span><br>    <span class="hljs-comment">//    Courses = new Course[] &#123; course1, course2, course3 &#125;,</span><br><br>    <span class="hljs-comment">//&#125;;</span><br><br>    <span class="hljs-comment">//Student student2 = new Student()</span><br>    <span class="hljs-comment">//&#123;</span><br>    <span class="hljs-comment">//    StudentId = 2022002,</span><br>    <span class="hljs-comment">//    Name = &quot;张小五&quot;,</span><br>    <span class="hljs-comment">//    Age = 20,</span><br>    <span class="hljs-comment">//    Sex = &quot;男&quot;,</span><br>    <span class="hljs-comment">//    Address = Address2,</span><br>    <span class="hljs-comment">//    Courses = new Course[] &#123; course1, course2 &#125;,</span><br>    <span class="hljs-comment">//&#125;;</span><br><br>    <span class="hljs-comment">//Student student3 = new Student()</span><br>    <span class="hljs-comment">//&#123;</span><br>    <span class="hljs-comment">//    StudentId = 2022003,</span><br>    <span class="hljs-comment">//    Name = &quot;刘小花&quot;,</span><br>    <span class="hljs-comment">//    Age = 20,</span><br>    <span class="hljs-comment">//    Sex = &quot;女&quot;,</span><br>    <span class="hljs-comment">//    Address = Address3,</span><br>    <span class="hljs-comment">//    Courses = new Course[] &#123; course1, course3 &#125;,</span><br><br>    <span class="hljs-comment">//&#125;;</span><br>    <span class="hljs-comment">//dbContext.Students.AddRange(student1, student2, student3);</span><br><br>    <span class="hljs-comment">//dbContext.SaveChanges();</span><br><br>    <span class="hljs-comment">//var students = dbContext.Students.ToList();</span><br><br>    <span class="hljs-comment">//var students = dbContext.Students.Include(x =&gt; x.Address).ToList();</span><br><br>    <span class="hljs-comment">//添加自动引用迁移</span><br>    dbContext.Database.Migrate();<br><br>    <span class="hljs-keyword">var</span> students = dbContext.Students.Include(x =&gt; x.Address).Include(x =&gt; x.Courses).ToList();<br><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> st <span class="hljs-keyword">in</span> students)<br>    &#123;<br>        <span class="hljs-comment">//Console.WriteLine($&quot;StudentId:&#123;st.StudentId&#125;,Name:&#123;st.Name&#125;,City:&#123;st.Address.City&#125;, Address:&#123;st.Address.Address&#125;&quot;);</span><br><br>        Console.WriteLine(<span class="hljs-string">$&quot;StudentId:<span class="hljs-subst">&#123;st.StudentId&#125;</span>,Name:<span class="hljs-subst">&#123;st.Name&#125;</span>,City:<span class="hljs-subst">&#123;st.Address.City&#125;</span>, Address:<span class="hljs-subst">&#123;st.Address.Address&#125;</span>,Courses:<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, st.Courses.Select(x =&gt; x.Name))&#125;</span>&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 删除数据</span><br><br>    <span class="hljs-comment">//var std = dbContext.Students.Single(x =&gt; x.StudentId == 2022001);</span><br>    <span class="hljs-comment">//dbContext.Remove(std);</span><br>    <span class="hljs-comment">//dbContext.SaveChanges();</span><br><br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/202205231832539.png" alt="image-20220523183253394"></p><h3 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h3><ul><li><a href="https://blog.csdn.net/xieyunhappy/article/details/112075402">(4条消息) EFCore 从入门到精通-1（总览)_全能哆来梦的博客-CSDN博客_efcore</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.net core</tag>
      
      <tag>IOC</tag>
      
      <tag>JWT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker Note</title>
    <link href="/2021/10/31/Docker-Note/"/>
    <url>/2021/10/31/Docker-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Docker-学习笔记"><a href="#Docker-学习笔记" class="headerlink" title="Docker 学习笔记"></a>Docker 学习笔记</h1><blockquote><p>本文以在 window  10 中部署 Docker 环境 运行 dotnet core web app 为主线 记录过程</p></blockquote><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><h3 id="下载Docker"><a href="#下载Docker" class="headerlink" title="下载Docker"></a>下载Docker</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/X6LQMJNwKADEv4f.png" alt="image-20210530131053540"></p><h3 id="window-开启虚拟化"><a href="#window-开启虚拟化" class="headerlink" title="window 开启虚拟化"></a>window 开启虚拟化</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530162435983.png" alt="image-20210530162435983"></p><h3 id="新建-net-core-web-app"><a href="#新建-net-core-web-app" class="headerlink" title="新建.net core web app"></a>新建.net core web app</h3><h4 id="新建程序"><a href="#新建程序" class="headerlink" title="新建程序"></a>新建程序</h4><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530151814645.png" alt="image-20210530151814645" style="zoom:80%;" /><h4 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h4><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530151929348.png" alt="image-20210530151929348" style="zoom:80%;" /><h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><blockquote><p>默认运行是Docker ,这里先选择 helloworldapp 运行</p></blockquote><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530152509982.png" alt="image-20210530152509982" style="zoom:80%;" /><ol><li><p>运行项目没有问题</p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530152231219.png" alt="image-20210530152231219" style="zoom:80%;" /></li></ol><ol start="4"><li><p>需要注意此文件</p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530152604550.png" alt="image-20210530152604550" style="zoom:80%;" /></li></ol><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><blockquote><p>把Dockerfile 从当前文件夹放到上一级中。</p></blockquote><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530153921848.png" alt="image-20210530153921848"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530153951697.png" alt="image-20210530153951697"></p><p>至此，环境需要运行的程序准备完毕。</p><h4 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h4><p>下一步，打开 powershell 程序。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530154105810.png" alt="image-20210530154105810"></p><p>cd 到指定工程目录 <code>E:\Code\testDocker\helloworldapp</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530154622261.png" alt="image-20210530154622261"></p><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><p><code>docker images</code>: 查看 当前 image </p><p><code>docker ps</code> : 查看当前容器</p><p><code>docker build -t myapp:v1.0 . </code> : 创建镜像 <code>myapp:v1.0 </code>, 最后<code> .</code> 代表在当前文件夹中开始执行。<code>v1.0</code> 是Tag ,算是版本号把。</p><p>依照上图操作流程，<code>build</code> 操作完成之后，执行 <code>docker images</code>,就会看到 一个列表，中间记录了名称、版本号、image id、创建时间和大小。执行<code>docker ps</code> 没有内容是因为还没有运行image。</p><p>下一步执行</p><p><code>docker run --name=myapp -p 7778:80 -d myapp:v1.0</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530161559489.png" alt="image-20210530161559489"></p><p>出现一串字符串的时候，说明容器启动成功了，这个时候再执行<code>docker ps</code>,就会出现如下列表：</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530161653125.png" alt="image-20210530161653125"></p><p>此时如果访问本地端口，如下图</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530161829323.png" alt="image-20210530161829323"></p><h4 id="Docker-for-Desktop"><a href="#Docker-for-Desktop" class="headerlink" title="Docker for Desktop"></a>Docker for Desktop</h4><blockquote><p>在软件：window desktop docker 中也会体现出image 和 docker(容器)</p></blockquote><p>image </p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530161957344.png" alt="image-20210530161957344"></p><p>docker </p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530162042171.png" alt="image-20210530162042171"></p><p>与此同时，也可以通过 软件 进行 docker 程序的访问</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210530162219487.png" alt="image-20210530162219487"></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h3><p><code>docker build -t myapp:v1.0 . //myapp 这个是自定义的但是不能有大写</code></p><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><p><code>docker run --name=myapp -p 7778:80 -d myapp:v1.0</code> </p><p><code>docker run --name=[容器名称] -p [宿主机端口]:[Docer本地端口] -d [镜像名称]:[标签]</code></p><h3 id="删除指定镜像"><a href="#删除指定镜像" class="headerlink" title="删除指定镜像"></a>删除指定镜像</h3><p><code>docker vmi id //image id</code></p><h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p><code>docker images //查看image list</code></p><h3 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h3><p><code>docker ps</code> | <code>docker ps -a</code>  <em>ps：-a (全部)</em></p><h3 id="保存镜像文件"><a href="#保存镜像文件" class="headerlink" title="保存镜像文件"></a>保存镜像文件</h3><p><code>docker save -o 要保存的文件名  要保存的镜像</code> </p><p>这个命令保存没有问题，但是还原的时候会导致镜像和标签为空</p><p>推荐使用：</p><p><code>docker save -o myapp.tar myapp:v1.0</code> 这种：<code>docker save -o [镜像名称].tar [镜像名称]:[标签]</code></p><h3 id="导入镜像文件"><a href="#导入镜像文件" class="headerlink" title="导入镜像文件"></a>导入镜像文件</h3><p><code>docker load --input 文件</code> 或者 <code>docker load &lt; 文件名</code></p><h3 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h3><p><code>docker stop [容器ID]</code> <em>实在不想等待就直接 <code>docker kill [容器ID]</code></em></p><h3 id="停止所有的容器"><a href="#停止所有的容器" class="headerlink" title="停止所有的容器"></a>停止所有的容器</h3><p><code>docker stop $(docker ps -q)</code></p><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><p><code>docker restart [容器ID]</code></p><h3 id="强制移除容器"><a href="#强制移除容器" class="headerlink" title="强制移除容器"></a>强制移除容器</h3><p><code>docker rm -f mysql1</code></p><p><code>docker image rm -f 27600aa3d7f1</code></p><h3 id="重命名镜像"><a href="#重命名镜像" class="headerlink" title="重命名镜像"></a>重命名镜像</h3><p><code>docker tag [镜像id] [新镜像名称]:[新镜像标签]</code></p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p><code>docker logs</code></p><h2 id="Docker-数据持久化"><a href="#Docker-数据持久化" class="headerlink" title="Docker 数据持久化"></a>Docker 数据持久化</h2><blockquote><p>如果不做数据持久化的话，容器中的数据在关闭的时候就会丢失，反之，就算容器删除对数据没有影响。</p></blockquote><h3 id="数据持久化策略之volumes"><a href="#数据持久化策略之volumes" class="headerlink" title="数据持久化策略之volumes"></a>数据持久化策略之<code>volumes</code></h3><ul><li>多个容器这间共享数据</li><li>宿主机不保证存在固定的目录结构</li><li>持久化数据到远程主机或者云存储而非本地</li><li>需要备份、迁移、合并数据时。停止container，将volume整体复制，用于备份、迁移、合并等。</li></ul><h3 id="数据持久化策略之bind-mount"><a href="#数据持久化策略之bind-mount" class="headerlink" title="数据持久化策略之bind mount"></a>数据持久化策略之<code>bind mount</code></h3><p>本质上是宿主机、container之间共享宿主机文件系统。这种持久化方法更导致container与宿主机的耦合过于紧密，所以不推荐使用。</p><p>container共享宿主机配置文件。</p><p>比如docker会将宿主机文件/etc/resov.conf文件bind mount到容器上，两者会使用相同的DNS服务器。</p><p>开发环境中宿主机与container之间共享源代码、构建构件等。比如将整个build过程container化，将宿主机上的源代码文件夹bind mount到build container中。修改代码后，运行build container的build命令，build container则将build结构写入另一个bind mount的文件夹中。</p><p>一些监控类container，通过读取宿主机固定文件中的数据实现监控等。</p><h3 id="Mongo"><a href="#Mongo" class="headerlink" title="Mongo"></a>Mongo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">拉取镜像</span><br>docker pull mongo:4.0.22<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动容器，挂载本地目录</span><br>docker run -itd --name mongo -p 27017:27017 -v $PWD/mongodb:/data/db mongo:4.0.22<br>    <br><span class="hljs-meta prompt_"># </span><span class="language-bash">2021-06-04</span><br>    <br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建目录</span><br>mkdir /data/mongodb<br>    <br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动容器</span><br>//docker run --name mongodb -v /data/mongodb:/data/db -p 27017:27017 -d 07630<br>-- 20210605 D 盘挂载成功 https://www.cnblogs.com/codelove/p/10312692.html<br>docker run -p 27017:27017 --name myMongodb -v d:/data/mongodb:/data/db -d mongo<br>    <br><span class="hljs-meta prompt_"># </span><span class="language-bash">进入MongoDB</span><br>docker exec -it 95ed5df9fc2c mongo admin //95ed5 是容器ID<br></code></pre></td></tr></table></figure><h3 id="MongoDB-Shell"><a href="#MongoDB-Shell" class="headerlink" title="MongoDB Shell"></a>MongoDB Shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">1. 数据库内容<br><br>   //查看所有数据库<br>   show dbs<br><br>   //删除数据库<br>   db.dropDatebase()<br><br>2. 集合内容<br><br>   //创建集合<br>   db.createCollection()<br><br>   //查看所有集合\表<br>   show collections<br>   show tables<br><br>   //选定某一集合<br>   use db_name<br><br>   //查看集合的信息<br>   db.stats()<br><br>   //删除一个集合，但是需要先指定一个数据库，即先执行 use db_name<br>   db.dropDatabase()<br><br>   //修改集合的名称<br>   db.collection_name.renameCollection(&#x27;new_name&#x27;)<br><br>3. 文档内容<br><br>   //插入数据<br>   db.collection_name.insert(document)<br>   db.collection_name.save(document)<br><br>   //查询数据多条数据<br>   db.collection_name.find()<br>   <br>   //查询 当前数据中 test 集合里，有没有name = zhangsan 的对象<br>   db.test.find(&#123;name:&quot;zhangsan&quot;&#125;);<br></code></pre></td></tr></table></figure><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119155234027.png" alt="image-20220119155234027" style="zoom:33%;" /><h3 id="why-docker-compose"><a href="#why-docker-compose" class="headerlink" title="why docker compose"></a>why docker compose</h3><p>操作Docker的时候</p><p>如果只是操作单例服务的话，用docker命令操作:<code>build</code>、<code>run</code> 等等就能满足。</p><p>但是在操作一整套服务的时候，涉及到的容器操作就会巨多，运行多个微服务实例再加多个Consul做集群，然后再加上<code>Oracle</code>、<code>redis</code>、<code>Rabbitmq</code>等等，就会捉襟见肘。</p><p>所以需要<code>Docker compose</code>帮助做容器编排。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Docker for windows 自带此功能</p><p>Linux 下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">（官网安装地址，较慢，可以执行下面国内地址）</span><br>sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose<br><span class="hljs-meta prompt_">#</span><span class="language-bash">1.国内加速安装</span><br>curl -L https://get.daocloud.io/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose<br><span class="hljs-meta prompt_">#</span><span class="language-bash">2.Apply executable permissions to the binary</span><br>sudo chmod +x /usr/local/bin/docker-compose<br><span class="hljs-meta prompt_">#</span><span class="language-bash">3.Test the installation.</span><br>docker-compose --version<br></code></pre></td></tr></table></figure><h3 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动项目</span><br>docker-compose up<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动（后台运行）</span><br>docker-compose up -d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">停止项目</span><br>docker-compose down <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">项目日志</span><br>docker-compose logs<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看项目中的容器列表</span><br>docker-compose ps<br></code></pre></td></tr></table></figure><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>通过<code>docker-compose</code> 启动 web 应用，同时使用<code>Nginx</code>反向代理。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119161032986.png" alt="DockerCompose"></p><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><ol><li>将发布好的web应用文件放到服务器上。</li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119161132040.png" alt="服务器web应用位置"></p><ol start="2"><li><p>在服务器应用文件夹位置添加俩文件：<code>docker-compose.yml</code> 和 <code>proxy.conf</code></p><p><code>docker-compose.yml</code> 是 <code>docker-compose</code>的默认配置文件。</p><p><code>proxy.conf</code> 是要给<code>nginx</code>挂载的配置文件，回头可以放别的地方。</p></li></ol><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119161212330.png" alt="添加配置文件"></p><ol start="3"><li><p><code>docker-compose.yml</code></p><p><code>Docker-compose 配合文件</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;2&#x27;</span><br><span class="hljs-attr">services:</span><br>    <span class="hljs-attr">webdemo:</span><br>        <span class="hljs-attr">container_name:</span> <span class="hljs-string">webdemo.compose</span><br>        <span class="hljs-attr">build:</span> <span class="hljs-string">.</span><br>        <span class="hljs-attr">ports:</span> <br>         <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8081:80&quot;</span><br><br>    <span class="hljs-attr">reverse-proxy:</span><br>        <span class="hljs-attr">container_name:</span> <span class="hljs-string">nginxdemo</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">nginx</span><br>        <span class="hljs-attr">ports:</span><br>         <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8082:80&quot;</span><br>        <span class="hljs-attr">volumes:</span><br>         <span class="hljs-bullet">-</span> <span class="hljs-string">./proxy.conf:/etc/nginx/conf.d/default.conf</span><br></code></pre></td></tr></table></figure><p>释义：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">version: &#x27;2&#x27;<br>services:<br>    webdemo:<br>        container_name: webdemo.compose # 容器名称<br>        build: . # build 当前文件夹<br>        ports: <br>         - &quot;8081:80&quot; # 端口映射<br><br>    reverse-proxy:<br>        container_name: nginxdemo # 容器名称<br>        image: nginx # 镜像名称<br>        ports:<br>         - &quot;8082:80&quot; # 端口映射<br>        volumes:<br>         - ./proxy.conf:/etc/nginx/conf.d/default.conf # 文件映射<br></code></pre></td></tr></table></figure></li><li><p><code>proxy.conf</code></p><p><code>Nginx 配置</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">server &#123;<br>  listen <span class="hljs-number">80</span>;<br><br>  location / &#123;<br>    proxy_pass http:<span class="hljs-comment">//192.168.137.6:8081;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>释义：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c#">server &#123;<br>  listen <span class="hljs-number">80</span>; <span class="hljs-comment">//监听端口</span><br><br>  location / &#123;<br>    proxy_pass http:<span class="hljs-comment">//192.168.137.6:8081; //跳转url</span><br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ol><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p><code>docker-compose up -d</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@vm02:~/webdemo# docker-compose up -d<br>Creating network &quot;webdemo_default&quot; with the default driver<br>Creating webdemo.compose ... done<br>Creating nginxdemo       ... done<br></code></pre></td></tr></table></figure><h4 id="启动日志"><a href="#启动日志" class="headerlink" title="启动日志"></a>启动日志</h4><p><code>docker-compose logs</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@vm02:~/webdemo# docker-compose logs<br>Attaching to nginxdemo, webdemo.compose<br>nginxdemo        | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration<br>nginxdemo        | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/<br>nginxdemo        | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh<br>nginxdemo        | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf<br>nginxdemo        | 10-listen-on-ipv6-by-default.sh: info: /etc/nginx/conf.d/default.conf differs from the packaged version<br>nginxdemo        | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh<br>nginxdemo        | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh<br>nginxdemo        | /docker-entrypoint.sh: Configuration complete; ready for start up<br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: using the &quot;epoll&quot; event method<br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: nginx/1.21.5<br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6) <br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: OS: Linux 5.4.0-94-generic<br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576<br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: start worker processes<br>nginxdemo        | 2022/01/19 08:27:00 [notice] 1#1: start worker process 30<br>webdemo.compose  | warn: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository[60]<br>webdemo.compose  |       Storing keys in a directory &#x27;/root/.aspnet/DataProtection-Keys&#x27; that may not be persisted outside of the container. Protected data will be unavailable when container is destroyed.<br>webdemo.compose  | warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]<br>webdemo.compose  |       No XML encryptor configured. Key &#123;887cc5db-dcb2-4d26-886d-0f3aa1c787c9&#125; may be persisted to storage in unencrypted form.<br>webdemo.compose  | info: Microsoft.Hosting.Lifetime[0]<br>webdemo.compose  |       Now listening on: http://[::]:80<br>webdemo.compose  | info: Microsoft.Hosting.Lifetime[0]<br>webdemo.compose  |       Application started. Press Ctrl+C to shut down.<br>webdemo.compose  | info: Microsoft.Hosting.Lifetime[0]<br>webdemo.compose  |       Hosting environment: Production<br>webdemo.compose  | info: Microsoft.Hosting.Lifetime[0]<br>webdemo.compose  |       Content root path: /app<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119162936354.png" alt="执行日志"></p><h4 id="容器列表"><a href="#容器列表" class="headerlink" title="容器列表"></a>容器列表</h4><p><code>docker ps</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@vm02:~/webdemo# docker ps<br>CONTAINER ID   IMAGE             COMMAND                  CREATED              STATUS              PORTS                                   NAMES<br>0d4ea2075140   nginx             &quot;/docker-entrypoint.…&quot;   About a minute ago   Up About a minute   0.0.0.0:8082-&gt;80/tcp, :::8082-&gt;80/tcp   nginxdemo<br>686adcb2655a   webdemo_webdemo   &quot;dotnet WebDemo.dll&quot;     About a minute ago   Up About a minute   0.0.0.0:8081-&gt;80/tcp, :::8081-&gt;80/tcp   webdemo.compose<br></code></pre></td></tr></table></figure><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119163032471.png" alt="容器列表"></p><h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20220119163327957.png" alt="运行结果"></p><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><p><code>docker-compose --version</code></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>至此，已经完成了通过<code>Docker-compose</code>动态编排容器，实现<code>Nginx</code>反向代理<code>.Net core web 应用程序</code></p><p>随着学习的深入，后续也会渐渐丰满本篇内容。</p><h2 id="Docker-Swarm-集群"><a href="#Docker-Swarm-集群" class="headerlink" title="Docker Swarm 集群"></a>Docker Swarm 集群</h2><h2 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h2><blockquote><p>镜像加速以下 或者考虑 阿里云镜像加速 </p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;https://1rlt72n0.mirror.aliyuncs.com&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;https://reg-mirror.qiniu.com&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;https://dockerhub.azk8s.cn&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;https://mirror.ccs.tencentyun.com&quot;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;insecure-registries&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;debug&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;experimental&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;features&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;buildkit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;builder&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;gc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;defaultKeepStorage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;20GB&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="常用报错"><a href="#常用报错" class="headerlink" title="常用报错"></a>常用报错</h2><blockquote><p> 安装Docker Desktop报错 <code>WSL </code>2 installation is incomplete.</p></blockquote><p>安装：<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p><blockquote><p>电脑启动后，Docker 没有启动，执行如下命令</p></blockquote><p><code>cd &quot;C:\Program Files\Docker\Docker&quot; DockerCli.exe -SwitchDaemon</code></p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>.net core</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DevExpress Note</title>
    <link href="/2021/10/30/DevExpress-Note/"/>
    <url>/2021/10/30/DevExpress-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DevExpress-Note"><a href="#DevExpress-Note" class="headerlink" title="DevExpress Note"></a><code>DevExpress Note</code></h1><h2 id="1-GridControl-VS-SeachLookUpEdit"><a href="#1-GridControl-VS-SeachLookUpEdit" class="headerlink" title="1.GridControl VS SeachLookUpEdit"></a><code>1.GridControl VS SeachLookUpEdit</code></h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">using</span> DevExpress.XtraEditors.Repository;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.ComponentModel;<br><span class="hljs-keyword">using</span> System.Data;<br><span class="hljs-keyword">using</span> System.Drawing;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><span class="hljs-keyword">using</span> System.Windows.Forms;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Dev10_2_8</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Form4</span> : <span class="hljs-title">Form</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Form4</span>()</span><br>        &#123;<br>            InitializeComponent();<br>        &#125;<br><br>        <span class="hljs-keyword">private</span> List&lt;Objectes&gt; list = <span class="hljs-keyword">new</span> List&lt;Objectes&gt;();<br><br>        <span class="hljs-keyword">private</span> List&lt;SeachLookUpEditData&gt; SLEPLIST = <span class="hljs-keyword">new</span> List&lt;SeachLookUpEditData&gt;();<br><br>        <span class="hljs-keyword">private</span> List&lt;SeachLookUpEditData&gt; SLESLIST = <span class="hljs-keyword">new</span> List&lt;SeachLookUpEditData&gt;();<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Form4_Load</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>        &#123;<br>            Init();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Init</span>()</span><br>        &#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 构建基础测试数据</span><br><br>            list.Add(<span class="hljs-keyword">new</span> Objectes<br>            &#123;<br>                ID = <span class="hljs-string">&quot;1&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;张三&quot;</span>,<br>                CLASSP = <span class="hljs-string">&quot;a&quot;</span>,<br>                CLASSSON = <span class="hljs-string">&quot;a1&quot;</span><br>            &#125;);<br><br>            list.Add(<span class="hljs-keyword">new</span> Objectes<br>            &#123;<br>                ID = <span class="hljs-string">&quot;2&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;李四&quot;</span>,<br>                CLASSP = <span class="hljs-string">&quot;b&quot;</span>,<br>                CLASSSON = <span class="hljs-string">&quot;b1&quot;</span><br>            &#125;);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 构建SeachLookUpedit 数据源</span><br><br>            SLEPLIST.Add(<span class="hljs-keyword">new</span> SeachLookUpEditData<br>            &#123;<br>                ID = <span class="hljs-string">&quot;a&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;父节点A&quot;</span>,<br>                PID = <span class="hljs-string">&quot;0&quot;</span><br>            &#125;);<br><br>            SLEPLIST.Add(<span class="hljs-keyword">new</span> SeachLookUpEditData<br>            &#123;<br>                ID = <span class="hljs-string">&quot;b&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;父节点B&quot;</span>,<br>                PID = <span class="hljs-string">&quot;0&quot;</span><br>            &#125;);<br><br>            SLESLIST.Add(<span class="hljs-keyword">new</span> SeachLookUpEditData<br>            &#123;<br>                ID = <span class="hljs-string">&quot;a1&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;子节点A1&quot;</span>,<br>                PID = <span class="hljs-string">&quot;a&quot;</span><br>            &#125;);<br><br>            SLESLIST.Add(<span class="hljs-keyword">new</span> SeachLookUpEditData<br>            &#123;<br>                ID = <span class="hljs-string">&quot;a2&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;子节点A2&quot;</span>,<br>                PID = <span class="hljs-string">&quot;a&quot;</span><br>            &#125;);<br><br>            SLESLIST.Add(<span class="hljs-keyword">new</span> SeachLookUpEditData<br>            &#123;<br>                ID = <span class="hljs-string">&quot;b1&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;子节点B1&quot;</span>,<br>                PID = <span class="hljs-string">&quot;b&quot;</span><br>            &#125;);<br><br>            SLESLIST.Add(<span class="hljs-keyword">new</span> SeachLookUpEditData<br>            &#123;<br>                ID = <span class="hljs-string">&quot;b2&quot;</span>,<br>                NAME = <span class="hljs-string">&quot;子节点B2&quot;</span>,<br>                PID = <span class="hljs-string">&quot;b&quot;</span><br>            &#125;);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 绑定</span><br><br>            <span class="hljs-keyword">this</span>.repositoryItemSearchLookUpEdit1.DataSource = SLEPLIST;<br><br>            <span class="hljs-keyword">this</span>.repositoryItemSearchLookUpEdit2.DataSource = SLESLIST;<br><br>            <span class="hljs-keyword">this</span>.gridControl1.DataSource = list;<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 关键方法</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">gridView1_CustomRowCellEditForEditing</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, DevExpress.XtraGrid.Views.Grid.CustomRowCellEditEventArgs e</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (e.Column.FieldName == <span class="hljs-string">&quot;CLASSSON&quot;</span>)<br>            &#123;<br>                <span class="hljs-built_in">object</span> oid = gridView1.GetFocusedRowCellValue(<span class="hljs-string">&quot;CLASSP&quot;</span>);<br><br>                <span class="hljs-keyword">if</span> (oid == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span>;<br><br>                <span class="hljs-built_in">string</span> Pid = oid.ToString();<br><br>                RepositoryItemSearchLookUpEdit lookup = ReturnLook(Pid);<br><br>                e.RepositoryItem = lookup;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 生产控件</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;Pid&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> RepositoryItemSearchLookUpEdit <span class="hljs-title">ReturnLook</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> Pid</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> list = SLESLIST.Where(p =&gt; p.PID == Pid).ToList();<br><br>            RepositoryItemSearchLookUpEdit obj = <span class="hljs-keyword">new</span> RepositoryItemSearchLookUpEdit<br>            &#123;<br>                ValueMember = <span class="hljs-string">&quot;ID&quot;</span>,<br><br>                DisplayMember = <span class="hljs-string">&quot;NAME&quot;</span>,<br><br>                DataSource = list<br>            &#125;;<br><br>            <span class="hljs-keyword">return</span> obj;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 防止选择完父节点后，对应的子节点字段与父节点字段冲突 比如 选择的父节点是b，但是这个时候子节点还是 a的子节点。</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">repositoryItemSearchLookUpEdit1_EditValueChanged</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> val = ((DevExpress.XtraEditors.BaseEdit)sender).EditValue;<br><br>            <span class="hljs-keyword">if</span> (val != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-built_in">object</span> Sid = gridView1.GetFocusedRowCellValue(<span class="hljs-string">&quot;CLASSSON&quot;</span>);<br><br>                <span class="hljs-keyword">var</span> list = SLESLIST.Where(p =&gt; p.PID == val.ToString() &amp;&amp; p.ID == Sid.ToString()).ToList();<br><br>                <span class="hljs-keyword">if</span> (list.Count == <span class="hljs-number">0</span>)<br>                &#123;<br>                    gridView1.SetFocusedRowCellValue(<span class="hljs-string">&quot;CLASSSON&quot;</span>, <span class="hljs-literal">null</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Objectes</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ID &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> NAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CLASSP &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CLASSSON &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SeachLookUpEditData</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ID &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> NAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PID &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210818220541090.png" alt="效果"></p><h2 id="2-DevExpress-GridControl-CardView"><a href="#2-DevExpress-GridControl-CardView" class="headerlink" title="2.DevExpress GridControl CardView"></a><code>2.DevExpress GridControl CardView</code></h2><h3 id="添加一个GridControl"><a href="#添加一个GridControl" class="headerlink" title="添加一个GridControl"></a>添加一个<code>GridControl</code></h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211106155039479.png" alt="ConvertCardView"></p><h3 id="GridView-转-CardView"><a href="#GridView-转-CardView" class="headerlink" title="GridView 转 CardView"></a><code>GridView</code> 转 <code>CardView</code></h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211106155147102.png" alt="CardView"></p><h3 id="设置字段"><a href="#设置字段" class="headerlink" title="设置字段"></a>设置字段</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211106155745779.png" alt="设置"></p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 实体类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PicEntity</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FILENAME &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FILEPATH &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> Byte[] PIC &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 选择图片</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Btn_ChoosePic_Click</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>&#123;<br>    OpenFileDialog fileDialog = <span class="hljs-keyword">new</span> OpenFileDialog<br>    &#123;<br>        Multiselect = <span class="hljs-literal">true</span>,<br><br>        Title = <span class="hljs-string">&quot;请选择文件&quot;</span>,<br><br>        Filter = <span class="hljs-string">&quot;图片|*.jpg;*.png;*.gif;*.jpeg;*.bmp&quot;</span> <span class="hljs-comment">//设置要选择的文件的类型</span><br>    &#125;;<br><br>    List&lt;PicEntity&gt; list = <span class="hljs-keyword">new</span> List&lt;PicEntity&gt;();<br><br>    <span class="hljs-keyword">if</span> (fileDialog.ShowDialog() == DialogResult.OK)<br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">string</span> file <span class="hljs-keyword">in</span> fileDialog.FileNames)<br>        &#123;<br>            <span class="hljs-built_in">string</span>[] arr = file.Split(<span class="hljs-string">&#x27;\\&#x27;</span>);<br><br>            <span class="hljs-keyword">using</span> (Image img = Image.FromFile(file))<br>            &#123;<br>                list.Add(<span class="hljs-keyword">new</span> PicEntity &#123; FILENAME = arr[arr.Length - <span class="hljs-number">1</span>], FILEPATH = file, PIC = FileContent(file) &#125;);<span class="hljs-comment">//arr[arr.Length - 1]</span><br>            &#125;<br>        &#125;<br><br>        gridControl1.DataSource = list;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Cs"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 文件转Byte数组</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;fileName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">FileContent</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> fileName</span>)</span><br>&#123;<br>    <span class="hljs-keyword">using</span> (FileStream fs = <span class="hljs-keyword">new</span> FileStream(fileName, FileMode.Open, FileAccess.Read))<br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-built_in">byte</span>[] buffur = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[fs.Length];<br>            fs.Read(buffur, <span class="hljs-number">0</span>, (<span class="hljs-built_in">int</span>)fs.Length);<br>            <span class="hljs-keyword">return</span> buffur;<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> ex;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 构造函数</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">UC_PicList</span>()</span><br>&#123;<br>    InitializeComponent();<br><br>    <span class="hljs-comment">//自适应高度</span><br>    cardView1.OptionsBehavior.FieldAutoHeight = <span class="hljs-literal">true</span>;<br><br>    <span class="hljs-comment">//设置图片控件高度</span><br>    repositoryItemPictureEdit1.CustomHeight = <span class="hljs-number">300</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h3><p>选择图片文件，把图片信息放到数据源中，展示到视图中。</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211106161313136.png" alt="image-20211106161313136"></p><h2 id="3-Winform-动态设置控件属性"><a href="#3-Winform-动态设置控件属性" class="headerlink" title="3.Winform 动态设置控件属性"></a>3.Winform 动态设置控件属性</h2><p>本文用到的是 Winform + Dev 控件</p><p>主要功能：可以读取配置（从数据库或者配置文件中读取），通过配置控制前面控件的属性</p><h3 id="放点控件"><a href="#放点控件" class="headerlink" title="放点控件"></a>放点控件</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/521993-20210830135410324-1392804038.png"></p><h3 id="先准备用到的实体"><a href="#先准备用到的实体" class="headerlink" title="先准备用到的实体"></a>先准备用到的实体</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 控件配置</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ControlList</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 控件NAME</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ControlName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 控件类型</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ControlTypeName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 控件默认值</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ControlDefaultVal &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 控件可用</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> ControlEnable &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 控件显示</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> ControlvisibleInfo ControlVisible &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ControlvisibleInfo</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 显示值 </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> DevExpress.XtraLayout.Utils.LayoutVisibility IsVisible &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 包控件的Item</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PatientItem &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs Csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Form5</span> : <span class="hljs-title">Form</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Form5</span>()</span><br>    &#123;<br>        InitializeComponent();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Form5_Load</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>    &#123;<br>        BindData();<br><br>        SetControlsPropertyVal();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;ControlList&gt; listName = <span class="hljs-keyword">new</span> List&lt;ControlList&gt;();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetControlsPropertyVal</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (ControlList item <span class="hljs-keyword">in</span> listName)<br>        &#123;<br>            Control[] ctrols = layoutControl1.Controls.Find(item.ControlName, <span class="hljs-literal">true</span>);<br><br>            <span class="hljs-keyword">if</span> (ctrols.Length &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                Type t = ctrols[<span class="hljs-number">0</span>].GetType();<br><br>                <span class="hljs-keyword">if</span> (t.Name == item.ControlTypeName &amp;&amp; ctrols[<span class="hljs-number">0</span>].Name == item.ControlName)<br>                &#123;<br>                    <span class="hljs-built_in">object</span> o = t.GetProperty(<span class="hljs-string">&quot;EditValue&quot;</span>).GetValue(ctrols[<span class="hljs-number">0</span>], <span class="hljs-literal">null</span>);<br><br>                    t.GetProperty(<span class="hljs-string">&quot;EditValue&quot;</span>).SetValue(ctrols[<span class="hljs-number">0</span>], item.ControlDefaultVal);<br><br>                    t.GetProperty(<span class="hljs-string">&quot;Enabled&quot;</span>).SetValue(ctrols[<span class="hljs-number">0</span>], item.ControlEnable);<br><br>                    <span class="hljs-keyword">if</span> (item.ControlVisible != <span class="hljs-literal">null</span>)<br>                    &#123;<br>                        DevExpress.XtraLayout.BaseLayoutItem obj = layoutControlGroup1.Items.FindByName(item.ControlVisible.PatientItem);<br><br>                        <span class="hljs-keyword">if</span> (obj != <span class="hljs-literal">null</span>)<br>                        &#123;<br>                            obj.Visibility = item.ControlVisible.IsVisible;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BindData</span>()</span><br>    &#123;<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 绑定控件</span><br>        List&lt;SeachLookUpEditDataBind&gt; list = <span class="hljs-keyword">new</span> List&lt;SeachLookUpEditDataBind&gt;<br>        &#123;<br>            <span class="hljs-keyword">new</span> SeachLookUpEditDataBind &#123; ID = <span class="hljs-string">&quot;1&quot;</span>, NAME = <span class="hljs-string">&quot;张三&quot;</span> &#125;,<br>            <span class="hljs-keyword">new</span> SeachLookUpEditDataBind &#123; ID = <span class="hljs-string">&quot;2&quot;</span>, NAME = <span class="hljs-string">&quot;李四&quot;</span> &#125;,<br>            <span class="hljs-keyword">new</span> SeachLookUpEditDataBind &#123; ID = <span class="hljs-string">&quot;3&quot;</span>, NAME = <span class="hljs-string">&quot;王五&quot;</span> &#125;,<br>            <span class="hljs-keyword">new</span> SeachLookUpEditDataBind &#123; ID = <span class="hljs-string">&quot;4&quot;</span>, NAME = <span class="hljs-string">&quot;赵六&quot;</span> &#125;<br>        &#125;;<br><br>        searchLookUpEdit1.Properties.ValueMember = <span class="hljs-string">&quot;ID&quot;</span>;<br>        searchLookUpEdit1.Properties.DisplayMember = <span class="hljs-string">&quot;NAME&quot;</span>;<br>        searchLookUpEdit1.Properties.DataSource = list;<br><br>        searchLookUpEdit2.Properties.ValueMember = <span class="hljs-string">&quot;ID&quot;</span>;<br>        searchLookUpEdit2.Properties.DisplayMember = <span class="hljs-string">&quot;NAME&quot;</span>;<br>        searchLookUpEdit2.Properties.DataSource = list;<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 设置控件属性值</span><br><br>        listName.Add(<span class="hljs-keyword">new</span> ControlList<br>        &#123;<br>            ControlName = <span class="hljs-string">&quot;textEdit1&quot;</span>,<br>            ControlTypeName = <span class="hljs-string">&quot;TextEdit&quot;</span>,<br>            ControlDefaultVal = <span class="hljs-string">&quot;234&quot;</span>,<br>            ControlEnable = <span class="hljs-literal">true</span>,<br>            ControlVisible = <span class="hljs-keyword">new</span> ControlvisibleInfo<br>            &#123;<br>                IsVisible = DevExpress.XtraLayout.Utils.LayoutVisibility.Always,<br>                PatientItem = <span class="hljs-string">&quot;layoutControlItem2&quot;</span><br>            &#125;<br>        &#125;);<br>        listName.Add(<span class="hljs-keyword">new</span> ControlList<br>        &#123;<br>            ControlName = <span class="hljs-string">&quot;searchLookUpEdit1&quot;</span>,<br>            ControlTypeName = <span class="hljs-string">&quot;SearchLookUpEdit&quot;</span>,<br>            ControlDefaultVal = <span class="hljs-string">&quot;1&quot;</span>,<br>            ControlEnable = <span class="hljs-literal">false</span>,<br>            ControlVisible = <span class="hljs-keyword">new</span> ControlvisibleInfo<br>            &#123;<br>                IsVisible = DevExpress.XtraLayout.Utils.LayoutVisibility.Always,<br>                PatientItem = <span class="hljs-string">&quot;layoutControlItem1&quot;</span><br>            &#125;<br>        &#125;);<br>        listName.Add(<span class="hljs-keyword">new</span> ControlList<br>        &#123;<br>            ControlName = <span class="hljs-string">&quot;searchLookUpEdit2&quot;</span>,<br>            ControlTypeName = <span class="hljs-string">&quot;SearchLookUpEdit&quot;</span>,<br>            ControlDefaultVal = <span class="hljs-string">&quot;2&quot;</span>,<br>            ControlEnable = <span class="hljs-literal">true</span>,<br>            ControlVisible = <span class="hljs-keyword">new</span> ControlvisibleInfo<br>            &#123;<br>                IsVisible = DevExpress.XtraLayout.Utils.LayoutVisibility.Never,<br>                PatientItem = <span class="hljs-string">&quot;layoutControlItem3&quot;</span><br>            &#125;<br>        &#125;);<br>        listName.Add(<span class="hljs-keyword">new</span> ControlList<br>        &#123;<br>            ControlName = <span class="hljs-string">&quot;radioGroup1&quot;</span>,<br>            ControlTypeName = <span class="hljs-string">&quot;RadioGroup&quot;</span>,<br>            ControlDefaultVal = <span class="hljs-string">&quot;1&quot;</span>,<br>            ControlEnable = <span class="hljs-literal">true</span>,<br>            ControlVisible = <span class="hljs-keyword">new</span> ControlvisibleInfo<br>            &#123;<br>                IsVisible = DevExpress.XtraLayout.Utils.LayoutVisibility.Always,<br>                PatientItem = <span class="hljs-string">&quot;layoutControlItem4&quot;</span><br>            &#125;<br>        &#125;);<br><br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-Winform使用FontAwesome字体库"><a href="#4-Winform使用FontAwesome字体库" class="headerlink" title="4.Winform使用FontAwesome字体库"></a>4.<code>Winform</code>使用<code>FontAwesome</code>字体库</h2><h3 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h3><h4 id="Nuget-FontAwesomeNet"><a href="#Nuget-FontAwesomeNet" class="headerlink" title="Nuget FontAwesomeNet"></a>Nuget FontAwesomeNet</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211119113023849.png" alt="image-20211119113023849"></p><h4 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h4><p>放 Dev的俩 simpleButton 和一个 imageCollection</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211119113135384.png" alt="image-20211119113135384"></p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><p>构造函数</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">UC_UseFontAwesomeNet</span>()</span><br>&#123;<br>    InitializeComponent();<br><br>    <span class="hljs-comment">// get FontAwesome icon class names(type is Dictionary&lt;string, int&gt;)</span><br>    <span class="hljs-built_in">string</span>[] names = FontAwesome.TypeDict.Select(v =&gt; v.Key).ToArray();<br><br>    <span class="hljs-comment">// use FontAwesome icon class name get FontAwesome icon Unicode value</span><br>    <span class="hljs-built_in">int</span> val = FontAwesome.TypeDict[<span class="hljs-string">&quot;fa-heart&quot;</span>];<span class="hljs-comment">//0xf004</span><br><br>    <span class="hljs-comment">// defalut:</span><br>    Bitmap bmp = FontAwesome.GetImage(val);<span class="hljs-comment">//0xf004</span><br>    Icon ico = FontAwesome.GetIcon(val);<span class="hljs-comment">//0xf004</span><br><br>    <span class="hljs-comment">// custom:</span><br>    FontAwesome.IconSize = <span class="hljs-number">128</span>;<span class="hljs-comment">//change icon size</span><br>    FontAwesome.ForeColer = Color.Purple;<span class="hljs-comment">//change icon forecolor</span><br>    Bitmap bmp1 = FontAwesome.GetImage(val);<span class="hljs-comment">//0xf004</span><br>    Icon ico1 = FontAwesome.GetIcon(val);<span class="hljs-comment">//0xf004</span><br><br>    imageCollection1.AddImage(bmp);<br>    imageCollection1.AddImage(bmp1);<br><br>    simpleButton1.ImageList = imageCollection1;<br>    simpleButton2.ImageList = imageCollection1;<br><br>    simpleButton1.ImageIndex = <span class="hljs-number">0</span>;<br>    simpleButton2.ImageIndex = <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211119113430451.png" alt="成果"></p><h4 id="查看图标编码"><a href="#查看图标编码" class="headerlink" title="查看图标编码"></a>查看图标编码</h4><p>如下两个地址都可以。</p><p><a href="https://www.bootcss.com/p/font-awesome/design.html">https://www.bootcss.com/p/font-awesome/design.html</a><br><a href="http://www.fontawesome.com.cn/cheatsheet/">http://www.fontawesome.com.cn/cheatsheet/</a> </p><p><strong>需要将 &amp;#x 替换成 \u 最终是\ue603</strong></p><h3 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h3><h4 id="添加按钮"><a href="#添加按钮" class="headerlink" title="添加按钮"></a>添加按钮</h4><p>通方式1中一样，都用imageCollection 去指向</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211119161159228.png" alt="再添加一个按钮"></p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">UC_UseFontAwesomeNet</span>()</span><br>&#123;<br>    InitializeComponent();<br><br>    <span class="hljs-comment">// get FontAwesome icon class names(type is Dictionary&lt;string, int&gt;)</span><br>    <span class="hljs-built_in">string</span>[] names = FontAwesome.TypeDict.Select(v =&gt; v.Key).ToArray();<br><br>    <span class="hljs-comment">// use FontAwesome icon class name get FontAwesome icon Unicode value</span><br>    <span class="hljs-built_in">int</span> val = FontAwesome.TypeDict[<span class="hljs-string">&quot;fa-heart&quot;</span>];<span class="hljs-comment">//0xf004</span><br><br>    <span class="hljs-comment">// defalut:</span><br>    Bitmap bmp = FontAwesome.GetImage(val);<span class="hljs-comment">//0xf004</span><br>    Icon ico = FontAwesome.GetIcon(val);<span class="hljs-comment">//0xf004</span><br><br>    <span class="hljs-comment">// custom:</span><br>    FontAwesome.IconSize = <span class="hljs-number">128</span>;<span class="hljs-comment">//change icon size</span><br>    FontAwesome.ForeColer = Color.Purple;<span class="hljs-comment">//change icon forecolor</span><br>    Bitmap bmp1 = FontAwesome.GetImage(val);<span class="hljs-comment">//0xf004</span><br>    Icon ico1 = FontAwesome.GetIcon(val);<span class="hljs-comment">//0xf004</span><br><br>    imageCollection1.AddImage(bmp);<br>    imageCollection1.AddImage(bmp1);<br><br>    simpleButton1.ImageList = imageCollection1;<br>    simpleButton2.ImageList = imageCollection1;<br>    <br>    simpleButton1.ImageIndex = <span class="hljs-number">0</span>;<br>    simpleButton2.ImageIndex = <span class="hljs-number">1</span>;<br><span class="hljs-comment">// ***********************上面使用的是FontAwesomeNet****************</span><br><span class="hljs-comment">// ***********************simpleButton3 使用转换方法****************</span><br>    <span class="hljs-comment">//simpleButton3 </span><br>    Image img = GetFontImage(<span class="hljs-string">&quot;\uf2cd&quot;</span>, Color.Red, <span class="hljs-number">20</span>);<br>    imageCollection1.AddImage(img);<br>simpleButton3.ImageList = imageCollection1;<br>    simpleButton3.ImageIndex = <span class="hljs-number">2</span>;<br><br>    <span class="hljs-comment">// ***********************这里使用的是直接设置**********************************</span><br>    <span class="hljs-comment">//PrivateFontCollection pfc = new PrivateFontCollection();</span><br><br>    <span class="hljs-comment">//string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, &quot;font/fontawesome-webfont.ttf&quot;);</span><br><br>    <span class="hljs-comment">//pfc.AddFontFile(path);</span><br><br>    <span class="hljs-comment">//simpleButton3.Text = &quot;\uf2cd&quot;;</span><br><br>    <span class="hljs-comment">//simpleButton3.Font = new Font(pfc.Families[0], 20);</span><br><br>    <span class="hljs-comment">//simpleButton3.ForeColor = Color.Red;</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="帮助转换方法"><a href="#帮助转换方法" class="headerlink" title="帮助转换方法"></a>帮助转换方法</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//https://www.bootcss.com/p/font-awesome/design.html  图标代码</span><br><span class="hljs-comment">//http://www.fontawesome.com.cn/cheatsheet/ 图标代码</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 通过FontAwesome设置字体</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">FontAwesomeHelper</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 字体图标生成图标</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;fontIco&quot;&gt;</span>图标编码<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;color&quot;&gt;</span>颜色<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;size&quot;&gt;</span>大小<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Image <span class="hljs-title">GetFontImage</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> fontIco, Color color, <span class="hljs-built_in">int</span> size</span>)</span><br>    &#123;<br>        Bitmap bmp = <span class="hljs-keyword">new</span> Bitmap(size, size);<br>        Graphics g = Graphics.FromImage(bmp);<br>        g.TextRenderingHint = TextRenderingHint.AntiAliasGridFit;<br>        g.InterpolationMode = InterpolationMode.HighQualityBilinear;<br>        g.PixelOffsetMode = PixelOffsetMode.HighQuality;<br>        g.SmoothingMode = SmoothingMode.HighQuality;<br><br>        <span class="hljs-built_in">string</span> ch = fontIco;<br>        Font font = GetAdjustedFont(g, ch, size, size, <span class="hljs-number">4</span>, <span class="hljs-literal">true</span>);<br>        SizeF stringSize = g.MeasureString(ch, font, size);<br>        <span class="hljs-built_in">float</span> w = stringSize.Width;<br>        <span class="hljs-built_in">float</span> h = stringSize.Height;<br>        <span class="hljs-built_in">float</span> left = (size - w) / <span class="hljs-number">2</span>;<br>        <span class="hljs-built_in">float</span> top = (size - h) / <span class="hljs-number">2</span>;<br>        <span class="hljs-comment">// Draw string to screen.</span><br>        SolidBrush brush = <span class="hljs-keyword">new</span> SolidBrush(color);<br>        g.DrawString(ch, font, brush, <span class="hljs-keyword">new</span> PointF(left, top));<br>        <span class="hljs-keyword">return</span> bmp;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 找字体图片</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;g&quot;&gt;</span>图片矢量<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;graphicString&quot;&gt;</span>图标编码<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;containerWidth&quot;&gt;</span>宽<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;maxFontSize&quot;&gt;</span>最大Size<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;minFontSize&quot;&gt;</span>最小Size<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;smallestOnFail&quot;&gt;</span>找不到最小找最大<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Font <span class="hljs-title">GetAdjustedFont</span>(<span class="hljs-params">Graphics g, <span class="hljs-built_in">string</span> graphicString, <span class="hljs-built_in">int</span> containerWidth, <span class="hljs-built_in">int</span> maxFontSize, <span class="hljs-built_in">int</span> minFontSize, <span class="hljs-built_in">bool</span> smallestOnFail</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">double</span> adjustedSize = maxFontSize; adjustedSize &gt;= minFontSize; adjustedSize = adjustedSize - <span class="hljs-number">0.5</span>)<br>        &#123;<br>            Font testFont = GetIconFontFromResource((<span class="hljs-built_in">float</span>)adjustedSize);<br>            SizeF adjustedSizeNew = g.MeasureString(graphicString, testFont);<br>            <span class="hljs-keyword">if</span> (containerWidth &gt; Convert.ToInt32(adjustedSizeNew.Width))<br>            &#123;<br>                <span class="hljs-keyword">return</span> testFont;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> GetIconFontFromResource(smallestOnFail ? minFontSize : maxFontSize);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 去文件夹中去找字体文件</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;size&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Font <span class="hljs-title">GetIconFontFromFilePath</span>(<span class="hljs-params"><span class="hljs-built_in">float</span> size</span>)</span><br>    &#123;<br>        PrivateFontCollection pfc = <span class="hljs-keyword">new</span> PrivateFontCollection();<br><br>        <span class="hljs-built_in">string</span> path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, <span class="hljs-string">&quot;font/fontawesome-webfont.ttf&quot;</span>);<br><br>        pfc.AddFontFile(path);<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Font(pfc.Families[<span class="hljs-number">0</span>], size, GraphicsUnit.Point);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 去项目资源中去找字体文件</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 记录坑，fontawesome-webfont.ttf 加到资源中名称变成 fontawesome_webfont里</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;size&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Font <span class="hljs-title">GetIconFontFromResource</span>(<span class="hljs-params"><span class="hljs-built_in">float</span> size</span>)</span><br>    &#123;<br>        PrivateFontCollection pfc = <span class="hljs-keyword">new</span> PrivateFontCollection();<br><br>        Assembly myAssem = Assembly.GetEntryAssembly();<br><br>        ResourceManager rm = <span class="hljs-keyword">new</span> ResourceManager(myAssem.GetName().Name.ToString() + <span class="hljs-string">&quot;.Properties.Resources&quot;</span>, myAssem);<br><br>        <span class="hljs-built_in">byte</span>[] rgbyt = (<span class="hljs-built_in">byte</span>[])rm.GetObject(<span class="hljs-string">&quot;fontawesome_webfont&quot;</span>);<br><br>        IntPtr pbyt = Marshal.AllocCoTaskMem(rgbyt.Length);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != pbyt)<br>        &#123;<br>            Marshal.Copy(rgbyt, <span class="hljs-number">0</span>, pbyt, rgbyt.Length);<br><br>            pfc.AddMemoryFont(pbyt, rgbyt.Length);<br><br>            Marshal.FreeCoTaskMem(pbyt);<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Font(pfc.Families[<span class="hljs-number">0</span>], size, GraphicsUnit.Point);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h4><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211119161929305.png" alt="成果"></p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>winform</tag>
      
      <tag>dev</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSharp 基础知识</title>
    <link href="/2021/10/30/CSharp-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2021/10/30/CSharp-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSharp-基础知识"><a href="#CSharp-基础知识" class="headerlink" title="CSharp 基础知识"></a>CSharp 基础知识</h1><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><p>类库列表</p><ul><li>XLZF.DB.Interface</li><li>XLZF.DB.MySql</li><li>XLZF.DB.SqlServer</li><li>XLZF.Model</li><li>XLZF_KnowLedge</li></ul><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//Interface</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF.DB.Interface</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IDBhelper</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Query</span>()</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF.DB.MySql</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DBhelper</span> : <span class="hljs-title">IDBhelper</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DBhelper</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;这里是&#123;0&#125;无参构造函数&quot;</span>, <span class="hljs-keyword">this</span>.GetType().FullName);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Query</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;这里是&#123;0&#125;的Query&quot;</span>, <span class="hljs-keyword">this</span>.GetType().FullName);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF.DB.SqlServer</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DBhelper</span> : <span class="hljs-title">IDBhelper</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> ConnectionStringTesting = ConfigurationManager.ConnectionStrings[<span class="hljs-string">&quot;Business_Sqlserver&quot;</span>].ConnectionString;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DBhelper</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;这里是&#123;0&#125;无参构造函数&quot;</span>, <span class="hljs-keyword">this</span>.GetType().FullName);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Query</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;这里是&#123;0&#125;的Query&quot;</span>, <span class="hljs-keyword">this</span>.GetType().FullName);<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 泛型</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> T <span class="hljs-title">QueryDomain</span>&lt;<span class="hljs-title">T</span>&gt;()</span><br>        &#123;<br>            <span class="hljs-built_in">int</span> id = <span class="hljs-number">2</span>;<br><br>            <span class="hljs-comment">/*          </span><br><span class="hljs-comment">            </span><br><span class="hljs-comment">            SELECT [Id]</span><br><span class="hljs-comment">                  ,[Name]</span><br><span class="hljs-comment">                  ,[Account]</span><br><span class="hljs-comment">                  ,[Password]</span><br><span class="hljs-comment">                  ,[Email]</span><br><span class="hljs-comment">                  ,[Mobile]</span><br><span class="hljs-comment">                  ,[CompanyId]</span><br><span class="hljs-comment">                  ,[CompanyName]</span><br><span class="hljs-comment">                  ,[State]</span><br><span class="hljs-comment">                  ,[UserType]</span><br><span class="hljs-comment">                  ,[LastLoginTime]</span><br><span class="hljs-comment">                  ,[CreateTime]</span><br><span class="hljs-comment">                  ,[Create_User_Id]</span><br><span class="hljs-comment">                  ,[LastUpdate_User_Id]</span><br><span class="hljs-comment">                  ,[LastUpdate_Datetime]</span><br><span class="hljs-comment">              FROM [dbo].[User]</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">              where Id= 2</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">             */</span><br><br>            Type type = <span class="hljs-keyword">typeof</span>(T);<span class="hljs-comment">//找到分类</span><br><br>            T t = (T)Activator.CreateInstance(type);<span class="hljs-comment">//创建对象,这有一个强制转换</span><br><br>            <span class="hljs-built_in">string</span> columns = <span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, type.GetProperties().Select(p =&gt; <span class="hljs-built_in">string</span>.Format(<span class="hljs-string">&quot;[&#123;0&#125;]&quot;</span>, p.Name)));<span class="hljs-comment">//linq 把所有的属性替换成加[] 的字符串，并且以逗号分隔</span><br><br>            <span class="hljs-built_in">string</span> sql = <span class="hljs-built_in">string</span>.Format(<span class="hljs-string">&quot;SELECT &#123;0&#125; from [&#123;1&#125;] where Id = &#123;2&#125;&quot;</span>, columns, type.Name, id);<br><br>            <span class="hljs-keyword">using</span> (SqlConnection conn = <span class="hljs-keyword">new</span> SqlConnection(ConnectionStringTesting))<br>            &#123;<br>                SqlCommand command = <span class="hljs-keyword">new</span> SqlCommand(sql, conn);<br><br>                conn.Open();<br><br>                SqlDataReader reader = command.ExecuteReader(System.Data.CommandBehavior.CloseConnection);<span class="hljs-comment">//自动关闭</span><br><br>                <span class="hljs-keyword">if</span> (reader.Read())<br>                &#123;<br>                    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> prop <span class="hljs-keyword">in</span> type.GetProperties())<br>                    &#123;<br>                        prop.SetValue(t, reader[prop.Name]);<br><br>                        Console.WriteLine(<span class="hljs-string">&quot;属性是&#123;0&#125;&quot;</span>, prop.Name);<br>                    &#125;<br><br>                    <span class="hljs-keyword">return</span> t;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">default</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF.Model</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">BaseModel</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF.Model</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">People</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF.Model</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">User</span> : <span class="hljs-title">BaseModel</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Account &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Password &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Email &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Mobile &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> CompanyId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CompanyName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 用户状态 0 正常 1 冻结 2 删除</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> State &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 用户类型 1 普通用户 2 管理员 4 超级管理员</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> UserType &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> DateTime LastLoginTime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> DateTime CreateTime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Create_User_Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> LastUpdate_User_Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>        <span class="hljs-keyword">public</span> DateTime LastUpdate_Datetime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="正菜"><a href="#正菜" class="headerlink" title="正菜"></a>正菜</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF_KnowLedge</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 1.依赖接口，进行可配置扩展</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 2.不依赖接口，反射调用方法，包括私有方法，反射破坏单例</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 3.通过反射查找model</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 20180122 依赖接口，进行可配置扩展</span><br><br>            <span class="hljs-comment">//string nameSpace = ConfigurationManager.AppSettings[&quot;XLZF.DB.Interface.IDBhelper&quot;];</span><br><br>            <span class="hljs-comment">//string[] namespaceArray = nameSpace.Split(&#x27;,&#x27;);</span><br><br>            <span class="hljs-comment">//Assembly assembly1 = Assembly.Load(namespaceArray[1]);//反射入口， 动态加载DLL</span><br><br>            <span class="hljs-comment">//Type type1 = assembly1.GetType(namespaceArray[0]);//基于类的完整名称 找出类型</span><br><br>            <span class="hljs-comment">//object oDBhelper = Activator.CreateInstance(type1);//根据类型，创建对象</span><br><br>            <span class="hljs-comment">//IDBhelper dbHelperRefletion = (IDBhelper)oDBhelper;//强转成接口类型</span><br><br>            <span class="hljs-comment">//dbHelperRefletion.Query();//调用方法</span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 20180123 通过反射  需要DLL名称，类的名称，方法的名称来找到指定的方法调用成功</span><br><br>            <span class="hljs-comment">//Assembly assembly = Assembly.Load(&quot;XLZF.DB.SqlServer&quot;);//反射入口， 动态加载DLL</span><br><br>            <span class="hljs-comment">//Type type = assembly.GetType(&quot;XLZF.DB.SqlServer.ReflectionTest&quot;);//基于类的完整名称 找出类型</span><br><br>            <span class="hljs-comment">//object obj = Activator.CreateInstance(type);//根据类型创建对象</span><br><br>            <span class="hljs-comment">//foreach (MemberInfo method in type.GetMethods())</span><br>            <span class="hljs-comment">//&#123;</span><br>            <span class="hljs-comment">//    Console.WriteLine(&quot;名称：&#123;0&#125;&quot;, method.Name);</span><br>            <span class="hljs-comment">//&#125;</span><br><br>            <span class="hljs-comment">//MethodInfo show1 = type.GetMethod(&quot;Show1&quot;);</span><br><br>            <span class="hljs-comment">//show1.Invoke(obj, null);//无参</span><br><br>            <span class="hljs-comment">//MethodInfo show2 = type.GetMethod(&quot;Show2&quot;);</span><br><br>            <span class="hljs-comment">//show2.Invoke(obj, new object[] &#123; 11 &#125;);//有参，需要的是object数组</span><br><br><br>            <span class="hljs-comment">//MethodInfo show3 = type.GetMethod(&quot;Show3&quot;, new Type[] &#123; &#125;);//无参，因为方法有重载，需要的是Type数组,为空</span><br><br>            <span class="hljs-comment">//show3.Invoke(obj, null);//无参</span><br><br>            <span class="hljs-comment">//MethodInfo show31 = type.GetMethod(&quot;Show3&quot;, new Type[] &#123; typeof(int) &#125;);//有参，因为方法有重载，需要的是Type数组,typeof(int)</span><br><br>            <span class="hljs-comment">//show31.Invoke(obj, new object[] &#123; 11 &#125;);//有参，需要的是object数组</span><br><br>            <span class="hljs-comment">//MethodInfo show32 = type.GetMethod(&quot;Show3&quot;, new Type[] &#123; typeof(string) &#125;);//无参，因为方法有重载，需要的是Type数组,typeof(string)</span><br><br>            <span class="hljs-comment">//show32.Invoke(obj, new object[] &#123; &quot;11&quot; &#125;);//有参，需要的是object数组</span><br><br>            <span class="hljs-comment">//MethodInfo show33 = type.GetMethod(&quot;Show3&quot;, new Type[] &#123; typeof(int), typeof(string) &#125;);//无参，因为方法有重载，需要的是Type数组,typeof(int), typeof(string)</span><br><br>            <span class="hljs-comment">//show33.Invoke(obj, new object[] &#123; 1, &quot;11&quot; &#125;);//有参，需要的是object数组</span><br><br>            <span class="hljs-comment">//MethodInfo show34 = type.GetMethod(&quot;Show3&quot;, new Type[] &#123; typeof(string), typeof(int) &#125;);//无参，因为方法有重载，需要的是Type数组,typeof(string), typeof(int)</span><br><br>            <span class="hljs-comment">//show34.Invoke(obj, new object[] &#123; &quot;11&quot;, 1 &#125;);//有参，需要的是object数组</span><br><br><br>            <span class="hljs-comment"><span class="hljs-doctag">///</span>/当想调用这个类中的私有方法的时候，这么写。</span><br>            <span class="hljs-comment">//MethodInfo show4 = type.GetMethod(&quot;Show4&quot;, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);</span><br><br>            <span class="hljs-comment">//show4.Invoke(obj, new object[] &#123; &quot;11&quot; &#125;);</span><br><br>            <span class="hljs-comment"><span class="hljs-doctag">///</span>/突破单例的私有构造函数</span><br>            <span class="hljs-comment">//Type typeSingle = assembly.GetType(&quot;XLZF.DB.SqlServer.Singleton&quot;);</span><br><br>            <span class="hljs-comment">//object objSingle = Activator.CreateInstance(typeSingle, true);//true 的意思是 是 私有方法</span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 20180123 反射进阶 通过反射找到数据表中的字段，reader出对应的值，返回一个model</span><br><br>            <span class="hljs-comment">//正常写法</span><br>            People people = <span class="hljs-keyword">new</span> People();<br><br>            people.Id = <span class="hljs-number">1</span>;<br><br>            people.Name = <span class="hljs-string">&quot;张三&quot;</span>;<br><br>            Console.WriteLine(<span class="hljs-string">&quot;people.Id=&#123;0&#125; people.Name=&#123;1&#125;&quot;</span>, people.Id, people.Name);<br><br>            <span class="hljs-comment">//不走寻常路</span><br>            Type type = <span class="hljs-keyword">typeof</span>(People);<span class="hljs-comment">//找到类型</span><br><br>            <span class="hljs-built_in">object</span> obj = Activator.CreateInstance(type);<span class="hljs-comment">//创建对象</span><br><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> prop <span class="hljs-keyword">in</span> type.GetProperties())<br>            &#123;<br>                <span class="hljs-keyword">if</span> (prop.Name.Equals(<span class="hljs-string">&quot;Id&quot;</span>))<br>                &#123;<br>                    prop.SetValue(obj, <span class="hljs-number">12</span>);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (prop.Name.Equals(<span class="hljs-string">&quot;Name&quot;</span>))<br>                &#123;<br>                    prop.SetValue(obj, <span class="hljs-string">&quot;李四&quot;</span>);<br>                &#125;<br><br>                Console.WriteLine(<span class="hljs-string">&quot;属性名称是&#123;0&#125; 值是&#123;1&#125;&quot;</span>, prop.Name, prop.GetValue(obj));<br>            &#125;<br><br>            <span class="hljs-comment">//更不走寻常路</span><br><br>            DBhelper dBhelper = <span class="hljs-keyword">new</span> DBhelper();<br><br>            User user = dBhelper.QueryDomain&lt;User&gt;();<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            Console.ReadKey();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h2><blockquote><p>1.声明委托<br>2.实例化委托<br>3.调用委托<br>4.委托+lambda表达式应用：包括有返回值，无返回值，有参数，无参数<br>5.泛型委托 Action(无返回值) Func（有返回值，参数的最后一位）<br>6.linq + lambda表达式的应用</p></blockquote><h3 id="入口"><a href="#入口" class="headerlink" title="入口"></a>入口</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF_Lambda</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;XLZF_Lamda 学习测试&quot;</span>);<br><br>            My_lambda.Show();<br><br>            Console.ReadLine();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">XLZF_Lambda</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">My_lambda</span><br>    &#123;<br>        <span class="hljs-comment">//回顾委托</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">delegate</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Noreturn_void</span>()</span>;<span class="hljs-comment">//声明不带返回值不带参数的委托</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">delegate</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Noreturn_string</span>()</span>;<span class="hljs-comment">//声明无参数有返回值的委托</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">delegate</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Noreturn</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span>;<span class="hljs-comment">//声明委托</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">delegate</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Noreturn_Int</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> x, <span class="hljs-built_in">int</span> y</span>)</span>;<span class="hljs-comment">//声明有返回值的带参数的委托</span><br><br>        <span class="hljs-comment">//lambda就是一个方法,演化过程</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Show</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;委托咯~~~~&quot;</span>);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 委托+lambda 表达式演化过程</span><br><br>            Noreturn method = <span class="hljs-keyword">new</span> Noreturn(Study);<span class="hljs-comment">//实例化委托</span><br><br>            method.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<span class="hljs-comment">//调用委托</span><br><br>            Noreturn method1 = <span class="hljs-keyword">new</span> Noreturn(<br>                <span class="hljs-built_in">delegate</span> (<span class="hljs-built_in">string</span> name)<br>                &#123;<br>                    Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<br>                &#125;);<span class="hljs-comment">//基于匿名方法完成委托的实例化</span><br><br>            method1.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>            Noreturn method2 = <span class="hljs-keyword">new</span> Noreturn(<br>                (<span class="hljs-built_in">string</span> name) =&gt;<br>                &#123;<br>                    Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<br>                &#125;);<span class="hljs-comment">//把delegate关键字去掉，换成=&gt; 初步形成lambda表达式  =&gt; 的左边是参数列表，右边是方法体</span><br><br>            method2.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>            Noreturn method3 = <span class="hljs-keyword">new</span> Noreturn(<br>                (name) =&gt;<br>                &#123;<br>                    Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<br>                &#125;);<span class="hljs-comment">//lambda 表达式 =&gt;左侧的参数类型去掉，因为实例化委托的时候必须满足委托的约束，当前委托的约束是无返回值，一个参数 </span><br><br>            method3.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>            <span class="hljs-comment">//Noreturn method4 = Study;</span><br><br>            Noreturn method4 =<br>                (name) =&gt;<br>                &#123;<br>                    Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<br>                &#125;;<span class="hljs-comment">//lambda 表达式 继续进化，去掉 new Noreturn() 因为委托本来就可以直接简写成 Noreturn method4= Study;</span><br><br>            method4.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>            Noreturn method5 = (name) =&gt; Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<br>            <span class="hljs-comment">//lambda 表达式 继续进化，去掉 &#123;&#125;;（大括号） 前提条件是：方法体只有一行</span><br><br>            method5.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>            <span class="hljs-comment">//最终</span><br>            Noreturn method10 = (name) =&gt; Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<span class="hljs-comment">//lambda示例 委托实例化</span><br><br>            method10.Invoke(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 委托+lambda表达式练习</span><br><br>            Noreturn_Int noreturn_Int = (x, y) =&gt; &#123; <span class="hljs-keyword">return</span> x + y; &#125;;<span class="hljs-comment">//这是依据上面推到的方法写的</span><br><br>            noreturn_Int.Invoke(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br><br>            Noreturn_Int noreturn_Int1 = (x, y) =&gt; x + y;<span class="hljs-comment">//这是在上一行的基础上省略的写法，如果方法体只有一行可以 去掉return 还有大括号。</span><br><br>            noreturn_Int1.Invoke(<span class="hljs-number">11</span>, <span class="hljs-number">22</span>);<br><br>            Noreturn_void noreturn_Void = () =&gt; &#123; &#125;;<span class="hljs-comment">//实例化该委托，这个委托没有返回值，没有参数</span><br><br>            noreturn_Void.Invoke();<br><br>            Noreturn_string noreturn_String = () =&gt; <span class="hljs-string">&quot;1&quot;</span>;<span class="hljs-comment">//实例化委托，无参数，有返回值</span><br><br>            noreturn_String.Invoke();<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>            <span class="hljs-meta">#<span class="hljs-keyword">region</span> 泛型委托，有这个泛型委托，也就是不用再特意的去声明一个委托了</span><br><br>            <span class="hljs-comment">//无返回值的用Action</span><br><br>            Action act1 = () =&gt; &#123; &#125;;<br><br>            Action&lt;<span class="hljs-built_in">string</span>&gt; act2 = s =&gt; &#123; &#125;;<br>            <span class="hljs-comment">//最多16个参数</span><br>            Action&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">string</span>, Double, <span class="hljs-built_in">decimal</span>, <span class="hljs-built_in">float</span>, Action&gt; act3 = (a, s, d, f, g, h) =&gt; &#123; &#125;;<br><br>            <span class="hljs-comment">//有返回值的用Func</span><br>            <span class="hljs-comment">//最多16个参数</span><br>            <span class="hljs-comment">//参数的最后一位就是返回值类型</span><br>            Func&lt;<span class="hljs-built_in">string</span>&gt; fun = () =&gt; <span class="hljs-string">&quot;123&quot;</span>;<br><br>            Func&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">int</span>, Double, Func&lt;<span class="hljs-built_in">decimal</span>&gt;, Action, <span class="hljs-built_in">decimal</span>&gt; fun1 = (a, s, d, f, g) =&gt; Convert.ToDecimal(<span class="hljs-number">12.22</span>);<br><br>            <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> linq 结合 lambda表达</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">LinqShow</span>()</span><br>        &#123;<br>            List&lt;<span class="hljs-built_in">int</span>&gt; intlist = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">int</span>&gt;();<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; i++)<br>            &#123;<br>                intlist.Add(i);<br>            &#125;<br><br>            <span class="hljs-comment">//找出大于55的</span><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">int</span> item <span class="hljs-keyword">in</span> intlist.Where&lt;<span class="hljs-built_in">int</span>&gt;(num =&gt; num &gt; <span class="hljs-number">55</span>))<br>            &#123;<br>                Console.WriteLine(item);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 学习，很重要</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;name&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Study</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;&#123;0&#125;学习不停止&quot;</span>, name);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><p>Object Oriented Programming</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p><a href="https://www.cnblogs.com/wl-blog/p/10361894.html">参考资料：Dreamw</a></p><h4 id="释义"><a href="#释义" class="headerlink" title="释义"></a>释义</h4><ol><li><p>通过继承实现的不同对象调用相同的方法，表现出不同的行为，称之为<strong>多态</strong>。<em>（简单明了）</em></p></li><li><p>允许将子类类型的指针赋值给父类类型的指针。也就是同一操作作用于不同的对象，可以有不同的解释，产生不同的执行结果。在运行时，可以通过指向基类的指针，来调用实现派生类中的方法。</p></li></ol><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>符合两种原则</p><ol><li>里式替换原则（Liskov Substitution Principle）：派生类（子类）能够被基类（父类）使用。<em>通过父类<code>new</code> 子类。</em>一致的类型，多个子类型可以被当成父类型来处理</li><li>开放封闭原则（Open Closed Principle）：开放扩展，关闭修改。<em>扩展的同时不动原有的逻辑</em>。消除类型之间的耦合性</li></ol><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><p>​        <strong>多态性</strong>意味着有多重形式。在面向对象编程范式中，多态性往往表现为 “<strong>一个接口，多个功能</strong>“。</p><p>多态性可以是静态的或动态的。在<strong>静态多态性</strong>中，函数的响应是在编译时发生的。在<strong>动态多态性</strong>中，函数的响应是在运行时发生的。</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Base</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows10 Install Linux</title>
    <link href="/2021/10/30/Windows10-Install-Linux/"/>
    <url>/2021/10/30/Windows10-Install-Linux/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="window10-Install-Linux"><a href="#window10-Install-Linux" class="headerlink" title="window10 Install Linux"></a>window10 Install Linux</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="启动开发人员模式"><a href="#启动开发人员模式" class="headerlink" title="启动开发人员模式"></a>启动开发人员模式</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724160839938.png" alt="image-20210724160839938"></p><h3 id="打开Linux子系统"><a href="#打开Linux子系统" class="headerlink" title="打开Linux子系统"></a>打开Linux子系统</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724161025846.png" alt="image-20210724161025846"></p><h3 id="Micrsoft-Store"><a href="#Micrsoft-Store" class="headerlink" title="Micrsoft Store"></a>Micrsoft Store</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724160633196.png" alt="image-20210724160633196"></p><p>我自己使用的是 <code>Ubuntu 18.04 LTS</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724161700603.png" alt="image-20210724161700603"></p><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724163204041.png" alt="image-20210724163204041"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724163230357.png" alt="image-20210724163230357"></p><p>设置好用户名和密码之后</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724163311586.png" alt="image-20210724163311586"></p><h2 id="设置源"><a href="#设置源" class="headerlink" title="设置源"></a>设置源</h2><h3 id="备份-source-list"><a href="#备份-source-list" class="headerlink" title="备份 source.list"></a>备份 source.list</h3><p><code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724163701348.png" alt="image-20210724163701348"></p><p>本地路径：</p><p><code>C:\Users\Harris\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\LocalState\rootfs\etc\apt</code></p><p>阿里云源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><p>清华源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse<br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">预发布软件源，不建议启用</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><br></code></pre></td></tr></table></figure><h3 id="本文使用阿里云源"><a href="#本文使用阿里云源" class="headerlink" title="本文使用阿里云源"></a>本文使用阿里云源</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724164013532.png" alt="image-20210724164013532"></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>注：update是更新软件列表，upgrade是更新软件。</p><h3 id="更新软件列表"><a href="#更新软件列表" class="headerlink" title="更新软件列表"></a>更新软件列表</h3><p><code>sudo apt-get update</code></p><p>这个命令，会访问源列表里的每个网址，并读取软件列表，然后保存在本地电脑。我们在新立得软件包管理器里看到的软件列表，都是通过update命令更新的。</p><h3 id="更新软件"><a href="#更新软件" class="headerlink" title="更新软件"></a>更新软件</h3><p><code>sudo apt-get upgrade</code></p><p>这个命令，会把本地已安装的软件，与刚下载的软件列表里对应软件进行对比，如果发现已安装的软件版本太低，就会提示你更新。</p><h3 id="安装-xorg"><a href="#安装-xorg" class="headerlink" title="安装 xorg"></a>安装 xorg</h3><p><code>sudo apt-get install xorg</code></p><h3 id="安装xfce4"><a href="#安装xfce4" class="headerlink" title="安装xfce4"></a>安装xfce4</h3><p><code>sudo apt-get install xfce4</code></p><h3 id="安装xrdp"><a href="#安装xrdp" class="headerlink" title="安装xrdp"></a>安装xrdp</h3><p><code>sudo apt-get install xrdp</code></p><h3 id="配置xrdp"><a href="#配置xrdp" class="headerlink" title="配置xrdp"></a>配置xrdp</h3><p><code>sudo sed -i &#39;s/port=3389/port=3390/g&#39; /etc/xrdp/xrdp.ini</code></p><h3 id="向xsession中写入xfce4-session"><a href="#向xsession中写入xfce4-session" class="headerlink" title="向xsession中写入xfce4-session"></a>向xsession中写入xfce4-session</h3><p><code>sudo echo xfce4-session &gt;~/.xsession</code></p><h3 id="重启xrdp服务"><a href="#重启xrdp服务" class="headerlink" title="重启xrdp服务"></a>重启xrdp服务</h3><p><code>sudo service xrdp restart</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724170258123.png" alt="image-20210724170258123"></p><p>上述命令执行完毕之后，通过本地IP+端口 ，例如: <code>192.168.31.64:3390</code> 去 <code>mstsc</code>  远程服务器，即可远程打开此<code>Ubuntu</code>。</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="卸载之前的Docker"><a href="#卸载之前的Docker" class="headerlink" title="卸载之前的Docker"></a>卸载之前的Docker</h3><p><code>sudo apt-get remove docker docker-engine docker.io</code></p><p>如果想要卸载干净：</p><ul><li><p>删除某软件,及其安装时自动安装的所有包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get autoremove docker docker-ce docker-engine  docker.io  containerd runc<br></code></pre></td></tr></table></figure></li><li><p>删除docker其他没有没有卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">dpkg -l | grep docker<br><br>dpkg -l |grep ^rc|awk &#x27;&#123;print $2&#125;&#x27; |sudo xargs dpkg -P # 删除无用的相关的配置文件<br></code></pre></td></tr></table></figure></li></ul><h3 id="更新系统软件"><a href="#更新系统软件" class="headerlink" title="更新系统软件"></a>更新系统软件</h3><p><code>sudo apt-get update</code></p><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install \<br>    apt-transport-https \<br>    ca-certificates \<br>    curl \<br>    software-properties-common<br></code></pre></td></tr></table></figure><h3 id="添加官方密钥"><a href="#添加官方密钥" class="headerlink" title="添加官方密钥"></a>添加官方密钥</h3><p><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></p><p>显示OK,表示添加成功.</p><h3 id="添加仓库"><a href="#添加仓库" class="headerlink" title="添加仓库"></a>添加仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo add-apt-repository \<br>   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \<br><span class="hljs-meta prompt_">   $</span><span class="language-bash">(lsb_release -cs) \</span><br><span class="language-bash">   stable<span class="hljs-string">&quot;</span></span><br></code></pre></td></tr></table></figure><h3 id="再次更新软件"><a href="#再次更新软件" class="headerlink" title="再次更新软件"></a>再次更新软件</h3><p><code>sudo apt-get update</code></p><p>经实践，这一步不能够省略，我们需要再次把软件更新到最新，否则下一步有可能会报错。</p><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p>如果想指定安装某一版本，可使用 sudo apt-get install docker-ce=<VERSION>  命令，把<VERSION>替换为具体版本即可。</p><p>以下命令没有指定版本，默认就会安装最新版 </p><p><code>sudo apt-get install docker-ce</code></p><h3 id="查看docker版本"><a href="#查看docker版本" class="headerlink" title="查看docker版本"></a>查看docker版本</h3><p><code>docker -v</code></p><p>显示“Docker version 20.10.7, build f0df350”字样，表示安装成功。</p><h3 id="docker-compose安装"><a href="#docker-compose安装" class="headerlink" title="docker-compose安装"></a>docker-compose安装</h3><h4 id="下载docker-compose"><a href="#下载docker-compose" class="headerlink" title="下载docker-compose"></a>下载docker-compose</h4><p><code>sudo curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-</code>uname -s<code>-</code>uname -m<code> -o /usr/local/bin/docker-compose</code></p><h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><p><code>sudo chmod +x /usr/local/bin/docker-compose</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724175726176.png" alt="image-20210724175726176"></p><h4 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h4><p><code>docker-compose --version</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724175854252.png" alt="image-20210724175854252"></p><h3 id="docker-machine安装"><a href="#docker-machine安装" class="headerlink" title="docker-machine安装"></a>docker-machine安装</h3><h4 id="安装virtualBox"><a href="#安装virtualBox" class="headerlink" title="安装virtualBox"></a>安装virtualBox</h4><p><code>sudo apt install virtualbox</code></p><h4 id="下载并安装docker-machine"><a href="#下载并安装docker-machine" class="headerlink" title="下载并安装docker-machine"></a>下载并安装docker-machine</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/docker/m</span>achine<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v0.13.0/</span>docker-machine-`uname -s`-`uname -m` &gt;<span class="hljs-regexp">/tmp/</span>docker-machine &amp;&amp;<br>chmod +x <span class="hljs-regexp">/tmp/</span>docker-machine &amp;&amp;<br>sudo cp <span class="hljs-regexp">/tmp/</span>docker-machine <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-machine<br></code></pre></td></tr></table></figure><h4 id="查看版本信息-1"><a href="#查看版本信息-1" class="headerlink" title="查看版本信息"></a>查看版本信息</h4><p><code>docker-machine version</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210724180727779.png" alt="image-20210724180727779"></p><h4 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h4><ul><li>启动服务：<code>sudo service docker start</code></li></ul><ul><li>重启服务：<code>sudo service docker restart</code></li></ul><ul><li><p>免sudo使用docker命令，添加一个docker group：<code>sudo groupadd docker</code></p></li><li><p>将当前用户加入group组，然后退出并重新登录就可以了啦：<code>sudo gpasswd -a $&#123;USER&#125; docker</code></p></li><li><p>启动docker:<code>sudo service docker start</code></p></li><li><p>运行一个官方提供的hello-world镜像，并创建容器体验下：<code>sudo docker run hello-world</code></p></li></ul><h3 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mkdir -p /etc/docker<br>sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;<br>&#123;<br>  &quot;registry-mirrors&quot;: [&quot;https://xxxxxx.mirror.aliyuncs.com&quot;] <br><span class="hljs-meta prompt_">  # </span><span class="language-bash">这个地方上各自的阿里云查看</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</span><br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">Error </span>response from daemon: OCI runtime create failed: container_linux.go:380: starting container process caused: process_linux.go:722: waiting for init preliminary setup caused: EOF: unknown.<br></code></pre></td></tr></table></figure><ul><li><p>产生这个问题的原因</p><p>目前我使用的Ubuntu的版本是18.04，我安装的是docker最新的版本，导致docker的版本和linux的内核版本不兼容</p></li><li><p>卸载当前的Docker</p><p><code>sudo apt-get autoremove docker-ce</code></p></li><li><p>显示当前Ubuntu对应的可以使用的docker-ce可以使用的版本 </p><p><code>sudo apt-cache madison docker-ce</code></p></li><li><p>在可以使用的版本中选择一个较为低的版本安装 </p><p><code>sudo apt-get install docker-ce=17.12.1~ce-0~ubuntu</code></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Linux</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7</title>
    <link href="/2021/10/30/CentOS-7/"/>
    <url>/2021/10/30/CentOS-7/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CentOS7"><a href="#CentOS7" class="headerlink" title="CentOS7"></a>CentOS7</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222017245.png" alt="image-20210813222017245"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222157401.png" alt="image-20210813222157401"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222256945.png" alt="image-20210813222256945"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222533941.png" alt="image-20210813222533941"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222637764.png" alt="image-20210813222637764"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222707926.png" alt="image-20210813222707926"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222736374.png" alt="image-20210813222736374"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222759917.png" alt="image-20210813222759917"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222820140.png" alt="image-20210813222820140"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222948110.png" alt="image-20210813222948110"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813222921036.png" alt="image-20210813222921036"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813223019158.png" alt="image-20210813223019158"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813223036473.png" alt="image-20210813223036473"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813223055113.png" alt="image-20210813223055113"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813223122945.png" alt="image-20210813223122945"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813223141978.png" alt="image-20210813223141978"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224259862.png" alt="image-20210813224259862"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224432142.png" alt="image-20210813224432142"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224506500.png" alt="image-20210813224506500"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224537039.png" alt="image-20210813224537039"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224615048.png" alt="image-20210813224615048"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224632445.png" alt="image-20210813224632445"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224713441.png" alt="image-20210813224713441"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224757244.png" alt="image-20210813224757244"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224815295.png"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224845477.png" alt="image-20210813224845477"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224907724.png" alt="image-20210813224907724"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224930022.png" alt="image-20210813224930022"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813224948885.png" alt="image-20210813224948885"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813225019577.png" alt="image-20210813225019577"></p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210813225122432.png" alt="image-20210813225122432" style="zoom:80%;" /><h2 id="XShell-连接"><a href="#XShell-连接" class="headerlink" title="XShell 连接"></a>XShell 连接</h2><h3 id="先在虚拟机中查看IP"><a href="#先在虚拟机中查看IP" class="headerlink" title="先在虚拟机中查看IP"></a>先在虚拟机中查看IP</h3><p><code>ifconfig</code></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814151123899.png" alt="image-20210814151123899"></p><h3 id="xshell-新建连接"><a href="#xshell-新建连接" class="headerlink" title="xshell 新建连接"></a>xshell 新建连接</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814151253098.png" alt="image-20210814151253098"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814151518393.png" alt="image-20210814151518393"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814151543205.png" alt="image-20210814151543205"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814151612377.png" alt="image-20210814151612377"></p><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><p><code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>灵活配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">TYPE=&quot;Ethernet&quot;   # 网络类型为以太网<br>BOOTPROTO=&quot;static&quot;  # 手动分配ip<br>NAME=&quot;ens33&quot;  # 网卡设备名，设备名一定要跟文件名一致<br>DEVICE=&quot;ens33&quot;  # 网卡设备名，设备名一定要跟文件名一致<br>ONBOOT=&quot;yes&quot;  # 该网卡是否随网络服务启动<br>IPADDR=&quot;192.168.220.101&quot;  # 该网卡ip地址就是你要配置的固定IP，如果你要用xshell等工具连接，220这个网段最好和你自己的电脑网段一致，否则有可能用xshell连接失败<br>GATEWAY=&quot;192.168.220.2&quot;   # 网关<br>NETMASK=&quot;255.255.255.0&quot;   # 子网掩码<br>DNS1=&quot;8.8.8.8&quot;    # DNS，8.8.8.8为Google提供的免费DNS服务器的IP地址<br></code></pre></td></tr></table></figure><h3 id="配置网络工作"><a href="#配置网络工作" class="headerlink" title="配置网络工作"></a>配置网络工作</h3><p><code>vi /etc/sysconfig/network</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">NETWORKING=yes # 网络是否工作，此处一定不能为no<br></code></pre></td></tr></table></figure><h3 id="配置公共DNS服务-可选"><a href="#配置公共DNS服务-可选" class="headerlink" title="配置公共DNS服务(可选)"></a>配置公共DNS服务(可选)</h3><p><code>vi /etc/resolv.conf</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nameserver 8.8.8.8<br></code></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld # 临时关闭防火墙<br>systemctl disable firewalld # 禁止开机启动<br></code></pre></td></tr></table></figure><h3 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">service network restart<br></code></pre></td></tr></table></figure><h3 id="重置root-密码"><a href="#重置root-密码" class="headerlink" title="重置root 密码"></a>重置root 密码</h3><p>安装完CentOs7之后有的时候会获取不到root的权限，需要su root ，这个时候忘记密码，需要重置密码，需要以下步骤。</p><h4 id="进入编辑界面"><a href="#进入编辑界面" class="headerlink" title="进入编辑界面"></a>进入编辑界面</h4><p>重启CentOs,到如下界面，快速按 e 键 进入编辑界面</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210731215547837.png" alt="image-20210731215547837"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210731215723728.png" alt="image-20210731215723728"></p><h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><p>按方向键下键<code>↓</code>，找到设置语言的地方，如<code>LANG=en_US.UTF-8</code>，在后面追加<code>rw single init=/bin/bash</code>,然后按<code>ctrl+x</code>重启系统</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210731215809612.png" alt="image-20210731215809612"></p><h4 id="进入bash界面"><a href="#进入bash界面" class="headerlink" title="进入bash界面"></a>进入bash界面</h4><p>进入bash界面后，可以输入<code>passwd</code>命令重新设置root密码</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210731215953541.png" alt="image-20210731215953541"></p><h4 id="剩下操作"><a href="#剩下操作" class="headerlink" title="剩下操作"></a>剩下操作</h4><ul><li>如果开启了SELinux，执行命令<code>touch /.autorelabel</code>命令</li><li>输入<code>exec /sbin/init</code>命令重启系统</li></ul><h2 id="安裝FTP"><a href="#安裝FTP" class="headerlink" title="安裝FTP"></a>安裝FTP</h2><h3 id="查看是否安装ftp"><a href="#查看是否安装ftp" class="headerlink" title="查看是否安装ftp"></a>查看是否安装ftp</h3><p><code>rpm -qa | grep vsftpd</code></p><h3 id="如果现实ftp，则进行下面命令卸载"><a href="#如果现实ftp，则进行下面命令卸载" class="headerlink" title="如果现实ftp，则进行下面命令卸载"></a>如果现实ftp，则进行下面命令卸载</h3><p><code>rpm -e  vsftpd-*</code></p><h3 id="使用以下命令安装Ftp-在线"><a href="#使用以下命令安装Ftp-在线" class="headerlink" title="使用以下命令安装Ftp(在线)"></a>使用以下命令安装Ftp(在线)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装</span><br>yum install -y vsftpd<br></code></pre></td></tr></table></figure><h3 id="配置FTP"><a href="#配置FTP" class="headerlink" title="配置FTP"></a>配置FTP</h3><p>默认安装配置文件流路径为：/etc/vsftpd/vsftpd.conf</p><p>然后我们打开该配置文件 vi vsftpd.conf</p><p>修改内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">第一处 12行左右</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Allow anonymous FTP? (Beware - allowed by default <span class="hljs-keyword">if</span> you comment this out).--是否允许匿名访问</span><br>anonymous_enable=NO<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第二处  33行左右</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Uncomment this <span class="hljs-keyword">if</span> you want the anonymous FTP user to be able to create</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">new directories.  -- 匿名用户登录否创建新目录。</span><br>anon_mkdir_write_enable=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第三处  48行左右</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">If you want, you can arrange <span class="hljs-keyword">for</span> uploaded anonymous files to be owned by</span><br>chown_uploads=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第四处 修改72行   异步中断启用？？</span><br>async_abor_enable=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第五处 修改83行</span><br>ascii_upload_enable=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第六处 修改84行</span><br>ascii_download_enable=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第七处 修改87行</span><br>ftpd_banner=Welcome to blah FTP service.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第八处 修改101行   --是否将所有用户限制在主目录,YES为启用 NO禁用.</span><br>hroot_local_user=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后再文件的最后添加如下配置：</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用本地时间</span><br>use_localtime=YES<br><span class="hljs-meta prompt_"># </span><span class="language-bash">监听端口</span><br>listen_port=21<br><span class="hljs-meta prompt_"># </span><span class="language-bash">空闲回话超时时间 单位秒</span><br>idle_session_timeout=300<br><span class="hljs-meta prompt_"># </span><span class="language-bash">来宾启用</span> <br>guest_enable=YES<br><span class="hljs-meta prompt_"># </span><span class="language-bash">来宾用户名称</span><br>guest_username=vsftpd<br><span class="hljs-meta prompt_"># </span><span class="language-bash">用户配置文件</span><br>user_config_dir=/etc/vsftpd/uconf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">连接超时时间  单位秒</span><br>data_connection_timeout=100<br><span class="hljs-meta prompt_"># </span><span class="language-bash">？？？</span><br>virtual_use_local_privs=YES<br><span class="hljs-meta prompt_"># </span><span class="language-bash">pasv模式下指定端口范围 最小和最大</span><br>pasv_min_port=40000<br>pasv_max_port=40010<br><span class="hljs-meta prompt_"># </span><span class="language-bash">接受超时 次数？</span><br>accept_timeout=5<br><span class="hljs-meta prompt_"># </span><span class="language-bash">连接超时 单位秒</span><br>connect_timeout=100<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许写入根目录</span><br>allow_writeable_chroot=YES<br></code></pre></td></tr></table></figure><p>先按照上述配置</p><p>配置完成品如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Example config file /etc/vsftpd/vsftpd.conf</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># The default compiled in settings are fairly paranoid. This sample file</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">loosens things up a bit, to make the ftp daemon more usable.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Please see vsftpd.conf.5 <span class="hljs-keyword">for</span> all compiled <span class="hljs-keyword">in</span> defaults.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Please <span class="hljs-built_in">read</span> the vsftpd.conf.5 manual page to get a full idea of vsftpd<span class="hljs-string">&#x27;s</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">capabilities.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># Allow anonymous FTP? (Beware - allowed by default if you comment this out).</span></span><br>anonymous_enable=NO<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># Uncomment this to allow local users to log in.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">When SELinux is enforcing check for SE bool ftp_home_dir</span></span><br>local_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># Uncomment this to enable any form of FTP write command.</span></span><br>write_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># Default umask for local users is 077. You may wish to change this to 022,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">if your users expect that (022 is used by most other ftpd&#x27;</span>s)</span><br>local_umask=022<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Uncomment this to allow the anonymous FTP user to upload files. This only</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">has an effect <span class="hljs-keyword">if</span> the above global write <span class="hljs-built_in">enable</span> is activated. Also, you will</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">obviously need to create a directory writable by the FTP user.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">When SELinux is enforcing check <span class="hljs-keyword">for</span> SE bool allow_ftpd_anon_write, allow_ftpd_full_access</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">anon_upload_enable=YES</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Uncomment this if you want the anonymous FTP user to be able to create</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">new directories.</span><br>anon_mkdir_write_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Activate directory messages - messages given to remote users when they</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">go into a certain directory.</span><br>dirmessage_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Activate logging of uploads/downloads.</span></span><br>xferlog_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span><br>connect_from_port_20=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># If you want, you can arrange for uploaded anonymous files to be owned by</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">a different user. Note! Using <span class="hljs-string">&quot;root&quot;</span> <span class="hljs-keyword">for</span> uploaded files is not</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">recommended!</span><br>chown_uploads=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash">chown_username=whoever</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You may override where the log file goes if you like. The default is shown</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">below.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">xferlog_file=/var/log/xferlog</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># If you want, you can have your log file in standard ftpd xferlog format.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Note that the default <span class="hljs-built_in">log</span> file location is /var/log/xferlog <span class="hljs-keyword">in</span> this <span class="hljs-keyword">case</span>.</span><br>xferlog_std_format=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You may change the default value for timing out an idle session.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">idle_session_timeout=600</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You may change the default value for timing out a data connection.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">data_connection_timeout=120</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># It is recommended that you define on your system a unique user which the</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ftp server can use as a totally isolated and unprivileged user.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">nopriv_user=ftpsecure</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Enable this and the server will recognise asynchronous ABOR requests. Not</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">recommended <span class="hljs-keyword">for</span> security (the code is non-trivial). Not enabling it,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">however, may confuse older FTP clients.</span><br>async_abor_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># By default the server will pretend to allow ASCII mode but in fact ignore</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">the request. Turn on the below options to have the server actually <span class="hljs-keyword">do</span> ASCII</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">mangling on files when <span class="hljs-keyword">in</span> ASCII mode. The vsftpd.conf(5) man page explains</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">the behaviour when these options are disabled.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Beware that on some FTP servers, ASCII support allows a denial of service</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">attack (DoS) via the <span class="hljs-built_in">command</span> <span class="hljs-string">&quot;SIZE /big/file&quot;</span> <span class="hljs-keyword">in</span> ASCII mode. vsftpd</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">predicted this attack and has always been safe, reporting the size of the</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">raw file.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ASCII mangling is a horrible feature of the protocol.</span><br>ascii_upload_enable=YES<br>ascii_download_enable=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You may fully customise the login banner string:</span></span><br>ftpd_banner=Welcome to blah FTP service.<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">useful <span class="hljs-keyword">for</span> combatting certain DoS attacks.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">deny_email_enable=YES</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">(default follows)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">banned_email_file=/etc/vsftpd/banned_emails</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You may specify an explicit list of local users to chroot() to their home</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">directory. If chroot_local_user is YES, <span class="hljs-keyword">then</span> this list becomes a list of</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">users</span> to NOT <span class="hljs-built_in">chroot</span>().</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">(Warning! <span class="hljs-built_in">chroot</span><span class="hljs-string">&#x27;ing can be very dangerous. If using chroot, make sure that</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">the user does not have write access to the top level directory within the</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">chroot)</span></span><br>chroot_local_user=YES<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">chroot_list_enable=YES</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">(default follows)</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">chroot_list_file=/etc/vsftpd/chroot_list</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">default to avoid remote users being able to cause excessive I/O on large</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">ls_recurse_enable=YES</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">listens on IPv4 sockets. This directive cannot be used in conjunction</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">with the listen_ipv6 directive.</span></span><br>listen=NO<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"></span></span><br><span class="hljs-string"><span class="language-bash"># This directive enables listening on IPv6 sockets. By default, listening</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">sockets. If you want that (perhaps because you want to listen on specific</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">addresses) then you must run two copies of vsftpd with two configuration</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">files.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Make sure, that one of the listen options is commented !!</span></span><br>listen_ipv6=YES<br><br>pam_service_name=vsftpd<br>userlist_enable=YES<br>tcp_wrappers=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">使用本地时间</span></span><br>use_localtime=YES<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">监听端口</span></span><br>listen_port=21<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">空闲回话超时时间 单位秒</span></span><br>idle_session_timeout=300<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">来宾启用</span></span> <br>guest_enable=YES<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">来宾用户名称</span></span><br>guest_username=vsftpd<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">用户配置文件</span></span><br>user_config_dir=/etc/vsftpd/uconf<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">连接超时时间  单位秒</span></span><br>data_connection_timeout=100<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">？？？</span></span><br>virtual_use_local_privs=YES<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">pasv模式下指定端口范围 最小和最大</span></span><br>pasv_min_port=40000<br>pasv_max_port=40010<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">接受超时 次数？</span></span><br>accept_timeout=5<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">连接超时 单位秒</span></span><br>connect_timeout=100<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">允许写入根目录</span></span><br>allow_writeable_chroot=YES<br></code></pre></td></tr></table></figure><h3 id="建立用户文件并生成-并-生成用户数据文件"><a href="#建立用户文件并生成-并-生成用户数据文件" class="headerlink" title="建立用户文件并生成 并 生成用户数据文件"></a>建立用户文件并生成 并 生成用户数据文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建编辑用户文件</span><br>vim /etc/vsftpd/ftpuser<br><span class="hljs-meta prompt_">#</span><span class="language-bash">第一行为用户名，第二行为密码。不能使用root作为用户名</span> <br><br>houshuai<br>houshuai<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">db_load -T -t hash -f /etc/vsftpd/ftpuser /etc/vsftpd/ftpuser.db<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设定PAM验证文件，并指定对虚拟用户数据库文件进行读取</span><br><br>chmod 600 /etc/vsftpd/ftpuser.db <br></code></pre></td></tr></table></figure><h3 id="修改-etc-pam-d-vsftpd-文件"><a href="#修改-etc-pam-d-vsftpd-文件" class="headerlink" title="修改 /etc/pam.d/vsftpd 文件"></a>修改 /etc/pam.d/vsftpd 文件</h3><p>这里没有整明白是啥事，没有跟风，后续有机会再研究</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">修改前先备份</span> <br><br>cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak<br><br>vi /etc/pam.d/vsftpd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">先将配置文件中原有的 auth 及 account 的所有配置行均注释掉</span><br>auth sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/ftpuser<br>account sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/ftpuser<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">如果系统为32位，上面改为lib</span><br></code></pre></td></tr></table></figure><h3 id="新建系统用户vsftpd，用户目录为-home-vsftpd"><a href="#新建系统用户vsftpd，用户目录为-home-vsftpd" class="headerlink" title="新建系统用户vsftpd，用户目录为/home/vsftpd"></a>新建系统用户vsftpd，用户目录为/home/vsftpd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">用户登录终端设为/bin/false(即：使之不能登录系统)</span><br>useradd vsftpd -d /home/vsftpd -s /bin/false<br>chown -R vsftpd:vsftpd /home/vsftpd<br></code></pre></td></tr></table></figure><h3 id="建立虚拟用户个人配置文件"><a href="#建立虚拟用户个人配置文件" class="headerlink" title="建立虚拟用户个人配置文件"></a>建立虚拟用户个人配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir /etc/vsftpd/uconf<br>cd /etc/vsftpd/uconf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">这里建立虚拟用户wanghao配置文件</span><br>touch houshuai<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">编辑wanghao用户配置文件，内容如下，其他用户类似</span><br>vi houshuai<br><br>local_root=/home/vsftpd/houshuai/<br>write_enable=YES<br>anon_world_readable_only=NO<br>anon_upload_enable=YES<br>anon_mkdir_write_enable=YES<br>anon_other_write_enable=YES<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">建立wanghao用户根目录</span><br>mkdir -p /home/vsftpd/houshuai/<br></code></pre></td></tr></table></figure><p>然后我们在/home/vsftpd/houshuai 下面创建一个index.html 测试文件</p><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">IPtables 的设置方式：</span><br>vi /etc/sysconfig/iptables<br><span class="hljs-meta prompt_">#</span><span class="language-bash">编辑iptables文件，添加如下内容，开启21端口</span><br>-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT<br>-A INPUT -m state --state NEW -m tcp -p tcp --dport 40000:40010 -j ACCEPT<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">firewall 的设置方式：</span><br>firewall-cmd --zone=public --add-service=ftp --permanent<br><br>firewall-cmd --zone=public --add-port=21/tcp --permanent<br>firewall-cmd --zone=public --add-port=40000-40010/tcp --permanent<br></code></pre></td></tr></table></figure><h3 id="启动ftp服务器"><a href="#启动ftp服务器" class="headerlink" title="启动ftp服务器"></a>启动ftp服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">设置开机启动</span><br>systemctl enable vsftpd.service<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动</span><br>systemctl start vsftpd.service<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">停止</span><br>systemctl stop vsftpd.service<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启</span><br>systemctl restart vsftpd.service<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看状态</span><br>systemctl status vsftpd.service另一种service vsftpd restartservice vsftpd status<br></code></pre></td></tr></table></figure><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814184803023.png" alt="image-20210814184803023"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814190436082.png" alt="image-20210814190436082"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814190456161.png" alt="image-20210814190456161"></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol><li><p>此间会遇到一些问题，诸如：503 等等，就是防火墙关了就行 <code>systemctl stop firewalld</code>，具体为什么，防火墙端口的活。</p></li><li><p><code>553 Could not create file</code> 问题，网友们说的有点纷杂，整理一下</p><ol><li><p>SeLinux 需要关闭 <code>vim /etc/selinux/config</code> 设置 <code>SELINUX=disabled</code>   设置完还是没有解决，可能是没有重启的原因。</p></li><li><p>查了一下，应该是共享的文件夹权限的问题，手动设置，有点懒</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814190147729.png" alt="image-20210814190147729"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814190230363.png" alt="image-20210814190230363"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20210814190345335.png" alt="image-20210814190345335"></p></li></ol></li></ol><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centOs7 ~]# uname -a<br>Linux centOs7 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux<br>[root@centOs7 ~]# yum update<br>已加载插件：fastestmirror, langpacks<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.bfsu.edu.cn<br> * extras: mirrors.huaweicloud.com<br> * updates: mirrors.huaweicloud.com<br>base                                                     | 3.6 kB     00:00     <br>extras                                                   | 2.9 kB     00:00     <br>updates                                                  | 2.9 kB     00:00     <br>(1/4): base/7/x86_64/group_gz                              | 153 kB   00:00     <br>(2/4): extras/7/x86_64/primary_db                          | 242 kB   00:00     <br>(3/4): updates/7/x86_64/primary_db                         | 9.5 MB   00:00     <br>(4/4): base/7/x86_64/primary_db                            | 6.1 MB   00:02     <br>正在解决依赖关系<br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span><br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 NetworkManager.x86_64.1.1.18.8-1.el7 将被 升级</span><br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 NetworkManager.x86_64.1.1.18.8-2.el7_9 将被 更新</span><br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 NetworkManager-adsl.x86_64.1.1.18.8-1.el7 将被 升级</span><br>...<br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 zlib.x86_64.0.1.2.7-19.el7_9 将被 更新</span><br>updates/7/x86_64/filelists_db                            | 5.5 MB     00:00     <br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">解决依赖关系完成</span><br><br>依赖关系解决<br><br>================================================================================<br> Package                          架构   版本                     源       大小<br>================================================================================<br>正在安装:<br> kernel                           x86_64 3.10.0-1160.36.2.el7     updates  50 M<br>正在更新:<br> NetworkManager                   x86_64 1:1.18.8-2.el7_9         updates 1.9 M<br> NetworkManager-adsl              x86_64 1:1.18.8-2.el7_9         updates 163 k<br> NetworkManager-glib              x86_64 1:1.18.8-2.el7_9         updates 1.5 M<br> NetworkManager-libnm             x86_64 1:1.18.8-2.el7_9         updates 1.7 M<br> ...<br> xorg-x11-server-common           x86_64 1.20.4-16.el7_9          updates  56 k<br> zlib                             x86_64 1.2.7-19.el7_9           updates  90 k<br><br>事务概要<br>================================================================================<br>安装    1 软件包<br>升级  236 软件包<br><br>总下载量：487 M<br>Is this ok [y/d/N]: y<br>Downloading packages:<br>No Presto metadata available for updates<br>警告：/var/cache/yum/x86_64/7/updates/packages/NetworkManager-adsl-1.18.8-2.el7_9.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID f4a80eb5: NOKEY<br>NetworkManager-adsl-1.18.8-2.el7_9.x86_64.rpm 的公钥尚未安装<br>(1/237): NetworkManager-adsl-1.18.8-2.el7_9.x86_64.rpm     | 163 kB   00:00     <br>(2/237): NetworkManager-1.18.8-2.el7_9.x86_64.rpm          | 1.9 MB   00:00     <br>(3/237): NetworkManager-libnm-1.18.8-2.el7_9.x86_64.rpm    | 1.7 MB   00:00     <br>...<br>(237/237): xorg-x11-server-Xorg-1.20.4-16.el7_9.x86_64.rpm | 1.5 MB   00:00     <br>--------------------------------------------------------------------------------<br>总计                                                21 MB/s | 487 MB  00:23     <br>从 file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 检索密钥<br>导入 GPG key 0xF4A80EB5:<br> 用户ID     : &quot;CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;&quot;<br> 指纹       : 6341 ab27 53d7 8a78 a7c2 7bb1 24c6 a8a7 f4a8 0eb5<br> 软件包     : centos-release-7-9.2009.0.el7.centos.x86_64 (@anaconda)<br> 来自       : /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7<br>是否继续？[y/N]：y<br>Running transaction check<br>Running transaction test<br>Transaction test succeeded<br>Running transaction<br>  正在更新    : 1:grub2-common-2.02-0.87.el7.centos.6.noarch              1/473 <br>  正在更新    : centos-release-7-9.2009.1.el7.centos.x86_64               2/473 <br>  ...<br>  正在更新    : iwl4965-firmware-228.61.2.24-80.el7_9.noarch            237/473 <br>  清理        : firefox-68.10.0-1.el7.centos.x86_64                     238/473 <br>  清理        : 12:dhclient-4.2.5-82.el7.centos.x86_64                  239/473 <br>  ...<br>  清理        : tzdata-2020a-1.el7.noarch                               473/473 <br>  验证中      : 7:device-mapper-event-1.02.170-6.el7_9.5.x86_64           1/473 <br>  验证中      : kernel-tools-libs-3.10.0-1160.36.2.el7.x86_64             2/473 <br>  ...<br>  验证中      : pulseaudio-module-bluetooth-10.0-5.el7.x86_64           472/473 <br>  验证中      : libsmartcols-2.23.2-65.el7.x86_64                       473/473 <br><br>已安装:<br>  kernel.x86_64 0:3.10.0-1160.36.2.el7        <br>更新完毕:<br>  NetworkManager.x86_64 1:1.18.8-2.el7_9                                        <br>  NetworkManager-adsl.x86_64 1:1.18.8-2.el7_9    <br>  ...<br>  xorg-x11-server-Xorg.x86_64 0:1.20.4-16.el7_9                                 <br>  xorg-x11-server-common.x86_64 0:1.20.4-16.el7_9                               <br>  zlib.x86_64 0:1.2.7-19.el7_9                                                  <br><br>完毕！<br>[root@centOs7 ~]# yum install -y yum-utils device-mapper-persistent-data lvm2<br>已加载插件：fastestmirror, langpacks<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.bfsu.edu.cn<br> * extras: mirrors.bfsu.edu.cn<br> * updates: mirrors.huaweicloud.com<br>软件包 yum-utils-1.1.31-54.el7_8.noarch 已安装并且是最新版本<br>软件包 device-mapper-persistent-data-0.8.5-3.el7_9.2.x86_64 已安装并且是最新版本<br>软件包 7:lvm2-2.02.187-6.el7_9.5.x86_64 已安装并且是最新版本<br>无须任何处理<br>[root@centOs7 ~]# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br>已加载插件：fastestmirror, langpacks<br>adding repo from: https://download.docker.com/linux/centos/docker-ce.repo<br>grabbing file https://download.docker.com/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo<br>repo saved to /etc/yum.repos.d/docker-ce.repo<br>[root@centOs7 ~]# yum list docker-ce --showduplicates | sort -r<br>已加载插件：fastestmirror, langpacks<br>可安装的软件包<br> * updates: mirrors.huaweicloud.com<br>Loading mirror speeds from cached hostfile<br> * extras: mirrors.huaweicloud.com<br>docker-ce.x86_64            3:20.10.7-3.el7                     docker-ce-stable<br>docker-ce.x86_64            3:20.10.6-3.el7                     docker-ce-stable<br>...<br>docker-ce.x86_64            17.03.0.ce-1.el7.centos             docker-ce-stable<br> * base: mirrors.bfsu.edu.cn<br>[root@centOs7 ~]# yum install docker-ce-17.12.1.ce<br>已加载插件：fastestmirror, langpacks<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.bfsu.edu.cn<br> * extras: mirrors.tuna.tsinghua.edu.cn<br> * updates: mirrors.tuna.tsinghua.edu.cn<br>正在解决依赖关系<br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span><br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 docker-ce.x86_64.0.17.12.1.ce-1.el7.centos 将被 安装</span><br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 container-selinux &gt;= 2.9，它被软件包 docker-ce-17.12.1.ce-1.el7.centos.x86_64 需要</span><br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span><br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 container-selinux.noarch.2.2.119.2-1.911c772.el7_8 将被 安装</span><br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">解决依赖关系完成</span><br><br>依赖关系解决<br><br>================================================================================<br> Package            架构    版本                        源                 大小<br>================================================================================<br>正在安装:<br> docker-ce          x86_64  17.12.1.ce-1.el7.centos     docker-ce-stable   30 M<br>为依赖而安装:<br> container-selinux  noarch  2:2.119.2-1.911c772.el7_8   extras             40 k<br><br>事务概要<br>================================================================================<br>安装  1 软件包 (+1 依赖软件包)<br><br>总下载量：30 M<br>安装大小：30 M<br>Is this ok [y/d/N]: y<br>Downloading packages:<br>(1/2): container-selinux-2.119.2-1.911c772.el7_8.noarch.rp |  40 kB   00:00     <br>warning: /var/cache/yum/x86_64/7/docker-ce-stable/packages/docker-ce-17.12.1.ce-1.el7.centos.x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID 621e9f35: NOKEY<br>docker-ce-17.12.1.ce-1.el7.centos.x86_64.rpm 的公钥尚未安装<br>(2/2): docker-ce-17.12.1.ce-1.el7.centos.x86_64.rpm        |  30 MB   06:51     <br>--------------------------------------------------------------------------------<br>总计                                                76 kB/s |  30 MB  06:52     <br>从 https://download.docker.com/linux/centos/gpg 检索密钥<br>导入 GPG key 0x621E9F35:<br> 用户ID     : &quot;Docker Release (CE rpm) &lt;docker@docker.com&gt;&quot;<br> 指纹       : 060a 61c5 1b55 8a7f 742b 77aa c52f eb6b 621e 9f35<br> 来自       : https://download.docker.com/linux/centos/gpg<br>是否继续？[y/N]：y<br>Running transaction check<br>Running transaction test<br>Transaction test succeeded<br>Running transaction<br>  正在安装    : 2:container-selinux-2.119.2-1.911c772.el7_8.noarch          1/2 <br>  正在安装    : docker-ce-17.12.1.ce-1.el7.centos.x86_64                    2/2 <br>  验证中      : docker-ce-17.12.1.ce-1.el7.centos.x86_64                    1/2 <br>  验证中      : 2:container-selinux-2.119.2-1.911c772.el7_8.noarch          2/2 <br><br>已安装:<br>  docker-ce.x86_64 0:17.12.1.ce-1.el7.centos                                    <br><br>作为依赖被安装:<br>  container-selinux.noarch 2:2.119.2-1.911c772.el7_8                            <br><br>完毕！<br>[root@centOs7 ~]# systemctl start docker<br>[root@centOs7 ~]# systemctl enable docker<br>Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.<br>[root@centOs7 ~]# docker version<br>Client:<br> Version:17.12.1-ce<br> API version:1.35<br> Go version:go1.9.4<br> Git commit:7390fc6<br> Built:Tue Feb 27 22:15:20 2018<br> OS/Arch:linux/amd64<br><br>Server:<br> Engine:<br>  Version:17.12.1-ce<br>  API version:1.35 (minimum version 1.12)<br>  Go version:go1.9.4<br>  Git commit:7390fc6<br>  Built:Tue Feb 27 22:17:54 2018<br>  OS/Arch:linux/amd64<br>  Experimental:false<br>[root@centOs7 ~]# docker ps<br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<br>[root@centOs7 ~]# docker run hello-world<br>Unable to find image &#x27;hello-world:latest&#x27; locally<br>latest: Pulling from library/hello-world<br>b8dfde127a29: Pull complete <br>Digest: sha256:df5f5184104426b65967e016ff2ac0bfcd44ad7899ca3bbcf8e44e4461491a9e<br>Status: Downloaded newer image for hello-world:latest<br><br>Hello from Docker!<br>This message shows that your installation appears to be working correctly.<br><br>To generate this message, Docker took the following steps:<br> 1. The Docker client contacted the Docker daemon.<br> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.<br>    (amd64)<br> 3. The Docker daemon created a new container from that image which runs the<br>    executable that produces the output you are currently reading.<br> 4. The Docker daemon streamed that output to the Docker client, which sent it<br>    to your terminal.<br><br>To try something more ambitious, you can run an Ubuntu container with:<br><span class="hljs-meta prompt_"> $ </span><span class="language-bash">docker run -it ubuntu bash</span><br><br>Share images, automate workflows, and more with a free Docker ID:<br> https://hub.docker.com/<br><br>For more examples and ideas, visit:<br> https://docs.docker.com/get-started/<br><br>[root@centOs7 ~]# docker ps<br>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<br>[root@centOs7 ~]# docker images<br>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<br>hello-world         latest              d1165f221234        4 months ago        13.3kB<br>[root@centOs7 ~]# abrt-cli list --since 1627769906<br></code></pre></td></tr></table></figure><h3 id="日志中关键命令"><a href="#日志中关键命令" class="headerlink" title="日志中关键命令"></a>日志中关键命令</h3><ul><li><p>root账户登录，查看内核版本如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# uname -a<br></code></pre></td></tr></table></figure></li><li><p>（可选）把yum包更新到最新</p><p>  <strong>(生产环境慎重！yum update会对软件包和内核升级，此处只是为了排除系统环境的影响，来自笔者的备注—2019年10月30日</strong>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# yum update<br></code></pre></td></tr></table></figure></li><li><p>安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# yum install -y yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure></li><li><p>设置yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure></li><li><p>可以查看所有仓库中所有docker版本，并选择特定版本安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# yum list docker-ce --showduplicates | sort -r<br></code></pre></td></tr></table></figure></li><li><p>安装Docker，命令：yum install docker-ce-版本号，我选的是17.12.1.ce，如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# yum install docker-ce-17.12.1.ce<br></code></pre></td></tr></table></figure></li><li><p>启动Docker，命令：systemctl start docker，然后加入开机启动，如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# systemctl start docker<br>[root@localhost ~]# systemctl enable docker<br>Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.<br></code></pre></td></tr></table></figure></li><li><p>验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@localhost ~]# docker version <br></code></pre></td></tr></table></figure></li></ul><h3 id="Docker-常用命令"><a href="#Docker-常用命令" class="headerlink" title="Docker 常用命令"></a>Docker 常用命令</h3><ul><li><p>docker ps 查看当前正在运行的容器</p></li><li><p>docker ps -a 查看所有容器的状态</p></li><li><p>docker start/stop id/name 启动/停止某个容器</p></li><li><p>docker attach id 进入某个容器(使用exit退出后容器也跟着停止运行)</p></li><li><p>docker exec -ti id 启动一个伪终端以交互式的方式进入某个容器（使用exit退出后容器不停止运行）</p></li><li><p>docker images 查看本地镜像</p></li><li><p>docker rm id/name 删除某个容器</p></li><li><p>docker rmi id/name 删除某个镜像</p></li><li><p>docker run –name test -ti ubuntu /bin/bash </p><p>复制ubuntu容器并且重命名为test且运行，然后以伪终端交互式方式进入容器，运行bash</p></li><li><p>docker build -t soar/centos:7.1 . 通过当前目录下的Dockerfile创建一个名为soar/centos:7.1的镜像</p></li><li><p>docker run -d -p 2222:22 –name test soar/centos:7.1 </p><p>以镜像soar/centos:7.1创建名为test的容器，并以后台模式运行，并做端口映射到宿主机2222端口，P参数重启容器宿主机端口会发生改变</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Linux</tag>
      
      <tag>CentOS7</tag>
      
      <tag>Xshell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My Site Map</title>
    <link href="/2021/10/29/My-Site-Map/"/>
    <url>/2021/10/29/My-Site-Map/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我告诉你"><a href="#我告诉你" class="headerlink" title="我告诉你"></a>我告诉你</h2><ol><li><a href="https://msdn.itellyou.cn/">MSDN, 我告诉你 - 做一个安静的工具站 (itellyou.cn)</a></li></ol><h2 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h2><ol><li><a href="https://go-zh.org/doc/">文档 - Go 编程语言 (go-zh.org)</a></li><li><a href="https://pythonav.com/wiki/detail/4/0/">pythonav资源分享</a></li></ol><h2 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h2><ol><li><a href="https://www.dxper.net/documents/">DevExpress中文帮助文档 (dxper.net)</a></li></ol><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li><a href="https://www.kancloud.cn/maozhenggang/monkey-cheats">程序员效率提升工具汇总 · 看云 (kancloud.cn)</a></li><li><a href="https://gitmind.cn/app/template?lang=zh">GitMind</a></li><li><a href="https://www.nginx.cn/doc/">Nginx中文文档</a></li><li><a href="https://vault.centos.org/">Index of / (centos.org)</a></li><li><a href="https://mp.weixin.qq.com/cgi-bin/loginpage?url=/cgi-bin/home?t=home/index&lang=zh_CN&token=749138273">微信公众平台 (qq.com)</a></li></ol><h2 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h2><ol><li><a href="http://www.pickfree.cn/">PICKFREE - 免费资源导航|免版权图片|免费商用字体|免费音频、视频等设计素材下载</a></li><li><a href="https://www.gaitubao.com/#">改图宝 - 在线修改照片大小尺寸工具 (gaitubao.com)</a></li><li><a href="https://www.51miz.com/">觅知网 - 版权图片素材网站,PPT模板,PS,AI,PNG图片素材会员免费下载 (51miz.com)</a></li><li><a href="https://wallhaven.cc/">Awesome Wallpapers - wallhaven.cc</a></li><li><a href="https://www.pexels.com/">https://www.pexels.com/</a></li></ol><h2 id="interest"><a href="#interest" class="headerlink" title="interest"></a>interest</h2><ol><li><a href="https://www.gushiwen.cn/">古诗文网-古诗文经典传承 (gushiwen.cn)</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>URL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My Tool Graph</title>
    <link href="/2021/10/29/My-Tool-Graph/"/>
    <url>/2021/10/29/My-Tool-Graph/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Integrated-Development-Environment"><a href="#Integrated-Development-Environment" class="headerlink" title="Integrated Development Environment"></a>Integrated Development Environment</h2><h3 id="CodeProducter"><a href="#CodeProducter" class="headerlink" title="CodeProducter"></a>CodeProducter</h3><p><a href="https://raw.githubusercontent.com/XLZF/CodeProducter/main/CodeProduct.msi">1.0.0.2</a></p><h3 id="Microsoft-Visual-Studio"><a href="#Microsoft-Visual-Studio" class="headerlink" title="Microsoft Visual Studio"></a>Microsoft Visual Studio</h3><p><a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioClient.MicrosoftVisualStudio2017InstallerProjects">Microsoft Visual Studio Installer Projects</a></p><h3 id="Microsoft-Visual-Code"><a href="#Microsoft-Visual-Code" class="headerlink" title="Microsoft Visual Code"></a>Microsoft Visual Code</h3><p><a href="https://code.visualstudio.com/download">Download</a></p><h2 id="DB-Server-Management"><a href="#DB-Server-Management" class="headerlink" title="DB Server Management"></a>DB Server Management</h2><h3 id="Microsoft-SQL-Server"><a href="#Microsoft-SQL-Server" class="headerlink" title="Microsoft  SQL Server"></a>Microsoft  SQL Server</h3><p><a href="https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads">SQL Server 下载 </a></p><h3 id="ORACLE"><a href="#ORACLE" class="headerlink" title="ORACLE"></a>ORACLE</h3><p><a href="https://www.oracle.com/index.html">Home Page</a></p><h3 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h3><p><a href="https://www.mysql.com/">Home Page</a></p><h2 id="DB-Management-Tool"><a href="#DB-Management-Tool" class="headerlink" title="DB Management Tool"></a>DB Management Tool</h2><h3 id="PLSQL"><a href="#PLSQL" class="headerlink" title="PLSQL"></a>PLSQL</h3><p><a href="https://www.oracle.com/database/technologies/appdev/plsql.html">Home Page</a></p><h3 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h3><p><a href="https://www.navicat.com.cn/">Home Page</a></p><h4 id="Navicat-Premium-连接Oracle"><a href="#Navicat-Premium-连接Oracle" class="headerlink" title="Navicat Premium 连接Oracle"></a>Navicat Premium 连接Oracle</h4><ol><li>先查询Oracle版本</li><li><code>select * from v$version</code></li><li>32 位 11.2.0.1.0</li><li>Navicat Premium 下载</li><li>安装32位的</li><li>破解</li><li>找到 <code>instantclient-basic-win32-11.2.0.1.0.zip</code></li><li>解压到D盘根目录（随便）</li><li>Navicat - 选项 - 其他 <code>oci.dll</code> 设置一下</li></ol><h3 id="DBeaver"><a href="#DBeaver" class="headerlink" title="DBeaver"></a>DBeaver</h3><p><a href="https://download.dbeaver.com/community/21.2.3/dbeaver-ce-21.2.3-x86_64-setup.exe">Download</a></p><h2 id="Git-Management-Tool"><a href="#Git-Management-Tool" class="headerlink" title="Git Management Tool"></a>Git Management Tool</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p><a href="https://git-scm.com/">Git Download</a></p><h3 id="TortoiseGit"><a href="#TortoiseGit" class="headerlink" title="TortoiseGit"></a>TortoiseGit</h3><p><a href="https://tortoisegit.org/download/">Download</a></p><p><a href="https://download.tortoisegit.org/tgit/2.12.0.0/TortoiseGit-LanguagePack-2.12.0.0-64bit-zh_CN.msi">Language</a></p><h3 id="SourceTree"><a href="#SourceTree" class="headerlink" title="SourceTree"></a>SourceTree</h3><p><a href="https://product-downloads.atlassian.com/software/sourcetree/windows/ga/SourceTreeSetup-3.4.1.exe">Download</a></p><h3 id="GitHubDesktop"><a href="#GitHubDesktop" class="headerlink" title="GitHubDesktop"></a>GitHubDesktop</h3><p><a href="https://desktop.github.com/">Download</a></p><h2 id="Download-Tool"><a href="#Download-Tool" class="headerlink" title="Download Tool"></a>Download Tool</h2><h3 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h3><p><a href="https://www.internetdownloadmanager.com/">Download</a> </p><h2 id="Print-Screen"><a href="#Print-Screen" class="headerlink" title="Print Screen"></a>Print Screen</h2><h3 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h3><p><a href="https://zh.snipaste.com/">Download</a></p><h2 id="Gif-Recording"><a href="#Gif-Recording" class="headerlink" title="Gif Recording"></a>Gif Recording</h2><h3 id="FScapture"><a href="#FScapture" class="headerlink" title="FScapture"></a>FScapture</h3><p><a href="https://www.faststonecapture.cn/">Download</a></p><h3 id="LICEcap"><a href="#LICEcap" class="headerlink" title="LICEcap"></a>LICEcap</h3><p><a href="https://www.cockos.com/licecap/">Download</a></p><h3 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h3><p><a href="https://www.screentogif.com/">Download</a></p><h2 id="Screen-control"><a href="#Screen-control" class="headerlink" title="Screen control"></a>Screen control</h2><h3 id="Mouse-without-Borders"><a href="#Mouse-without-Borders" class="headerlink" title="Mouse without Borders"></a>Mouse without Borders</h3><p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=35460">Download</a></p><h2 id="Figure-bed"><a href="#Figure-bed" class="headerlink" title="Figure bed"></a>Figure bed</h2><h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><p>玩这个图床前提还需要安装 <a href="http://nodejs.cn/download/">Node js 环境</a></p><p><a href="https://molunerfinn.com/PicGo/">Download</a></p><p>此工具需要配合代码托管平台，比如GitHub、Gitee…</p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211029230925649.png" alt="设置图床"></p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211029231021534.png" alt="安装插件"></p><p>还需要配合 Typora </p><p><img src="https://blogimage-1255495010.cos.ap-beijing.myqcloud.com/image-20211029231145747.png" alt="配置Typora图形偏好"></p><p>到此，配合上面记录的截图软件，写点东西，纵享丝滑。</p><h2 id="Server-Management"><a href="#Server-Management" class="headerlink" title="Server Management"></a>Server Management</h2><h3 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h3><p><a href="https://www.netsarang.com/zh/xshell/">Download</a></p><h2 id="API-Management-Tool"><a href="#API-Management-Tool" class="headerlink" title="API Management Tool"></a>API Management Tool</h2><h3 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h3><p><a href="https://www.postman.com/">Download</a></p><h2 id="Decompilation-Tool"><a href="#Decompilation-Tool" class="headerlink" title="Decompilation Tool"></a>Decompilation Tool</h2><h3 id="dnSpy"><a href="#dnSpy" class="headerlink" title="dnSpy"></a>dnSpy</h3><p><a href="https://github.com/dnSpy/dnSpy/releases">Download</a></p><h2 id="System-Tools"><a href="#System-Tools" class="headerlink" title="System Tools"></a>System Tools</h2><h3 id="CPU-Z"><a href="#CPU-Z" class="headerlink" title="CPU-Z"></a>CPU-Z</h3><p><a href="https://www.cpuid.com/">Download</a></p><h3 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h3><p><a href="https://www.voidtools.com/zh-cn/">Download</a></p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p><a href="https://www.typora.io/#windows">Download</a></p><h3 id="SwichHosts"><a href="#SwichHosts" class="headerlink" title="SwichHosts"></a>SwichHosts</h3><p><a href="https://github.com/oldj/SwitchHosts/releases">Download</a></p><p><a href="https://cdn.jsdelivr.net/gh/521xueweihan/GitHub520@main/hosts">GitHub520</a></p><h3 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h3><p><a href="http://ocr.tianruo.net/">天若OCR文字识别</a></p><h3 id="Redis-Manager"><a href="#Redis-Manager" class="headerlink" title="Redis Manager"></a>Redis Manager</h3><p><a href="https://github.com/uglide/RedisDesktopManager/releases/tag/0.9.3">Release 0.9.3 · uglide/RedisDesktopManager · GitHub</a></p>]]></content>
    
    
    <categories>
      
      <category>StorageBox</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Program</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
